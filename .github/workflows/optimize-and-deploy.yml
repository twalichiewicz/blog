name: Optimize and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  optimize-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for peaceiris/actions-gh-pages
      pages: write
      id-token: write
      deployments: write  # Required for deployment status
      pull-requests: write  # Required for PR comments
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: false

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Optimize images
      run: npm run optimize:images

    - name: Build site with optimizations
      run: npm run build:prod

    - name: Analyze build size
      run: |
        echo "Build size analysis:"
        npm run analyze
        
        echo "Largest files:"
        find public -type f -exec ls -la {} + | sort -k5 -nr | head -20

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        cname: thomas.design
        
    - name: Create deployment status for PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          // Create a deployment for the PR
          const deployment = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.payload.pull_request.head.sha,
            task: 'deploy',
            auto_merge: false,
            required_contexts: [],
            environment: 'github-pages',
            description: 'PR Preview Build'
          });
          
          // Create a successful deployment status
          await github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: deployment.data.id,
            state: 'success',
            environment_url: `https://${context.repo.owner}.github.io/${context.repo.repo}/`,
            description: 'PR build completed successfully (no deployment)',
            auto_inactive: false
          }); 