<div id="projectsContent" class="portfolio-list portfolio-list--redesigned" role="tabpanel" aria-labelledby="tab-portfolio">
    <div class="column-title portfolio-column-title">Projects</div>
    
    <!-- Filters dropdown -->
    <div class="portfolio-controls">
        <div class="filters-dropdown-container">
            <button class="posts-only-button filters-toggle" id="filtersToggle">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="filter-icon" style="width: 14px; height: 14px; margin-right: 4px; vertical-align: -2px;">
                    <path d="M3 6h18M7 12h10M9 18h6"/>
                </svg>
                Filters
                <span class="filter-count-pip" style="display: none;">0</span>
            </button>
            
            <div class="filters-dropdown" id="filtersDropdown" style="display: none;">
                <div class="filters-dropdown-content">
                    <div class="filters-dropdown-header">
                        <h3>Filter Projects</h3>
                        <button class="filter-clear">Clear all</button>
                    </div>
                    
                    <div class="portfolio-filters">
                        <% if (typeof filterCategories !== 'undefined') { %>
                            <% Object.entries(filterCategories).forEach(([category, filters]) => { %>
                                <div class="filter-category" data-category="<%- category %>">
                                    <div class="filter-category-label"><%- category.charAt(0).toUpperCase() + category.slice(1) %></div>
                                    <div class="filter-pills">
                                        <% filters.forEach(filter => { %>
                                            <button class="filter-pill" data-filter="<%- filter.toLowerCase().replace(/\s+/g, '-') %>" data-category="<%- category %>">
                                                <%- filter %>
                                            </button>
                                        <% }) %>
                                    </div>
                                </div>
                            <% }) %>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <% if (projectPosts.length > 0) { %>
        <% 
        // Separate featured (with writeups) and non-featured projects
        const featuredProjects = [];
        const nonFeaturedProjects = {};
        
        projectPosts.forEach(function(post) {
            if (!post.draft) {
                if (post.has_writeup !== false) {
                    featuredProjects.push(post);
                } else {
                    const company = post.company || 'Other Projects';
                    if (!nonFeaturedProjects[company]) {
                        nonFeaturedProjects[company] = [];
                    }
                    nonFeaturedProjects[company].push(post);
                }
            }
        });
        
        // Sort featured projects by date (most recent first)
        featuredProjects.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
        
        // Get company order for non-featured section
        const companyOrder = config.portfolio?.companies?.order || [
            'Autodesk',
            'Human Interest', 
            'Common Cents Lab',
            'Lyra Health',
            'Maisha Meds',
            'Other Projects'
        ];
        
        %>
        
        <%
        // Define filter categories (moved outside conditionals to be accessible in modal)
        const filterCategories = {
            discipline: ['UX Design', 'UI Design', 'Research', 'Brand Design', 'Systems Design'],
            type: ['Web App', 'Mobile App', 'Design System', 'Desktop App', 'Platform'],
            skills: ['Prototyping', 'User Research', 'Visual Design', 'Data Viz', 'Strategy'],
            industry: ['FinTech', 'Enterprise', 'Healthcare', 'Creative Tools', 'Social Impact']
        };
        %>
        
        <!-- Featured Projects Grid -->
        <div class="portfolio-featured-grid">
            <% featuredProjects.forEach(function(post) { %>
                <a href="<%- url_for(post.path) %>" class="portfolio-item-wrapper" 
                   data-discipline="<%- (post.tags?.discipline || []).join(' ').toLowerCase().replace(/\s+/g, '-') %>"
                   data-type="<%- (post.tags?.type || []).join(' ').toLowerCase().replace(/\s+/g, '-') %>"
                   data-skills="<%- (post.tags?.skills || []).join(' ').toLowerCase().replace(/\s+/g, '-') %>"
                   data-industry="<%- (post.tags?.industry || []).join(' ').toLowerCase().replace(/\s+/g, '-') %>"
                   <% if (post.notebook_color) { %>data-notebook-color="<%- post.notebook_color %>"<% } %>
                   <% if (post.notebook_texture) { %>data-notebook-texture="<%- post.notebook_texture %>"<% } %>
                   <% if (post.notebook_brand) { %>data-notebook-brand="<%- post.notebook_brand %>"<% } %>
                   <% if (post.notebook_brand_text) { %>data-notebook-brand-text="<%- post.notebook_brand_text %>"<% } %>
                   <% if (post.notebook_effect) { %>data-notebook-effect="<%- post.notebook_effect %>"<% } %>
                   <% if (post.notebook_stickers) { %>data-notebook-stickers="true"<% } %>>
                    <div class="portfolio-item portfolio-item--featured">
                        <!-- Skeleton UI placeholder -->
                        <div class="notebook-skeleton">
                            <div class="skeleton-notebook"></div>
                            <div class="skeleton-info">
                                <div class="skeleton-title"></div>
                                <div class="skeleton-byline"></div>
                            </div>
                        </div>
                        
                        <% if (post.cover_image) { %>
                            <div class="notebook">
                                <!-- Back cover (base layer) -->
                                <div class="back-cover"></div>
                                
                                <!-- Page block (middle pages) -->
                                <div class="page-block"></div>
                                
                                <!-- Additional page layer for thickness -->
                                <div class="page-layer-2"></div>
                                
                                <!-- Inside back cover -->
                                <div class="inside-back-cover"></div>
                                
                                <!-- Inside pages with content (right page) -->
                                <div class="inside-pages">
                                    <% 
                                    // Check for custom notebook pages image first (right page)
                                    if (post.notebook_pages || post.notebook_page_right) {
                                        let notebookPagesPath = post.notebook_page_right || post.notebook_pages;
                                        if (!notebookPagesPath.startsWith('/') && !notebookPagesPath.startsWith('http')) {
                                            if (/^\d{4}\/\d{2}\/\d{2}\//.test(notebookPagesPath)) {
                                                notebookPagesPath = '/' + notebookPagesPath;
                                            } else {
                                                notebookPagesPath = post.path + notebookPagesPath;
                                            }
                                        }
                                    %>
                                        <img class="notebook-pages-custom" src="<%- url_for(notebookPagesPath) %>" alt="<%- post.title %> notebook pages" />
                                    <% } else { %>
                                        <% 
                                        // Default: Use cover image as full notebook page
                                        let coverImagePath = post.cover_image;
                                        const isVideo = /\.(mp4|webm|ogg|mov)$/i.test(post.cover_image);
                                        
                                        if (isVideo && post.cover_video_poster) {
                                            // Use poster for video covers
                                            coverImagePath = post.cover_video_poster;
                                        }
                                        
                                        if (coverImagePath) {
                                            if (!coverImagePath.startsWith('/') && !coverImagePath.startsWith('http')) {
                                                if (/^\d{4}\/\d{2}\/\d{2}\//.test(coverImagePath)) {
                                                    coverImagePath = '/' + coverImagePath;
                                                } else {
                                                    coverImagePath = post.path + coverImagePath;
                                                }
                                            }
                                            // Use cover image as full notebook page
                                            %>
                                            <img class="notebook-pages-custom" src="<%- url_for(coverImagePath) %>" alt="<%- post.title %> notebook pages" />
                                        <% } else { %>
                                            <!-- Fallback: paperclip photo for future use -->
                                            <div class="paperclip-photo paperclip-placeholder">
                                                <!-- Empty placeholder -->
                                            </div>
                                        <% } %>
                                    <% } %>
                                </div>
                                
                                <!-- Inside front cover (left page) -->
                                <div class="inside-front-cover">
                                    <% 
                                    // Check for custom notebook left page image
                                    if (post.notebook_page_left) {
                                        let notebookLeftPath = post.notebook_page_left;
                                        if (!notebookLeftPath.startsWith('/') && !notebookLeftPath.startsWith('http')) {
                                            if (/^\d{4}\/\d{2}\/\d{2}\//.test(notebookLeftPath)) {
                                                notebookLeftPath = '/' + notebookLeftPath;
                                            } else {
                                                notebookLeftPath = post.path + notebookLeftPath;
                                            }
                                        }
                                    %>
                                        <img class="notebook-page-left-custom" src="<%- url_for(notebookLeftPath) %>" alt="<%- post.title %> left page" />
                                    <% } %>
                                </div>
                                
                                <!-- Front cover backing (prevents sticker bleed-through) -->
                                <div class="front-cover-backing"></div>
                                
                                <!-- Front cover (top layer) -->
                                <div class="front-cover"
                                     <% if (post.notebook_stickers && post.notebook_stickers.length > 0) { %>
                                         <% post.notebook_stickers.forEach((sticker, index) => { 
                                             if (sticker && index < 4) { 
                                                 const stickerNum = index + 1;
                                                 const defaultBgs = ['#ff4444', '#ffeb3b', '#4CAF50', '#9C27B0'];
                                                 const defaultColors = ['#fff', '#000', '#fff', '#fff'];
                                                 const defaultRotates = ['-5deg', '3deg', '-2deg', '8deg'];
                                                 const defaultShapes = ['rectangle', 'rectangle', 'rounded', 'circle'];
                                         %>
                                             data-sticker-<%- stickerNum %>="<%- sticker.text %>"
                                             <% if (index === 0) { %>
                                             style="<%- Object.entries({
                                                 '--sticker-1-color': sticker.color || defaultColors[0],
                                                 '--sticker-1-bg': sticker.bg || defaultBgs[0],
                                                 '--sticker-1-rotate': sticker.rotate || defaultRotates[0],
                                                 '--sticker-1-shape': sticker.shape || defaultShapes[0],
                                                 '--sticker-1-top': sticker.top,
                                                 '--sticker-1-right': sticker.right,
                                                 '--sticker-1-bottom': sticker.bottom,
                                                 '--sticker-1-left': sticker.left
                                             }).filter(([k,v]) => v).map(([k,v]) => `${k}: ${v}`).join('; ') %>;"
                                             <% } else if (index === 1) { %>
                                             style="<%- Object.entries({
                                                 '--sticker-2-color': sticker.color || defaultColors[1],
                                                 '--sticker-2-bg': sticker.bg || defaultBgs[1],
                                                 '--sticker-2-rotate': sticker.rotate || defaultRotates[1],
                                                 '--sticker-2-shape': sticker.shape || defaultShapes[1],
                                                 '--sticker-2-top': sticker.top,
                                                 '--sticker-2-right': sticker.right,
                                                 '--sticker-2-bottom': sticker.bottom,
                                                 '--sticker-2-left': sticker.left
                                             }).filter(([k,v]) => v).map(([k,v]) => `${k}: ${v}`).join('; ') %>;"
                                             <% } %>
                                         <% } 
                                         }); %>
                                     <% } %>
                                >
                                    <% if (post.notebook_stickers && post.notebook_stickers.length > 2) { %>
                                        <% if (post.notebook_stickers[2]) { %>
                                            <span class="sticker-3" data-sticker-3="<%- post.notebook_stickers[2].text %>" 
                                                  style="<%- Object.entries({
                                                      '--sticker-3-color': post.notebook_stickers[2].color || '#fff',
                                                      '--sticker-3-bg': post.notebook_stickers[2].bg || '#4CAF50',
                                                      '--sticker-3-rotate': post.notebook_stickers[2].rotate || '-2deg',
                                                      '--sticker-3-shape': post.notebook_stickers[2].shape || 'rounded',
                                                      '--sticker-3-top': post.notebook_stickers[2].top,
                                                      '--sticker-3-right': post.notebook_stickers[2].right,
                                                      '--sticker-3-bottom': post.notebook_stickers[2].bottom,
                                                      '--sticker-3-left': post.notebook_stickers[2].left
                                                  }).filter(([k,v]) => v).map(([k,v]) => `${k}: ${v}`).join('; ') %>;"></span>
                                        <% } %>
                                        <% if (post.notebook_stickers[3]) { %>
                                            <span class="sticker-4" data-sticker-4="<%- post.notebook_stickers[3].text %>" 
                                                  style="<%- Object.entries({
                                                      '--sticker-4-color': post.notebook_stickers[3].color || '#fff',
                                                      '--sticker-4-bg': post.notebook_stickers[3].bg || '#9C27B0',
                                                      '--sticker-4-rotate': post.notebook_stickers[3].rotate || '8deg',
                                                      '--sticker-4-shape': post.notebook_stickers[3].shape || 'circle',
                                                      '--sticker-4-top': post.notebook_stickers[3].top,
                                                      '--sticker-4-right': post.notebook_stickers[3].right,
                                                      '--sticker-4-bottom': post.notebook_stickers[3].bottom,
                                                      '--sticker-4-left': post.notebook_stickers[3].left
                                                  }).filter(([k,v]) => v).map(([k,v]) => `${k}: ${v}`).join('; ') %>;"></span>
                                        <% } %>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                    <div class="portfolio-info">
                        <h4 class="portfolio-title"><%- post.display_name || post.title %></h4>
                        <% if (post.display_description || post.byline) { %>
                            <p class="portfolio-byline"><%- post.display_description || post.byline %></p>
                        <% } %>
                    </div>
                </a>
            <% }) %>
        </div>
        
        <% if (Object.keys(nonFeaturedProjects).length > 0) { %>
            <!-- Even More Section -->
            <div class="portfolio-more-section">
                <div class="portfolio-more-transition"></div>
                <div class="portfolio-more-content">
                    <h2 class="portfolio-more-title">That's just scratching the surface</h2>
                    
                    <div class="portfolio-more-grid">
                        <% 
                        // Sort companies by predefined order
                        const sortedCompanies = Object.keys(nonFeaturedProjects).sort((a, b) => {
                            const indexA = companyOrder.indexOf(a);
                            const indexB = companyOrder.indexOf(b);
                            
                            if (indexA !== -1 && indexB !== -1) {
                                return indexA - indexB;
                            }
                            
                            if (indexA !== -1) return -1;
                            if (indexB !== -1) return 1;
                            
                            if (a === 'Other Projects') return 1;
                            if (b === 'Other Projects') return -1;
                            return a.localeCompare(b);
                        });
                        %>
                        
                        <% sortedCompanies.forEach(function(company) { %>
                            <div class="portfolio-more-company">
                                <h3 class="portfolio-more-company-name">
                                    <%- company %>
                                    <% 
                                    const companyYears = config.portfolio?.companies?.years || {
                                        'Autodesk': '2019—Present',
                                        'Human Interest': '2017—2019',
                                        'Common Cents Lab': '2016—2017',
                                        'Lyra Health': '2015',
                                        'Maisha Meds': '2013-2014'
                                    };
                                    if (companyYears[company]) { %>
                                        <span class="company-years"><%- companyYears[company] %></span>
                                    <% } %>
                                </h3>
                                <div class="portfolio-more-projects">
                                    <% nonFeaturedProjects[company].forEach(function(post) { %>
                                        <div class="portfolio-more-project"><%- post.title %></div>
                                    <% }) %>
                                </div>
                            </div>
                        <% }) %>
                    </div>
                </div>
            </div>
        <% } %>
    <% } else { %>
        <%- partial('_partial/loading-skull') %>
    <% } %>
</div>

