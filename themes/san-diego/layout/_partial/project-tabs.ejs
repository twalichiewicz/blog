<%
// Check if the post uses the new structured summary format
const hasSummary = page.summary && Object.keys(page.summary).length > 0;
%>

<% if (hasSummary) { %>
  <!-- Use new Summary component. HIDING MY BABY BOY FOR NOW -TW -->
  <!-- <%- partial('project-summary') %> -->
  
  <!-- Gallery section -->
  <% if (page.gallery_images && page.gallery_images.length > 0) { %>
    <div class="project-gallery-section">
      <h2>Gallery</h2>
      <div class="project-gallery-full">
        <div class="carousel" aria-label="Project gallery">
          <div class="carousel-track">
            <% page.gallery_images.forEach((item, index) => { %>
              <div class="carousel-slide <%= index === 0 ? 'active' : '' %>" aria-hidden="<%= index === 0 ? 'false' : 'true' %>">
                <% if (item.type === 'video') { %>
                  <% 
                  const autoplay = item.autoplay !== false;
                  const loop = item.loop !== false;
                  const muted = item.muted !== false;
                  
                  let rawPosterPath = item.poster;
                  if (rawPosterPath && rawPosterPath.length > 1 && rawPosterPath.startsWith('"') && rawPosterPath.endsWith('"')) {
                      rawPosterPath = rawPosterPath.substring(1, rawPosterPath.length - 1);
                  }

                  let galleryItemPosterPath = rawPosterPath;
                  if (rawPosterPath && !rawPosterPath.startsWith('/') && !rawPosterPath.startsWith('http')) {
                      galleryItemPosterPath = page.path + rawPosterPath;
                  }
                  const finalPosterSrc = galleryItemPosterPath ? url_for(galleryItemPosterPath) : '';
                  %>
                  <video controls preload="metadata" playsinline crossorigin="anonymous" <%= finalPosterSrc ? `poster="${finalPosterSrc}"` : '' %> <%= autoplay ? 'autoplay' : '' %> <%= loop ? 'loop' : '' %> <%= muted ? 'muted' : '' %>>
                    <% if (item.url && item.url.endsWith('.mp4')) { %>
                      <% 
                      let videoGalleryFileToProcess = item.url;
                      if (item.url && !item.url.startsWith('/') && !item.url.startsWith('http')) {
                          videoGalleryFileToProcess = page.path + item.url;
                      }
                      const resolvedGalleryVideoPath = url_for(videoGalleryFileToProcess);
                      const baseGalleryVideoPathForVariants = resolvedGalleryVideoPath.replace(/\.(mp4|webm|ogg|mov)$/i, '');
                      const webmGalleryVariant = baseGalleryVideoPathForVariants.replace('-simple', '-compatible') + '.webm';
                      const mp4GalleryVariant = baseGalleryVideoPathForVariants.replace('-simple', '-compatible') + '.mp4';
                      %>
                      <source src="<%- webmGalleryVariant %>" type="video/webm">
                      <source src="<%- mp4GalleryVariant %>" type="video/mp4">
                      <source src="<%- resolvedGalleryVideoPath %>" type="video/mp4">
                    <% } else if (item.url) { 
                      let otherVideoPath = item.url;
                      if (item.url && !item.url.startsWith('/') && !item.url.startsWith('http')) {
                          otherVideoPath = page.path + item.url;
                      }
                    %>
                      <source src="<%- url_for(otherVideoPath) %>" type="<%= item.videoType || 'video/mp4' %>">
                    <% } %>
                    <%
                    let downloadVideoPath = item.url;
                    if (item.url && !item.url.startsWith('/') && !item.url.startsWith('http')) {
                        downloadVideoPath = page.path + item.url;
                    }
                    %>
                    <p>Your browser does not support the video tag. <a href="<%- url_for(downloadVideoPath) %>" target="_blank">Download the video</a> instead.</p>
                  </video>
                <% } else if (item.type === 'iframe') { %>
                  <iframe src="<%= item.url %>" 
                    frameborder="0"
                    allowfullscreen
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    loading="lazy"
                    style="width: 100%; height: 100%; border: none;"
                    title="<%= item.caption || 'Embedded content' %>">
                  </iframe>
                <% } else { // Image type %>
                  <%
                  let galleryImagePath = item.url || item.src;
                  if (galleryImagePath && !galleryImagePath.startsWith('/') && !galleryImagePath.startsWith('http')) {
                      galleryImagePath = page.path + galleryImagePath;
                  }
                  %>
                  <img src="<%- url_for(galleryImagePath) %>" 
                    alt="<%= item.caption || item.alt || '' %>"
                    loading="lazy"
                    decoding="async">
                <% } %>
                <% if (item.caption) { %>
                  <div class="carousel-caption"><%= item.caption %></div>
                <% } %>
              </div>
            <% }); %>
            <% if (page.gallery_images.length > 1) { %>
              <div class="carousel-indicators">
                <button class="carousel-button prev" aria-label="Previous slide"></button>
                <% page.gallery_images.forEach((_, index) => { %>
                  <button class="indicator <%= index === 0 ? 'active' : '' %>" aria-label="Go to slide <%= index + 1 %>"></button>
                <% }); %>
                <button class="carousel-button next" aria-label="Next slide"></button>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  <% } %>
  
  <!-- Render the main content after the summary -->
  <% if (page.content) { %>
    <div class="project-writeup">
      <div class="writeup-content">
        <%- page.content %>
      </div>
    </div>
  <% } %>

<% } else { %>
  <!-- Fallback to original parsing method for backward compatibility -->
  <%
  // Parse the content to extract key sections and longer writeup
  const content = page.content;
  const sections = {};
  let longerWriteup = '';

  // Split content by the separator (<hr>) if it exists
  const parts = content.split('<hr>');
  const mainContent = parts[0];
  longerWriteup = parts.length > 1 ? parts[1].trim() : '';

  // Extract key sections from main content - updated regex for HTML format
  // The structure is: <h2 id="..."><a href="..." class="headerlink" title="..."></a>TITLE</h2>CONTENT
  const sectionRegex = /<h2[^>]*><a[^>]*><\/a>(The Problem|The Solution|Innovation[^<]*|Impact[^<]*)<\/h2>([\s\S]*?)(?=<h2|$)/g;
  let match;

  while ((match = sectionRegex.exec(mainContent)) !== null) {
    const title = match[1].trim();
    const content = match[2].trim();
    
    // Clean up titles like "Key Innovation: The Component System" to just "Key Innovation"
    const cleanTitle = title.replace(/^(Innovation).*/, '$1');
    
    sections[cleanTitle] = content;
  }

  // Define the order of tabs with display names
  const tabConfig = [
    { key: 'The Problem', display: 'Problem' },
    { key: 'The Solution', display: 'Solution' },
    { key: 'Key Innovation', display: 'Innovation' },
    { key: 'Impact', display: 'Impact' }
  ];
  const availableTabs = tabConfig.filter(tab => sections[tab.key]);
  %>

  <% if (availableTabs.length > 0) { %>
  <div class="project-tabs">
    <div class="tab-navigation">
      <% availableTabs.forEach((tab, index) => { %>
        <button class="tab-button <%= index === 0 ? 'active' : '' %>" data-tab="<%= tab.display.toLowerCase().replace(/\s+/g, '-') %>">
          <%= tab.display %>
        </button>
      <% }); %>
    </div>
    
    <div class="tab-content">
      <% availableTabs.forEach((tab, index) => { %>
        <div class="tab-panel <%= index === 0 ? 'active' : '' %>" id="<%= tab.display.toLowerCase().replace(/\s+/g, '-') %>">
          <div class="tab-panel-content">
            <%- sections[tab.key] %>
          </div>
        </div>
      <% }); %>
    </div>
  </div>
  <% } else { %>
  <!-- Fallback: Render content using existing method for projects without structured sections -->
  <article class="project-description">
    <%- mainContent %>
  </article>
  <% } %>

  <% if (longerWriteup) { %>
  <div class="project-writeup">
    <div class="writeup-content">
      <%- longerWriteup %>
    </div>
  </div>
  <% } %>
<% } %> 