<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title><%= config.title %><% if (config.subtitle) { %> | <%= config.subtitle %><% } %></title>
	<%- partial('_partial/head') %>
	<style>
		/* Fade-in animation styles */
		.page-transition-overlay {
			position: fixed;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background-color: #000;
			z-index: 9999;
			opacity: 1;
			transition: opacity 1s ease-out;
		}
		
		.page-transition-overlay.fade-out {
			opacity: 0;
		}
		
		body {
			opacity: 0;
			transition: opacity 0.5s ease-in;
		}
		
		body.loaded {
			opacity: 1;
		}
	</style>
</head>
<body>
<%- partial('_partial/skip-navigation') %>

<!-- Page transition overlay -->
<div class="page-transition-overlay"></div>

<main class="blog" id="main-content">
    <div class="blog-header">
        <%- partial('_partial/profile-header') %>
    </div>
    <div class="blog-content">
        <div class="content-inner-wrapper">
            <div class="tabs-wrapper">
                <div class="mobile-tabs" role="tablist" aria-label="Content Sections">
                    <button class="tab-button active" data-type="blog" role="tab" aria-selected="true" aria-controls="postsContent" id="tab-blog">Words</button>
                    <button class="tab-button" data-type="portfolio" role="tab" aria-selected="false" aria-controls="projectsContent" id="tab-portfolio">Works</button>
                </div>
            </div>

            <% 
            // Separate posts and projects
            const allPosts = site.posts.toArray();
            
            // Define the allowed long form post titles
            const allowedLongFormPosts = [
                "How creative mediums find their voice",
                "Rethinking mobile hardware interaction patterns",
                "macOS + spatialOS = ?"
            ];
            
            const blogPosts = allPosts.filter(post => {
                // Must have blog tag and not be a draft
                if (!post.tags || !post.tags.toArray().some(tag => tag.name === 'blog') || post.draft) {
                    return false;
                }
                
                // Filter to only show allowed long form posts
                const isLongFormPost = !post.type && !post.short; // Regular posts (not links or musings)
                if (isLongFormPost) {
                    return allowedLongFormPosts.includes(post.title);
                }
                
                // Show all link posts and musings
                return true;
            }).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

            const projectPosts = allPosts.filter(post => 
                post.tags && post.tags.toArray().some(tag => tag.name === 'portfolio') && !post.draft
            ).sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
            %>

            <div class="content-wrapper">
                <%- partial('_partial/blog-posts', { blogPosts: blogPosts }) %>
                <%- partial('_partial/portfolio-projects', { projectPosts: projectPosts, config: config }) %>
            </div>
        </div>
    </div>
</main>

<%- partial('_partial/contact-modal') %>
<%- partial('_partial/impact-modal') %>

<!-- Temporarily using standalone version without ES6 imports -->
<script src="<%- url_for('js/blog-standalone.js') %>"></script>
<script src="<%- url_for('js/code-sandbox.js') %>"></script>
<script src="<%- url_for('js/blog-debug.js') %>"></script>
<script src="<%- url_for('js/portfolio-filters.js') %>"></script>
<script src="<%- url_for('js/blog-init.js') %>"></script>
<script src="<%- url_for('js/anchor-links-simple.js') %>"></script>
<script src="<%- url_for('js/visibility-debug.js') %>"></script>

<script>
	// Page fade-in animation
	function initiatePageFadeIn() {
		// Ensure this runs only once if called multiple times rapidly
		if (document.body.classList.contains('fade-in-initialized')) {
			// If already loaded and overlay is gone, ensure body is opaque
			if (document.body.classList.contains('loaded') && 
			    (!document.querySelector('.page-transition-overlay') || document.querySelector('.page-transition-overlay').style.display === 'none')) {
				document.body.style.opacity = '1'; // Ensure body is visible if animation was completed
			}
			return;
		}
		document.body.classList.add('fade-in-initialized');

		let animationComplete = false;

		function completeAnimation() {
			if (animationComplete) return;
			animationComplete = true;

			document.body.classList.add('loaded');
			const overlay = document.querySelector('.page-transition-overlay');
			if (overlay) {
				overlay.classList.add('fade-out');
				setTimeout(function() {
					if (overlay) overlay.style.display = 'none';
				}, 1000); // Match CSS transition
			} else {
				// If somehow overlay is not there, ensure body is visible
				document.body.style.opacity = '1';
			}
		}

		// Wait for images to load (primary trigger)
		window.addEventListener('load', function() {
			setTimeout(completeAnimation, 800); // 800ms delay
		});
		
		// Fallback in case load event doesn't fire or is too slow
		setTimeout(completeAnimation, 3000); // Increased timeout
		
		// Additional safeguard - ensure content is visible after max wait time
		setTimeout(function() {
			document.body.style.opacity = '1';
			document.body.classList.add('loaded');
			const overlay = document.querySelector('.page-transition-overlay');
			if (overlay) {
				overlay.style.display = 'none';
			}
		}, 4000);
	}

	document.addEventListener('DOMContentLoaded', function() {
		initiatePageFadeIn();
	});

	window.addEventListener('pageshow', function(event) {
		if (event.persisted) {
            // Page is loaded from bfcache - ensure content is visible immediately
			document.body.style.opacity = '1';
			document.body.classList.add('loaded');
			document.body.classList.add('fade-in-initialized');

			// Hide the overlay immediately
			const overlay = document.querySelector('.page-transition-overlay');
			if (overlay) {
				overlay.style.display = 'none';
				overlay.style.opacity = '0';
				overlay.classList.add('fade-out');
			}
		} else {
			// Normal page load - ensure fade-in happens
			if (!document.body.classList.contains('fade-in-initialized')) {
				initiatePageFadeIn();
			}
		}
	});
	// Handle direct navigation to blog posts and projects via URL parameter
	document.addEventListener('DOMContentLoaded', function() {
	    // REDIRECT FIX: Enhanced protection against unwanted redirects
	    if (window.location.pathname === '/' && window.location.search === '' && window.location.hash === '') {
	        console.log('[RedirectFix] On homepage, clearing any problematic states');
	        
	        // Clear ALL session storage that might cause redirects
	        sessionStorage.removeItem('previousUrl');
	        sessionStorage.removeItem('previousTab');
	        sessionStorage.removeItem('portfolio-back-navigation');
	        sessionStorage.removeItem('currentPage'); // Additional cleanup
	        sessionStorage.removeItem('lastVisited'); // Additional cleanup
	        
	        // Clear any problematic history states
	        if (history.state && history.state.path) {
	            if (history.state.path.includes('YouTube-Timecode-Commentary') || 
	                history.state.path.includes('/2025/06/25/') ||
	                history.state.isDynamic) {
	                console.log('[RedirectFix] Clearing problematic history state:', history.state);
	                history.replaceState({ path: '/', isInitial: true, isDynamic: false }, '', '/');
	            }
	        }
	        
	        // Clear any stored navigation intentions
	        if (window.fetchAndDisplayContent) {
	            window.fetchAndDisplayContent = null;
	        }
	        
	        // Don't process any URL parameters if we're on the clean homepage
	        return;
	    }
	    
	    // Check if we have a post or project parameter
	    const urlParams = new URLSearchParams(window.location.search);
	    const postPath = urlParams.get('post');
	    const projectPath = urlParams.get('project');

	    if (postPath || projectPath) {
	        const path = postPath || projectPath;
	        const isProject = !!projectPath;
        
        // Load the content
        setTimeout(function() {
            const blogContent = document.querySelector('.blog-content');
            if (blogContent && window.fetchAndDisplayContent) {
                // Switch to appropriate tab first
                if (window.mobileTabs && typeof window.mobileTabs.switchTab === 'function') {
                    window.mobileTabs.switchTab(isProject ? 'portfolio' : 'blog', true);
                }
                // Load the content
                window.fetchAndDisplayContent(path, false, isProject);
                
                // Clean up the URL to show the actual post/project path
                window.history.replaceState({ path: path, isDynamic: true, isProject: isProject }, '', path);
            }
        }, 500); // Small delay to ensure everything is initialized
    }
});
</script>
</body>
</html>