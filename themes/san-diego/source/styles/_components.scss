@use 'variables';
@use "sass:color";

@mixin button-styles {
	padding: 0.5rem 1rem;
	border: 1px solid currentcolor;
	border-radius: 6px;
	background: transparent;
	font-family: inherit;
	font-size: 14px;
	text-decoration: none;
	cursor: pointer;
	display: inline-block;
	transition: all 150ms ease;

	&:hover {
		background: currentcolor;
		color: variables.$white;
	}

	&.active {
		background: variables.$link-color;
		color: variables.$white;
	}
}

.button,
button {
	@include button-styles;
}

.card-grid {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	max-width: 1000px;
	margin: auto;
	padding: 0 16px;

	@media screen and (width <=1000px) {
		max-width: 800px;
	}

	@media screen and (max-width: variables.$mobile-breakpoint) {
		grid-template-columns: repeat(2, 1fr);
	}

	@media screen and (width <=600px) {
		display: block;
	}
}

.card {
	overflow: hidden;
	border-radius: 16px;
	background-color: variables.$card-bg;
	margin-bottom: 21px;
	transition: all 200ms ease;
}

.post-video {
	width: 100%;
	max-width: 100%;
	height: auto;
	border-radius: 8px;
	margin: 24px 0;
}

.segmented-button {
	display: flex;
	gap: 0.5rem;
	padding: 0.25rem;
	border-radius: 8px;
	background: variables.$white-1;
	border: 1px solid variables.$border-color;

	@media screen and (max-width: variables.$mobile-breakpoint) {
		display: none;
	}

	button {
		flex: 1;
		border: none;
		background: none;
		padding: 0.5rem 1rem;
		border-radius: 6px;
		cursor: pointer;
		transition: all 0.2s ease;

		&.active {
			background: variables.$white;
			box-shadow: variables.$shadow-soft;
		}
	}
}

.external-icon {
	align-self: center;
	flex-shrink: 0;
	width: 24px;
	height: 24px;
	border-radius: 12px;
	background: variables.$white-1;
	border: 1px solid variables.$border-color;
	display: flex;
	align-items: center;
	justify-content: center;
	opacity: 0.8;
	transform: translateX(0);
	transition: all 0.2s ease-in-out;
	margin-top: 0;
	color: variables.$text-color;
	font-size: 12px;

	&:hover {
		background: variables.$link-color;
		border-color: variables.$link-color;
		color: variables.$white;
	}
}

.archive-toggle {
	display: flex;
	gap: 0.5rem;
	margin-bottom: 20px;

	button {
		&.active {
			background: variables.$link-color;
			color: variables.$white;
		}
	}
}

blockquote {
	margin: 24px 0;
	padding: 16px 24px;
	border-left: 4px solid variables.$link-color;
	background: variables.$card-bg;
	border-radius: 4px;

	p {
		margin: 0;
		color: variables.$text-color;
		font-style: italic;

		&:not(:last-child) {
			margin-bottom: 16px;
		}
	}

	cite {
		display: block;
		margin-top: 8px;
		font-size: 0.9em;
		color: variables.$text-color-secondary;
		font-style: normal;

		&::before {
			content: "â€”";
			margin-right: 8px;
		}
	}
}

.alert {
	display: flex;
	align-items: flex-start;
	padding: 1rem 1.25rem;
	margin: 1.5rem 0;
	border-radius: 12px;
	font-size: 15px;
	line-height: 1.5;
	background-color: variables.$white-1;
	border: 1px solid variables.$border-color;
	color: variables.$text-color;

	&--warning {
		background-color: #fff9eb;
		border-color: #ffd77a;
	}

	&--error {
		background-color: #fef1f1;
		border-color: #facfcf;
	}

	&--success {
		background-color: #f1f9f1;
		border-color: #cfeacf;
	}

	&-icon {
		flex-shrink: 0;
		margin-right: 0.75rem;
		margin-top: 0.125rem;

		svg {
			width: 20px;
			height: 20px;
		}
	}

	&-content {
		flex: 1;

		h3 {
			margin: 0 0 6px;
			font-size: 15px !important;
			color: variables.$text-color;
		}

		p {
			margin: 0;
			font-size: 12px;

			&:not(:last-child) {
				margin-bottom: 0.5rem;
			}
		}

		a {
			color: variables.$link-color;
			text-decoration: none;

			&:hover {
				text-decoration: underline;
			}
		}
	}
}

// Tag styling component
.post-tags {
	display: flex;
	flex-wrap: wrap;
	gap: 0.5rem;
	margin-bottom: variables.$space-md;
}

.tag {
	display: inline-block;
	padding: 0.25rem 0.5rem;
	background-color: variables.$accent-gold-light;
	border: 1px solid variables.$accent-gold;
	border-radius: 4px;
	font-size: 9px;
	font-weight: 500;
	line-height: 1;
	color: variables.$accent-gold-dark;
	box-shadow: variables.$shadow-soft;

	&--new {
		background-color: variables.$link-color;
		border-color: variables.$link-color;
		color: variables.$white;
	}
}

@media (prefers-color-scheme: dark) {

	.button,
	button {
		color: variables.$link-color-dark;

		&.active {
			background: variables.$link-color-dark;
		}
	}

	.segmented-button {
		background: variables.$card-bg-dark;
	}

	.tag {
		background-color: rgb(255 255 255 / 10%);
		border-color: rgb(255 255 255 / 20%);
		color: hsl(0deg 0% 90%);
		box-shadow: 0 2px 4px rgb(0 0 0 / 20%), 0 1px 2px rgb(0 0 0 / 30%);

		&--new {
			background-color: #422006;
			border-color: #92400e;
			color: #fdba74;
		}
	}

	.alert {
		background-color: variables.$card-bg-dark;
		border-color: variables.$border-color-dark;
		color: variables.$text-color-dark;

		&--warning {
			background-color: rgb(255 215 122 / 10%);
			border-color: rgb(255 215 122 / 30%);
		}

		&--error {
			background-color: rgb(250 207 207 / 10%);
			border-color: rgb(250 207 207 / 30%);
		}

		&--success {
			background-color: rgb(207 234 207 / 10%);
			border-color: rgb(207 234 207 / 30%);
		}

		a {
			color: variables.$link-color-dark;
		}

		h3 {
			color: variables.$text-color-dark;
		}
	}
}

button {
	display: flex;
	gap: 4px;
	border: 1px solid rgb(255 255 255 / 10%);
	box-shadow:
		0 1px 3px rgb(0 0 0 / 10%),
		0 1px 2px rgb(0 0 0 / 6%),
		inset 0 2px 4px rgb(0 0 0 / 10%),
		inset 0 -1px 2px rgb(255 255 255 / 10%);
	cursor: pointer;
	transition: all 0.3s ease;

	@media (prefers-color-scheme: dark) {
		box-shadow:
			0 1px 3px rgb(0 0 0 / 20%),
			0 1px 2px rgb(0 0 0 / 12%),
			inset 0 2px 4px rgb(0 0 0 / 20%),
			inset 0 -1px 2px rgb(255 255 255 / 5%);
	}
}

.mobile-tabs {
	display: flex;
	width: 100%;
	max-width: 600px;
	margin: 0 auto;
	background: variables.$card-bg;
	border-radius: 8px;
	padding: 4px;
	gap: 4px;
	position: relative;
	box-shadow:
		0 1px 3px rgb(0 0 0 / 10%),
		0 1px 2px rgb(0 0 0 / 6%),
		inset 0 2px 4px rgb(0 0 0 / 10%),
		inset 0 -1px 2px rgb(255 255 255 / 10%);
	border: 1px solid rgb(255 255 255 / 10%);
	box-sizing: border-box;

	// Add CSS custom properties for slider position and width
	--slider-x: 4px; // Initial position matching container padding
	--button-width: calc(50% - 6px); // Initial width approximation (half container minus half gap)

	// The slider element (added by JavaScript)
	.mobile-tabs-slider {
		position: absolute;
		left: 0;
		top: 4px;

		/* Default, will be overridden by JS */
		height: calc(100% - 8px);

		/* Default, will be overridden by JS */
		background: variables.$link-color;
		border-radius: 6px;
		z-index: 1;
		box-shadow: 0 1px 2px rgb(0 0 0 / 20%);
		transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), width 0.3s ease, top 0.3s ease, height 0.3s ease;

		@media (prefers-color-scheme: dark) {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgb(0 0 0 / 40%),
				0 1px 0 rgb(255 255 255 / 30%) inset,
				0 -1px 0 rgb(0 0 0 / 20%) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}
	}

	// Hide the pseudo-element when the JavaScript slider is active
	&.has-slider-element::after {
		display: none;
	}

	&::after {
		content: '';
		position: absolute;
		left: 0;
		top: 4px;
		width: var(--button-width);
		height: calc(100% - 8px);
		background: variables.$link-color;
		border-radius: 6px;
		z-index: 1;
		box-shadow: 0 1px 2px rgb(0 0 0 / 20%);
		transform: translateX(var(--slider-x));
		transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), width 0.3s ease;

		.is-dragging & {
			transition: none;
		}
	}

	.tab-button {
		flex: 1;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 8px 16px;
		border: none;
		background: transparent !important;
		border-radius: 6px;
		font-size: 14px;
		font-weight: 500;
		color: variables.$text-color-secondary;
		cursor: pointer;
		transition: color 0.3s ease;
		position: relative;
		z-index: 2;
		text-align: center;
		box-shadow: none;
		outline: none;
		box-sizing: border-box;
		height: 100%;
		margin: 0;

		&.active {
			color: variables.$white !important;
		}

		&:not(.active) {
			color: variables.$text-color-secondary !important;

			&:hover {
				color: variables.$text-color !important;
			}
		}
	}

	@media screen and (max-width: variables.$mobile-breakpoint) {
		.tab-button {
			padding: 6px 0; // New padding: 6px top/bottom, 0 left/right
			font-size: 12px; // New font-size
		}
	}

	/* Dark mode styles for mobile tabs */
	@media (prefers-color-scheme: dark) {
		background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
		border-color: variables.$border-color-dark;
		box-shadow:
			0 1px 2px rgb(0 0 0 / 30%),
			0 -1px 0 rgb(255 255 255 / 10%) inset,
			0 2px 0 rgb(0 0 0 / 20%) inset;

		&::after {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgb(0 0 0 / 40%),
				0 1px 0 rgb(255 255 255 / 30%) inset,
				0 -1px 0 rgb(0 0 0 / 20%) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.tab-button {
			&.active {
				color: variables.$black !important;
				text-shadow: 0 1px 0 rgb(255 255 255 / 30%);
			}

			&:not(.active) {
				color: variables.$text-color-secondary-dark !important;
				text-shadow: 0 1px 0 rgb(0 0 0 / 50%);

				&:hover {
					color: variables.$text-color-dark !important;
				}
			}
		}
	}
}

/* Project Filter Checkbox Styles - Craftsmanship Level */
.project-filter-container {
	margin-bottom: 2rem;
	position: relative;
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
	padding: 0 15px;
	width: 100%;
	box-sizing: border-box;
	
	@media (min-width: variables.$tablet-breakpoint) {
		padding-left: 0;
		padding-right: 0;
	}

	.filter-group {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 24px;
		
		@media screen and (max-width: variables.$mobile-breakpoint) {
			gap: 16px;
		}
	}

	.filter-checkbox {
		display: flex;
		align-items: center;
		gap: 10px;
		cursor: pointer;
		user-select: none;
		position: relative;
		padding: 4px;
		border-radius: 8px;
		transition: all 0.2s ease;
		
		// Subtle hover background
		&:hover {
			background: rgb(0 0 0 / 4%);
			
			@media (prefers-color-scheme: dark) {
				background: rgb(255 255 255 / 4%);
			}
		}
		
		// Hide native checkbox
		.filter-input {
			position: absolute;
			opacity: 0;
			pointer-events: none;
		}
		
		// Custom checkbox indicator
		.checkbox-indicator {
			position: relative;
			width: 20px;
			height: 20px;
			border-radius: 6px;
			background: linear-gradient(145deg, #f5f5f5, #e8e8e8);
			border: 2px solid #d0d0d0;
			box-shadow: 
				inset 0 1px 2px rgb(0 0 0 / 10%),
				0 1px 0 rgb(255 255 255 / 80%);
			transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
			display: flex;
			align-items: center;
			justify-content: center;
			overflow: hidden;
			
			// Checkmark
			.checkmark {
				width: 12px;
				height: 12px;
				fill: white;
				opacity: 0;
				transform: scale(0) rotate(-45deg);
				transition: all 0.25s cubic-bezier(0.68, -0.55, 0.265, 1.55);
				filter: drop-shadow(0 1px 1px rgb(0 0 0 / 20%));
			}
			
			// Ripple effect container
			&::after {
				content: '';
				position: absolute;
				inset: -10px;
				background: radial-gradient(circle, rgb(255 107 0 / 20%) 0%, transparent 70%);
				opacity: 0;
				transform: scale(0);
				transition: all 0.4s ease;
			}
		}
		
		// Label styling
		.filter-label {
			font-size: 13px;
			font-weight: 600;
			color: variables.$text-color;
			text-transform: uppercase;
			letter-spacing: 0.04em;
			transition: color 0.2s ease;
			
			@media screen and (max-width: variables.$mobile-breakpoint) {
				font-size: 12px;
			}
		}
		
		// Checked state
		.filter-input:checked ~ .checkbox-indicator {
			background: linear-gradient(135deg, #ff6b00 0%, #ff8800 100%);
			border-color: #ff6b00;
			box-shadow: 
				0 2px 4px rgb(255 107 0 / 30%),
				0 0 8px rgb(255 136 0 / 20%),
				inset 0 1px 0 rgb(255 255 255 / 20%);
			
			.checkmark {
				opacity: 1;
				transform: scale(1) rotate(0);
			}
			
			// Ripple on check
			&::after {
				opacity: 1;
				transform: scale(3);
				transition: all 0.6s ease;
			}
		}
		
		// Focus state
		.filter-input:focus-visible ~ .checkbox-indicator {
			outline: 2px solid variables.$link-color;
			outline-offset: 2px;
		}
		
		// Active/pressed state
		&:active .checkbox-indicator {
			transform: scale(0.95);
		}
		
		// Dark mode adjustments
		@media (prefers-color-scheme: dark) {
			.checkbox-indicator {
				background: linear-gradient(145deg, #2a2a2a, #1a1a1a);
				border-color: #444;
				box-shadow: 
					inset 0 1px 2px rgb(0 0 0 / 30%),
					0 1px 0 rgb(255 255 255 / 10%);
			}
			
			.filter-label {
				color: variables.$text-color-dark;
			}
			
			.filter-input:checked ~ .checkbox-indicator {
				background: linear-gradient(135deg, #00a8ff 0%, #0088ff 100%);
				border-color: #00a8ff;
				box-shadow: 
					0 2px 4px rgb(0 168 255 / 30%),
					0 0 8px rgb(0 136 255 / 20%),
					inset 0 1px 0 rgb(255 255 255 / 20%);
				
				&::after {
					background: radial-gradient(circle, rgb(0 168 255 / 20%) 0%, transparent 70%);
				}
			}
			
			&:hover {
				.filter-label {
					color: variables.$text-color-dark;
				}
			}
		}
		
		// Professional variant styling
		&[data-type="professional"] {
			.filter-input:checked ~ .checkbox-indicator {
				// Keep orange for professional in light mode
			}
		}
		
		// Personal variant styling  
		&[data-type="personal"] {
			.filter-input:checked ~ .checkbox-indicator {
				background: linear-gradient(135deg, #00d4aa 0%, #00b894 100%);
				border-color: #00b894;
				box-shadow: 
					0 2px 4px rgb(0 184 148 / 30%),
					0 0 8px rgb(0 212 170 / 20%),
					inset 0 1px 0 rgb(255 255 255 / 20%);
				
				&::after {
					background: radial-gradient(circle, rgb(0 184 148 / 20%) 0%, transparent 70%);
				}
			}
			
			@media (prefers-color-scheme: dark) {
				.filter-input:checked ~ .checkbox-indicator {
					background: linear-gradient(135deg, #a855f7 0%, #9333ea 100%);
					border-color: #9333ea;
					box-shadow: 
						0 2px 4px rgb(147 51 234 / 30%),
						0 0 8px rgb(168 85 247 / 20%),
						inset 0 1px 0 rgb(255 255 255 / 20%);
					
					&::after {
						background: radial-gradient(circle, rgb(147 51 234 / 20%) 0%, transparent 70%);
					}
				}
			}
		}
	}
}

/* Portfolio Filter Animations */
.company-group,
.portfolio-item {
	transition: opacity 0.3s ease, transform 0.3s ease;
	
	&[style*="display: none"] {
		opacity: 0 !important;
		transform: translateY(-10px) !important;
		pointer-events: none !important;
	}
}

.no-projects-message {
	animation: fadeInUp 0.4s ease;
}

@keyframes fadeInUp {
	from {
		opacity: 0;
		transform: translateY(10px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

/* Profile Header Styles */
.profile-header {
	position: relative;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	gap: 12px;
	padding: 36px 24px 9px;
	margin: 0 auto 32px;
	max-width: 600px;
	z-index: 1;
	box-sizing: border-box;
	width: 100%;

	.profile-photo-wrapper {
		position: relative;
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		gap: 12px;

		.profile-photo {
			width: 90px;
			height: 90px;
			border-radius: 50%;
			object-fit: cover;
			flex-shrink: 0;
			position: relative;
			box-shadow:
				0 0 0 1px rgba(variables.$white, 0.7),
				0 0 0 2px rgba(variables.$black, 0.1),
				inset 0 2px 8px rgba(variables.$black, 0.4),
				inset 0 -4px 8px rgba(variables.$white, 0.3);
			padding: 4px;
			background: linear-gradient(145deg,
					rgba(variables.$white, 0.1),
					rgba(variables.$black, 0.1));
		}
	}

	.profile-info {
		text-align: left;
		width: 100%;

		.profile-name {
			font-size: 24px;
			font-weight: 600;
			margin: 0 0 9px 0;
			line-height: 100%;
			text-shadow:
				0 1px 1px rgb(255 255 255 / 90%),
				0 -1px 1px rgb(0 0 0 / 20%);
			letter-spacing: 0.02em;
		}

		.profile-byline {
			font-size: 14px;
			font-weight: 500;
			margin: 0 0 8px 0;
			color: variables.$text-color-secondary;
			line-height: 1.4;
			display: none;
		}

		.profile-bio {
			color: variables.$text-color-secondary;
			margin: 0 0 16px 0;
			font-size: 12px;
			line-height: 1.4;
			max-width: 450px;
		}

		.location-pill {
			display: inline-flex;
			align-items: center;
			gap: 6px;
			padding: 4px 12px;
			background: rgba(variables.$black, 0.05);
			border-radius: 20px;
			margin-bottom: 9px;
			font-size: 13px;
			color: variables.$text-color-secondary;
			transition: all 0.2s ease;

			.location-icon {
				width: 14px;
				height: 14px;
				opacity: 0.7;
			}

			&:hover {
				background: rgba(variables.$black, 0.08);
				color: variables.$text-color;
			}
		}

		.profile-stats {
			display: flex;
			flex-direction: column;
			gap: 9px;
			padding-top: 36px;
			padding-bottom: 9px;
			justify-content: flex-start;
			padding: 9px;
			border: 1px solid #ccc;
			border-radius: 9px;
			position: relative;
			cursor: pointer;
			transition: all 0.2s ease;
			
			@media (max-width: variables.$mobile-breakpoint) {
				flex-wrap: wrap;
			}

			&:hover {
				background: rgba(variables.$black, 0.02);
				border-color: rgba(variables.$border-color, 0.8);
			}

			&:active {
				background: rgba(variables.$black, 0.04);
			}

			.stat {
				display: flex;
				flex-direction: column;
				align-items: flex-start;

				.number {
					display: block;
					font-weight: 600;
					font-size: 18px;
				}

				.label {
					font-size: 9px;
					color: variables.$text-color-secondary;
					text-transform: uppercase;
					letter-spacing: 0.05em;
				}
			}

			.impact-report-btn {
				position: absolute;
				bottom: auto;
				top: 6px;
				right: 6px;
				font-size: 9px;
				padding: 6px 12px;
				background: variables.$black;
				border: 1px solid variables.$black;
				color: variables.$white;
				border-radius: 4px;
				text-transform: uppercase;
				letter-spacing: 0.05em;
				cursor: pointer;
				transition: all 0.2s ease;
				font-weight: 500;

				&:hover {
					background: color.scale(variables.$black, $lightness: 10%);
					border-color: color.scale(variables.$black, $lightness: 10%);
					color: variables.$white;
				}

				&:active {
					background: color.scale(variables.$black, $lightness: 5%);
					border-color: color.scale(variables.$black, $lightness: 5%);
				}
			}
		}
	}

	.contact-wrapper.mobile-only {
		position: relative;
		top: unset;
		right: unset;
		bottom: unset;
		left: unset;
		margin: unset;
		padding: unset;
		width: auto;

		.contact-button {
			display: block;
			padding: 8px 16px;
			font-size: 12px;
			font-weight: 500;
			color: variables.$text-color;
			text-decoration: none;
			text-align: center;
			transition: all 0.2s ease;
			white-space: nowrap;
			background: transparent;
			border: 1px solid rgba(variables.$border-color, 0.6);
			border-radius: 6px;
			cursor: pointer;
			width: 100%;

			&:hover {
				background: rgba(variables.$link-color, 0.1);
				color: variables.$link-color;
			}

			&:active {
				background: rgba(variables.$link-color, 0.2);
			}
		}
	}
}

/* Dark mode styles for location pill and profile byline */
@media (prefers-color-scheme: dark) {
	.profile-header {
		.profile-info {
			.profile-byline {
				color: variables.$text-color-secondary-dark;
			}

			.location-pill {
				background: rgba(variables.$white, 0.1);
				color: variables.$text-color-secondary-dark;

				&:hover {
					background: rgba(variables.$white, 0.15);
					color: variables.$text-color-dark;
				}

				.location-icon {
					color: variables.$text-color-secondary-dark;
				}
			}

			.profile-stats {
				border-color: rgba(variables.$border-color-dark, 0.8);
				
				&:hover {
					background: rgba(variables.$white, 0.02);
					border-color: variables.$border-color-dark;
				}

				&:active {
					background: rgba(variables.$white, 0.04);
				}

				.stat {
					.label {
						color: variables.$text-color-secondary-dark;
					}
				}

			}
		}
	}
}

/* Mobile Expandable Header Styles */
@media screen and (max-width: variables.$mobile-breakpoint) {
	.profile-header {
		.mobile-compact-header {
			width: 100%;
			
			.location-pill {
				padding: 3px 9px;
				font-size: 11px;
				margin-bottom: 3px;
				
				.location-icon {
					width: 10px;
					height: 10px;
				}
			}
			
			.profile-byline {
				font-size: 11px;
				font-weight: 500;
				margin: 3px 0;
				color: variables.$text-color-secondary;
				line-height: 1.3;
				display: block;
			}
		}
		
		.mobile-buttons-container {
			display: flex;
			gap: 8px;
			margin-top: 12px;
		}
		
		.mobile-impact-button,
		.mobile-contact-button {
			// Override component library default button styles for consistency
			&.btn--default {
				height: auto !important; // Override fixed height
				padding: 8px 16px !important; // Match "Posts only" button padding
				font-size: 16px !important; // Use component library font size
			}
		}
		
		.mobile-expand-button {
			display: inline-flex;
			align-items: center;
			justify-content: center;
			gap: 4px;
			padding: 8px 16px;
			margin: 6px 0 0 0;
			position: relative;
			font-size: 16px; // Updated to match
			font-weight: 600;
			color: variables.$text-color;
			cursor: pointer;
			transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
			text-decoration: none;
			border-radius: 8px;
			
			// Glassmorphism base
			background: linear-gradient(
				135deg,
				rgba(255, 255, 255, 0.1) 0%,
				rgba(255, 255, 255, 0.05) 100%
			);
			backdrop-filter: blur(10px) saturate(1.5);
			-webkit-backdrop-filter: blur(10px) saturate(1.5);
			border: 1px solid rgba(255, 255, 255, 0.18);
			border-radius: 8px;
			box-shadow:
				inset 0 1px 0 0 rgba(255, 255, 255, 0.15),
				0 1px 3px rgba(0, 0, 0, 0.1),
				0 1px 2px rgba(0, 0, 0, 0.06);
			
			// Animated border gradient
			&::before {
				content: '';
				position: absolute;
				inset: -1px;
				border-radius: 8px;
				padding: 1px;
				background: linear-gradient(
					135deg,
					transparent 0%,
					hsl(40, 90%, 60%) 50%,
					transparent 100%
				);
				-webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
				-webkit-mask-composite: xor;
				mask-composite: exclude;
				opacity: 0;
				transition: opacity 0.3s ease;
			}
			
			// Glow effect
			&::after {
				content: '';
				position: absolute;
				inset: -8px;
				border-radius: 12px;
				background: radial-gradient(
					circle at center,
					hsl(40, 90%, 60%, 0.2) 0%,
					transparent 70%
				);
				opacity: 0;
				transition: opacity 0.3s ease;
				z-index: -1;
			}
			
			.button-text {
				color: inherit;
				position: relative;
				z-index: 1;
			}
			
			.expand-icon {
				width: 12px;
				height: 12px;
				color: variables.$text-color-secondary;
				transition: transform 0.3s cubic-bezier(0.68, -0.55, 0.265, 1.55);
				position: relative;
				z-index: 1;
			}
			
			&:hover {
				background: linear-gradient(
					135deg,
					rgba(255, 255, 255, 0.15) 0%,
					rgba(255, 255, 255, 0.08) 100%
				);
				border-color: rgba(255, 255, 255, 0.25);
				transform: translateY(-1px);
				box-shadow:
					inset 0 1px 0 0 rgba(255, 255, 255, 0.2),
					0 4px 8px rgba(0, 0, 0, 0.12),
					0 2px 4px rgba(0, 0, 0, 0.08),
					0 0 0 1px rgba(hsl(40, 90%, 60%), 0.1);
				
				&::before {
					opacity: 0.6;
				}
				
				&::after {
					opacity: 0.3;
				}
			}
			
			&:active {
				transform: translateY(0);
				box-shadow:
					inset 0 1px 0 0 rgba(255, 255, 255, 0.1),
					0 1px 2px rgba(0, 0, 0, 0.1);
			}
			
			&[aria-expanded="true"] {
				background: linear-gradient(
					135deg,
					rgba(hsl(40, 90%, 60%), 0.15) 0%,
					rgba(hsl(40, 90%, 60%), 0.05) 100%
				);
				border-color: rgba(hsl(40, 90%, 60%), 0.3);
				box-shadow:
					inset 0 1px 0 0 rgba(255, 255, 255, 0.2),
					0 4px 8px rgba(0, 0, 0, 0.12),
					0 2px 4px rgba(0, 0, 0, 0.08),
					0 0 20px rgba(hsl(40, 90%, 60%), 0.15);
				
				&::before {
					opacity: 1;
					animation: borderRotate 3s linear infinite;
				}
				
				&::after {
					opacity: 0.5;
				}
				
				.expand-icon {
					transform: rotate(180deg);
				}
			}
		}
		
		// Mobile action buttons now use the component library
		// Additional styles can be added here if needed
		.mobile-impact-button,
		.mobile-contact-button {
			flex: 1; // Make buttons equal width in container
		}
		
		@keyframes borderRotate {
			0% {
				background: linear-gradient(
					135deg,
					transparent 0%,
					hsl(40, 90%, 60%) 50%,
					transparent 100%
				);
			}
			50% {
				background: linear-gradient(
					225deg,
					transparent 0%,
					hsl(40, 90%, 60%) 50%,
					transparent 100%
				);
			}
			100% {
				background: linear-gradient(
					135deg,
					transparent 0%,
					hsl(40, 90%, 60%) 50%,
					transparent 100%
				);
			}
		}
		
		.mobile-expandable-content {
			max-height: 0;
			overflow: hidden;
			transition: max-height 0.3s ease, padding 0.3s ease, margin 0.3s ease, opacity 0.3s ease;
			opacity: 0;
			margin: 0;
			padding: 0;
			
			.location-pill {
				margin-top: 12px;
			}
			
			.profile-byline {
				font-size: 14px;
				font-weight: 500;
				margin: 12px 0 8px 0;
				color: variables.$text-color-secondary;
				line-height: 1.4;
				display: block;
			}
			
			.profile-stats {
				display: none;
				gap: variables.$spacing-inline-lg;
				justify-content: flex-start;
				margin: 12px 0;
				
				.stat {
					display: flex;
					flex-direction: column;
					align-items: flex-start;

					.number {
						display: block;
						font-weight: 600;
						font-size: 16px;
					}

					.label {
						font-size: 9px;
						color: variables.$text-color-secondary;
						text-transform: uppercase;
						letter-spacing: 0.05em;
					}
				}
			}
			
			.contact-options {
				display: flex;
				flex-direction: row;
				margin-top: 12px;
				border: 1px solid rgba(variables.$border-color, 0.6);
				border-radius: 6px;
				overflow: hidden;
				box-shadow: 0 2px 4px rgb(0 0 0 / 5%);
				background: rgba(variables.$card-bg, 0.6);
				backdrop-filter: blur(4px);
				-webkit-backdrop-filter: blur(4px);
				
				.contact-option {
					flex: 1;
					padding: 8px 12px;
					font-size: 11px;
					font-weight: 500;
					color: variables.$text-color;
					text-decoration: none;
					text-align: center;
					background: transparent;
					transition: all 0.2s ease;
					position: relative;
					
					&:hover {
						background: rgba(variables.$link-color, 0.1);
						color: variables.$link-color;
					}
					
					&:active {
						background: rgba(variables.$link-color, 0.2);
					}
					
					&:not(:last-child) {
						border-right: 1px solid rgba(variables.$border-color, 0.4);
						
						&::after {
							content: '';
							position: absolute;
							right: 0;
							top: 0;
							height: 100%;
							width: 1px;
							background: rgb(255 255 255 / 70%);
						}
					}
				}
			}
		}
		
		&[data-expanded="true"] {
			.mobile-expandable-content {
				max-height: 500px; // Adjust based on content
				opacity: 1;
				padding: 0 0 12px 0;
				
				.profile-stats {
					display: flex;
					flex-direction: row;
				}
			}
		}
	}
}

/* Dark mode styles for mobile expandable header */
@media (prefers-color-scheme: dark) {
	@media screen and (max-width: variables.$mobile-breakpoint) {
		.profile-header {
			.mobile-compact-header {
				.location-pill {
					background: rgba(variables.$white, 0.1);
					color: variables.$text-color-secondary-dark;
					
					.location-icon {
						color: variables.$text-color-secondary-dark;
					}
				}
				
				.profile-byline {
					color: variables.$text-color-secondary-dark;
				}
			}
			
			.mobile-buttons-container {
				display: flex;
				gap: 8px;
				margin-top: 12px;
			}
			
			.mobile-expand-button {
				color: variables.$text-color-dark;
				background: linear-gradient(
					135deg,
					rgba(255, 255, 255, 0.05) 0%,
					rgba(255, 255, 255, 0.02) 100%
				);
				border-color: rgba(255, 255, 255, 0.1);
				box-shadow:
					inset 0 1px 0 0 rgba(255, 255, 255, 0.08),
					0 1px 3px rgba(0, 0, 0, 0.2),
					0 1px 2px rgba(0, 0, 0, 0.15);
				
				&::before {
					background: linear-gradient(
						135deg,
						transparent 0%,
						hsl(40, 90%, 50%) 50%,
						transparent 100%
					);
				}
				
				&::after {
					background: radial-gradient(
						circle at center,
						hsl(40, 90%, 50%, 0.15) 0%,
						transparent 70%
					);
				}
				
				.expand-icon {
					color: variables.$text-color-secondary-dark;
				}
				
				&:hover {
					background: linear-gradient(
						135deg,
						rgba(255, 255, 255, 0.08) 0%,
						rgba(255, 255, 255, 0.04) 100%
					);
					border-color: rgba(255, 255, 255, 0.15);
					box-shadow:
						inset 0 1px 0 0 rgba(255, 255, 255, 0.12),
						0 4px 8px rgba(0, 0, 0, 0.25),
						0 2px 4px rgba(0, 0, 0, 0.15),
						0 0 0 1px rgba(hsl(40, 90%, 50%), 0.08);
				}
				
				&[aria-expanded="true"] {
					background: linear-gradient(
						135deg,
						rgba(hsl(40, 90%, 50%), 0.1) 0%,
						rgba(hsl(40, 90%, 50%), 0.03) 100%
					);
					border-color: rgba(hsl(40, 90%, 50%), 0.2);
					box-shadow:
						inset 0 1px 0 0 rgba(255, 255, 255, 0.12),
						0 4px 8px rgba(0, 0, 0, 0.25),
						0 2px 4px rgba(0, 0, 0, 0.15),
						0 0 20px rgba(hsl(40, 90%, 50%), 0.1);
				}
			}
			
			
			.mobile-expandable-content {
				.profile-byline {
					color: variables.$text-color-secondary-dark;
				}
				
				.profile-stats {
					.stat {
						.label {
							color: variables.$text-color-secondary-dark;
						}
					}
				}
				
				.contact-options {
					background: variables.$card-bg-dark;
					border-color: variables.$border-color-dark;
					box-shadow:
						0 4px 8px rgb(0 0 0 / 30%),
						0 0 0 1px rgb(255 255 255 / 5%) inset;
					
					.contact-option {
						color: variables.$text-color-dark;
						background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
						border-color: variables.$border-color-dark;
						text-shadow: 0 1px 0 rgb(0 0 0 / 50%);
						box-shadow: 0 1px 0 rgb(255 255 255 / 5%) inset;
						
						&:hover {
							background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
							color: variables.$black;
							text-shadow: 0 1px 0 rgb(255 255 255 / 30%);
							box-shadow: 0 1px 0 rgb(255 255 255 / 20%) inset;
						}
						
						&:active {
							background: linear-gradient(to bottom, color.adjust(variables.$link-color-dark, $lightness: -10%), variables.$link-color-dark);
							box-shadow: 0 1px 2px rgb(0 0 0 / 30%) inset;
						}
						
						&:not(:last-child) {
							&::after {
								background: rgb(255 255 255 / 10%);
							}
						}
					}
				}
			}
		}
	}
}

/* Contact wrapper - with skeuomorphic styling */
.contact-wrapper {
	z-index: 10;

	/* Mobile styles */
	@media screen and (max-width: variables.$mobile-breakpoint) {
		position: absolute;
		top: 10px;
		right: 10px;

		.contact-button {
			display: block;
			padding: 8px 16px;

			/* Use active styling as default on mobile */
			background: rgba(variables.$link-color, 0.8);
			border: 1px solid rgba(variables.$link-color, 0.6);
			border-radius: 6px;
			font-size: 12px;
			font-weight: 600;
			color: variables.$white;
			text-decoration: none;
			cursor: pointer;
			transition: all 0.2s ease;
			z-index: 101;
			box-shadow:
				0 1px 2px rgb(0 0 0 / 10%),
				0 1px 0 rgb(255 255 255 / 10%) inset;
			backdrop-filter: blur(4px);
			backdrop-filter: blur(4px);

			/* New hover state for active-by-default button */
			&:hover {
				background: rgba(variables.$link-color, 0.9);
				border-color: rgba(variables.$link-color, 0.8);
				box-shadow:
					0 2px 4px rgb(0 0 0 / 15%),
					0 1px 0 rgb(255 255 255 / 20%) inset;
			}

			/* New active/pressed state for touch/mouse down */
			&:active {
				background: rgba(variables.$link-color, 0.7);
				border-color: rgba(variables.$link-color, 0.5);
				box-shadow:
					0 1px 1px rgb(0 0 0 / 10%),
					0 1px 2px rgb(0 0 0 / 10%) inset;
				transform: translateY(0);
			}

			/* Keep the .active class for when dropdown is open */
			&.active {
				background: rgba(variables.$link-color, 0.85);
				border-color: rgba(variables.$link-color, 0.7);
				box-shadow:
					0 1px 2px rgb(0 0 0 / 10%),
					0 1px 0 rgb(255 255 255 / 15%) inset;
			}
		}

		.contact-options {
			position: absolute;
			top: 100%;
			right: 0;
			margin-top: 5px;
			display: none;
			flex-direction: column;
			background: rgba(variables.$card-bg, 0.8);
			border: 1px solid rgba(variables.$border-color, 0.6);
			border-radius: 6px;
			box-shadow: 0 4px 8px rgb(0 0 0 / 5%);
			overflow: hidden;
			z-index: 100;
			min-width: 120px;
			backdrop-filter: blur(4px);
			backdrop-filter: blur(4px);

			.contact-option {
				display: block;
				padding: 8px 16px;
				font-size: 12px;
				font-weight: 500;
				color: variables.$text-color;
				text-decoration: none;
				text-align: center;
				transition: all 0.2s ease;
				white-space: nowrap;
				background: transparent;

				&:hover {
					background: rgba(variables.$link-color, 0.1);
					color: variables.$link-color;
				}

				&:active {
					background: rgba(variables.$link-color, 0.2);
				}

				&:not(:last-child) {
					border-bottom: 1px solid rgba(variables.$border-color, 0.4);
				}
			}
		}

		&.active .contact-options {
			display: flex;
		}
	}

	/* Desktop and tablet styles */
	@media screen and (min-width: variables.$mobile-breakpoint) {
		width: 100%;
		display: flex;
		justify-content: center;
		margin-top: 20px;

		.contact-button {
			display: none;
		}

		.contact-options {
			display: flex;
			flex-direction: row;
			border: 1px solid rgba(variables.$border-color, 0.6);
			border-radius: 6px;
			overflow: hidden;
			box-shadow: 0 2px 4px rgb(0 0 0 / 5%);
			background: rgba(variables.$card-bg, 0.6);
			backdrop-filter: blur(4px);
			backdrop-filter: blur(4px);

			.contact-option {
				padding: 8px 16px;
				font-size: 12px;
				font-weight: 500;
				color: variables.$text-color;
				text-decoration: none;
				text-align: center;
				background: transparent;
				transition: all 0.2s ease;

				&:hover {
					background: rgba(variables.$link-color, 0.1);
					color: variables.$link-color;
				}

				&:active {
					background: rgba(variables.$link-color, 0.2);
				}

				&:not(:last-child) {
					border-right: 1px solid rgba(variables.$border-color, 0.4);

					&::after {
						content: '';
						position: absolute;
						right: 0;
						top: 0;
						height: 100%;
						width: 1px;
						background: rgb(255 255 255 / 70%);
					}
				}
			}
		}
	}
}

/* Dark mode styles for contact wrapper */
@media (prefers-color-scheme: dark) {
	.contact-wrapper {

		/* Mobile styles - active by default in dark mode */
		@media screen and (max-width: variables.$mobile-breakpoint) {
			.contact-button {
				/* Use active styling as default on mobile in dark mode */
				background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
				border-color: color.adjust(variables.$link-color-dark, $lightness: -15%);
				color: variables.$black;
				box-shadow:
					0 1px 2px rgb(0 0 0 / 40%),
					0 1px 0 rgb(255 255 255 / 30%) inset,
					0 -1px 0 rgb(0 0 0 / 20%) inset;
				text-shadow: 0 1px 0 rgb(255 255 255 / 30%);

				/* New hover state for active-by-default button in dark mode */
				&:hover {
					background: linear-gradient(to bottom, color.adjust(variables.$link-color-dark, $lightness: 5%), color.adjust(variables.$link-color-dark, $lightness: -5%));
					border-color: color.adjust(variables.$link-color-dark, $lightness: -10%);
					box-shadow:
						0 2px 4px rgb(0 0 0 / 50%),
						0 1px 0 rgb(255 255 255 / 40%) inset,
						0 -1px 0 rgb(0 0 0 / 10%) inset;
				}

				/* New active/pressed state for touch/mouse down in dark mode */
				&:active {
					background: linear-gradient(to bottom, color.adjust(variables.$link-color-dark, $lightness: -5%), color.adjust(variables.$link-color-dark, $lightness: -15%));
					border-color: color.adjust(variables.$link-color-dark, $lightness: -20%);
					box-shadow:
						0 1px 1px rgb(0 0 0 / 30%),
						0 1px 2px rgb(0 0 0 / 30%) inset;
					transform: translateY(0);
				}

				/* Keep the .active class for when dropdown is open in dark mode */
				&.active {
					background: linear-gradient(to bottom, color.adjust(variables.$link-color-dark, $lightness: 2%), color.adjust(variables.$link-color-dark, $lightness: -8%));
					border-color: color.adjust(variables.$link-color-dark, $lightness: -12%);
					box-shadow:
						0 1px 2px rgb(0 0 0 / 40%),
						0 1px 0 rgb(255 255 255 / 35%) inset,
						0 -1px 0 rgb(0 0 0 / 15%) inset;
				}
			}

			/* Mobile-specific dark mode styles for contact options */
			.contact-options {
				background: rgba(variables.$card-bg-dark, 0.9);
				border-color: rgba(variables.$border-color-dark, 0.6);
				box-shadow: 0 4px 8px rgb(0 0 0 / 20%);
				backdrop-filter: blur(4px);

				.contact-option {
					color: variables.$text-color-dark;
					background: transparent;

					&:hover {
						background: rgba(variables.$link-color-dark, 0.2);
						color: variables.$link-color-dark;
					}

					&:active {
						background: rgba(variables.$link-color-dark, 0.3);
					}

					&:not(:last-child) {
						border-bottom-color: rgba(variables.$border-color-dark, 0.4);
					}
				}
			}
		}

		/* Desktop/tablet styles remain unchanged for dark mode */
		@media screen and (min-width: variables.$mobile-breakpoint) {
			.contact-button {
				background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
				border-color: variables.$border-color-dark;
				color: variables.$text-color-dark;
				box-shadow:
					0 1px 2px rgb(0 0 0 / 30%),
					0 -1px 0 rgb(255 255 255 / 10%) inset,
					0 2px 0 rgb(0 0 0 / 20%) inset;
				text-shadow: 0 1px 0 rgb(0 0 0 / 50%);

				&:hover {
					background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 12%), color.adjust(variables.$card-bg-dark, $lightness: 5%));
					box-shadow:
						0 1px 3px rgb(0 0 0 / 40%),
						0 -1px 0 rgb(255 255 255 / 10%) inset,
						0 2px 0 rgb(0 0 0 / 20%) inset;
				}

				&.active {
					background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
					color: variables.$black;
					box-shadow:
						0 1px 2px rgb(0 0 0 / 40%),
						0 1px 0 rgb(255 255 255 / 30%) inset,
						0 -1px 0 rgb(0 0 0 / 20%) inset;
					text-shadow: 0 1px 0 rgb(255 255 255 / 30%);
					border-color: color.adjust(variables.$link-color-dark, $lightness: -15%);
				}
			}
		}

		.contact-options {
			background: variables.$card-bg-dark;
			border-color: variables.$border-color-dark;
			box-shadow:
				0 4px 8px rgb(0 0 0 / 30%),
				0 0 0 1px rgb(255 255 255 / 5%) inset;

			.contact-option {
				color: variables.$text-color-dark;
				background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
				border-color: variables.$border-color-dark;
				text-shadow: 0 1px 0 rgb(0 0 0 / 50%);
				box-shadow: 0 1px 0 rgb(255 255 255 / 5%) inset;

				&:hover {
					background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
					color: variables.$black;
					text-shadow: 0 1px 0 rgb(255 255 255 / 30%);
					box-shadow: 0 1px 0 rgb(255 255 255 / 20%) inset;
				}

				&:active {
					background: linear-gradient(to bottom, color.adjust(variables.$link-color-dark, $lightness: -10%), variables.$link-color-dark);
					box-shadow: 0 1px 2px rgb(0 0 0 / 30%) inset;
				}

				&:not(:last-child) {
					&::after {
						background: rgb(255 255 255 / 10%);
					}
				}
			}
		}
	}
}

/* Dark mode styles for profile photo moved to _theme-modes.scss */

.tldr-modal {
	position: fixed;
	left: 0;
	bottom: 0;
	right: 0;
	margin: 0 auto;
	width: 90vw;
	max-width: 600px;
	max-height: 90dvh;
	background: rgb(0 0 0 / 50%);
	backdrop-filter: blur(4px);
	backdrop-filter: blur(4px);
	border-radius: 6px 6px 0 0;
	border-top: 1px solid variables.$border-color;
	border-left: 1px solid variables.$border-color;
	border-right: 1px solid variables.$border-color;
	display: flex;
	flex-direction: column;
	opacity: 0;
	visibility: hidden;
	transition: opacity 0.3s ease, visibility 0.3s ease;
	z-index: 1000;

	&.active {
		opacity: 1;
		visibility: visible;

		.modal-content {
			transform: translateY(0);
			opacity: 1;
		}
	}

	.modal-header {
		background: var(--propel-bg);
		padding: 6px;
		border: none;
		border-radius: 6px 6px 0 0;
		display: flex;
		align-items: center;
		justify-content: space-between;
		position: relative;
		margin: 0;
		width: 100%;

		h2 {
			margin: 0;
			font-size: 15px;
			color: var(--propel-text);
			text-transform: none;
		}

		.close-button {
			background: none;
			border: none;
			padding: 0;
			margin: 0;
			cursor: pointer;
			color: var(--propel-text-secondary);
			transition: color 0.2s ease;
			width: 24px;
			height: 24px;
			display: flex;
			align-items: center;
			justify-content: center;

			&:hover {
				color: var(--propel-text);
			}

			svg {
				width: 16px;
				height: 16px;
			}
		}
	}

	.modal-content {
		background: var(--propel-bg);
		width: 100%;
		overflow-y: auto;
		margin: 0;
		padding: 2rem;
		position: relative;
		box-shadow: 0 -8px 32px rgb(0 0 0 / 10%);
		border-top: 1px solid var(--propel-border);
		border-radius: 0;
		opacity: 0;
		transform: translateY(100%);
		transition:
			transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
			opacity 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);

		.tldr-summary {
			font-size: 15px;
			color: var(--propel-text-secondary);
			margin-top: 0;
		}

		.key-points {
			display: grid;
			gap: 1.5rem;
			margin: 2rem 0;

			.point {
				background: variables.$grey;
				border-radius: 12px;
				padding: variables.$space-sm;

				h3 {
					font-size: 14px;
					margin: 0;
					color: var(--propel-text);
				}

				p {
					margin: 0;
					font-size: 12px;
					color: var(--propel-text-secondary);
					line-height: 1.5;
				}

				svg {
					width: 24px;
					height: 24px;
					color: var(--propel-green);
				}
			}
		}
	}
}

@media (prefers-color-scheme: dark) {
	.tldr-modal {
		.modal-content {
			background: var(--propel-bg);

			.modal-header {
				background: var(--propel-bg);
				border-color: var(--propel-border);

				h2 {
					color: var(--propel-text);
				}

				.close-button {
					color: var(--propel-text-secondary);

					&:hover {
						color: var(--propel-text);
					}
				}
			}

			.key-points .point {
				h3 {
					color: var(--propel-text);
				}

				p {
					color: var(--propel-text-secondary);
				}
			}

			.live-preview {
				background: var(--propel-bg-alt);

				h3 {
					color: var(--propel-text);
				}

				.preview-content {
					svg {
						color: var(--propel-green);
					}

					p {
						color: var(--propel-text-secondary);

						a {
							color: var(--propel-green);
						}
					}
				}
			}
		}
	}
}

body.modal-open {
	overflow: hidden;
}

/* Fade in/out for alert on index page */
#comingSoonAlert {
	opacity: 0;
	animation: fadeIn 0.8s forwards;
	transition: opacity 0.8s ease;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

/* Text Carousel Styles */
.text-carousel {
	margin: variables.$spacing-section 0;
	padding: 0;
	width: 100%;
	position: relative;
	overflow: hidden;

	.text-carousel-track {
		display: flex;
		overflow: hidden;
		width: 100%;
		transition: transform 0.3s ease;
	}

	.text-carousel-slide {
		flex: 0 0 100%;
		padding: variables.$space-md;
		box-sizing: border-box;
		min-height: 150px;
		background-color: variables.$card-bg;
		border: 1px solid variables.$border-color;
		border-radius: 4px;
		box-shadow: 0 2px 4px rgb(0 0 0 / 10%);
		margin-bottom: variables.$space-sm;

		h2 {
			margin-bottom: variables.$space-xs;
		}

		p {
			margin: 0;
		}
	}

	.text-carousel-button {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		z-index: 2;
	}

	.text-carousel-button.prev {
		left: 10px;
	}

	.text-carousel-button.next {
		right: 10px;
	}

	.text-carousel-indicators {
		margin-top: variables.$space-sm;
		display: flex;
		gap: variables.$space-xs;

		.indicator {
			width: 10px;
			height: 10px;
			border-radius: 50%;
			background: transparent;
			border: 1px solid currentcolor;
			cursor: pointer;

			&.active {
				background: currentcolor;
			}
		}
	}
}

/* Meta Cards Styles */
.meta-cards {
	display: flex;
	flex-direction: column;
	gap: variables.$space-sm;
	margin: 0 auto;
	max-width: 1000px;
	padding: 0 variables.$space-sm;
}

.meta-card {
	width: 100%;
	padding: variables.$space-sm;
	border-radius: 4px;
	color: variables.$text-color;
	margin: 24px 0;

	h2 {
		margin-bottom: variables.$space-xs;
		margin-top: 0;
		font-size: 1.2rem;
	}

	p {
		margin: 0;
		padding-top: 6px;
	}
}

@media (prefers-color-scheme: dark) {
	.meta-card {
		color: variables.$text-color-dark;
	}
}

// Author mini-bio name margin override
.author-mini-bio-content .author-mini-bio-name {
	margin-bottom: 3px;
}

// Tables - Claude.ai inspired
table {
	width: 100%;
	margin: variables.$space-lg 0;
	border-collapse: collapse;
	font-size: 12px;
	line-height: 1.4;
	border: 1px solid rgba(variables.$border-color, 0.3);
	border-radius: 6px;
	overflow: hidden;
	box-shadow:
		0 1px 2px rgb(0 0 0 / 5%),
		0 1px 1px rgb(0 0 0 / 3%);
	background-color: rgba(variables.$card-bg, 0.8);

	tr {
		display: flex;
		width: 100%;
		align-items: stretch;
		border-bottom: 1px solid rgba(variables.$border-color, 0.2);

		&:last-child {
			border-bottom: none;
		}

		&:nth-child(even) {
			background-color: rgba(variables.$white, 0.4);
		}

		&:nth-child(odd):not(:first-child) {
			background-color: rgba(variables.$white, 0.8);
		}
	}

	th {
		text-align: left;
		padding: 0.75em 1em;
		background-color: rgba(variables.$card-bg, 0.95);
		font-weight: 500;
		vertical-align: top;
		display: flex;
		flex-direction: column;
		width: 100%;
		box-sizing: border-box;
		align-self: stretch;
		border-right: 1px solid rgba(variables.$border-color, 0.2);
		border-bottom: 1px solid rgba(variables.$border-color, 0.3);

		&:last-child {
			border-right: none;
		}
	}

	td {
		padding: 0.75em 1em;
		vertical-align: top;
		width: 100%;
		align-self: stretch;
		border-right: 1px solid rgba(variables.$border-color, 0.2);

		&:last-child {
			border-right: none;
		}
	}

	// Style for the "Updated" and "New" badges
	th span {
		font-size: 9px;
		background-color: #f0f0f0;
		padding: 2px 4px;
		border-radius: 3px;
		width: fit-content;
		margin-bottom: 0.5em;
		display: inline-block;

		&[style*="background-color: #e6f7ff"] {
			background-color: #e6f7ff;
		}
	}
}

// Dark mode styles for tables
@media (prefers-color-scheme: dark) {
	table {
		border-color: rgba(variables.$border-color-dark, 0.5);
		background-color: rgba(variables.$card-bg-dark, 0.8);
		box-shadow:
			0 1px 2px rgb(0 0 0 / 15%),
			0 1px 1px rgb(0 0 0 / 10%);

		tr {
			border-bottom-color: rgba(variables.$border-color-dark, 0.4);

			&:nth-child(even) {
				background-color: rgba(variables.$card-bg-dark, 0.6);
			}

			&:nth-child(odd):not(:first-child) {
				background-color: rgba(variables.$card-bg-dark, 0.3);
			}
		}

		th {
			background-color: rgba(variables.$card-bg-dark, 0.95);
			border-right-color: rgba(variables.$border-color-dark, 0.4);
			border-bottom-color: rgba(variables.$border-color-dark, 0.5);
			color: variables.$text-color-dark;
			position: relative;

			&::after {
				content: '';
				position: absolute;
				right: -1px;
				top: 0;
				height: 100%;
				width: 1px;
				background: linear-gradient(to bottom,
						rgba(variables.$border-color-dark, 0.2),
						rgba(variables.$border-color-dark, 0.4),
						rgba(variables.$border-color-dark, 0.2));
			}

			&:last-child::after {
				display: none;
			}
		}

		td {
			border-right-color: rgba(variables.$border-color-dark, 0.4);
			color: variables.$text-color-secondary-dark;
			position: relative;

			&::after {
				content: '';
				position: absolute;
				right: -1px;
				top: 0;
				height: 100%;
				width: 1px;
				background: linear-gradient(to bottom,
						rgba(variables.$border-color-dark, 0.2),
						rgba(variables.$border-color-dark, 0.4),
						rgba(variables.$border-color-dark, 0.2));
			}

			&:last-child::after {
				display: none;
			}
		}

		// Dark mode badge styles
		th span {
			background-color: rgb(255 255 255 / 10%);
			color: variables.$text-color-dark;

			&[style*="background-color: #e6f7ff"] {
				background-color: rgba(variables.$link-color-dark, 0.2);
				color: variables.$link-color-dark;
			}
		}
	}
}

/* Search bar component */
.search-container {
	margin-bottom: 2rem;
	position: relative;
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
	padding: 0 15px;
	width: 100%;
	box-sizing: border-box;
	display: flex;
	gap: 8px;
	align-items: center;

	.search-icon {
		position: absolute;
		left: 27px;
		top: 50%;
		transform: translateY(-50%);
		width: 16px;
		height: 16px;
		z-index: 2;
		opacity: 0.6;
		transition: opacity 0.2s ease;

		svg {
			width: 100%;
			height: 100%;
			stroke: variables.$text-color-secondary;
		}
	}

	.search-input {
		flex: 1;
		padding: 9px 9px 9px 30px;
		font-size: 14px;
		border: 1px solid rgb(255 255 255 / 10%);
		border-radius: 8px;
		background: linear-gradient(to bottom,
				color.adjust(variables.$card-bg, $lightness: 2%),
				variables.$card-bg);
		transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
		box-shadow:
			0 1px 3px rgb(0 0 0 / 10%),
			0 1px 2px rgb(0 0 0 / 6%);
		color: variables.$text-color;
		position: relative;
		z-index: 1;

		&:hover {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg, $lightness: 3%),
					color.adjust(variables.$card-bg, $lightness: 1%));
			box-shadow:
				0 2px 4px rgb(0 0 0 / 5%);
		}

		&:focus {
			outline: none;
			border-color: variables.$link-color;
			background: linear-gradient(to bottom,
					color.adjust(variables.$white, $lightness: -1%),
					variables.$white);
			box-shadow:
				0 0 0 2px rgba(variables.$link-color, 0.1),
				0 2px 4px rgb(0 0 0 / 5%);

			&+.search-icon {
				opacity: 0.8;
			}
		}

		&:active {
			border-color: variables.$link-color;
		}

		&::placeholder {
			color: variables.$text-color-secondary;
			transition: color 0.2s ease;
		}

		/* Clear button styling */
		&::-webkit-search-cancel-button {
			appearance: none;
			height: 14px;
			width: 14px;
			background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
			background-repeat: no-repeat;
			background-position: center;
			cursor: pointer;
			opacity: 0.6;
			transition: opacity 0.2s ease;

			&:hover {
				opacity: 0.8;
			}
		}
	}
	
	.posts-only-button {
		padding: 8px 16px;
		font-size: 16px;
		font-weight: 500;
		color: variables.$text-color-secondary;
		background: linear-gradient(to bottom,
				color.adjust(variables.$card-bg, $lightness: 2%),
				variables.$card-bg);
		border: 1px solid rgb(255 255 255 / 10%);
		border-radius: 8px;
		cursor: pointer;
		transition: all 0.2s ease;
		box-shadow:
			0 1px 3px rgb(0 0 0 / 10%),
			0 1px 2px rgb(0 0 0 / 6%);
		white-space: nowrap;
		
		&:hover {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg, $lightness: 5%),
					color.adjust(variables.$card-bg, $lightness: 3%));
			border-color: rgba(variables.$border-color, 0.3);
			color: variables.$text-color;
			box-shadow:
				0 2px 4px rgb(0 0 0 / 12%),
				0 1px 3px rgb(0 0 0 / 8%);
			transform: translateY(-1px);
		}
		
		&.active {
			background: #000;
			color: variables.$white;
			border-color: #000;
		}
	}
}

@media (prefers-color-scheme: dark) {
	.search-container {
		.search-icon {
			svg {
				stroke: variables.$text-color-secondary-dark;
			}
		}

		.search-input {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg-dark, $lightness: 2%),
					variables.$card-bg-dark);
			border-color: variables.$border-color-dark;
			color: variables.$text-color-dark;
			box-shadow:
				0 1px 2px rgb(0 0 0 / 20%),
				0 -1px 0 rgb(255 255 255 / 5%) inset,
				0 1px 0 rgb(0 0 0 / 10%) inset;

			&:focus {
				border-color: hsl(40deg 90% 45%);
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 5%),
						color.adjust(variables.$card-bg-dark, $lightness: 3%));
				box-shadow:
					0 0 0 2px rgb(hsl(40deg 90% 45%), 0.2),
					0 2px 4px rgb(0 0 0 / 20%),
					0 -1px 0 rgb(255 255 255 / 5%) inset,
					0 1px 0 rgb(0 0 0 / 10%) inset;
			}

			&:active {
				border-color: hsl(40deg 90% 45%);
			}

			&:hover {
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 4%),
						color.adjust(variables.$card-bg-dark, $lightness: 2%));
				box-shadow:
					0 2px 4px rgb(0 0 0 / 20%),
					0 -1px 0 rgb(255 255 255 / 5%) inset,
					0 1px 0 rgb(0 0 0 / 10%) inset;
			}

			&::placeholder {
				color: variables.$text-color-secondary-dark;
			}

			&::-webkit-search-cancel-button {
				background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23a1a1aa' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
			}
		}
		
		.posts-only-button {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg-dark, $lightness: 2%),
					variables.$card-bg-dark);
			border-color: variables.$border-color-dark;
			color: variables.$text-color-secondary-dark;
			box-shadow:
				0 1px 2px rgb(0 0 0 / 20%),
				0 -1px 0 rgb(255 255 255 / 5%) inset,
				0 1px 0 rgb(0 0 0 / 10%) inset;
			
			&:hover {
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 6%),
						color.adjust(variables.$card-bg-dark, $lightness: 4%));
				border-color: rgba(variables.$border-color-dark, 0.4);
				color: variables.$text-color-dark;
				box-shadow:
					0 2px 4px rgb(0 0 0 / 25%),
					0 -1px 0 rgb(255 255 255 / 8%) inset;
				transform: translateY(-1px);
			}
			
			&.active {
				background: #000;
				color: variables.$white;
				border-color: rgb(255 255 255 / 10%);
			}
		}
	}
}

.no-results-message {
	text-align: center;
	padding: 2rem;
	color: variables.$text-color-secondary;
	font-style: italic;
}

@media (prefers-color-scheme: dark) {
	.no-results-message {
		color: variables.$text-color-secondary-dark;
	}
}

// Utility class for mobile-only display
.mobile-only {
	display: none !important;
}

// Show mobile-only elements only on mobile (768px and below)
@media screen and (max-width: variables.$mobile-breakpoint) {
	.mobile-only {
		display: block !important;
	}
}

// Ensure mobile-only is hidden on tablet and desktop
@media screen and (min-width: calc(variables.$mobile-breakpoint + 1px)) {
	.mobile-only {
		display: none !important;
	}
}

@media screen and (max-width: variables.$mobile-breakpoint) {
	.mobile-hide {
		display: none !important;
	}

	.profile-header .contact-wrapper.mobile-only {
		position: absolute;
		top: 100px;
		right: -65px;
		margin-top: 0;
		width: auto;
		display: flex;
		justify-content: center;
	}

	.contact-wrapper.mobile-only .contact-button {
		height: 24px;
		width: 24px;
		padding: initial;
		display: flex;
		align-items: center;
		justify-content: center;
	}
}

// --- Mobile Contact Modal Styles ---
@media screen and (max-width: variables.$mobile-breakpoint) {
	.contact-modal {
		position: fixed;
		inset: 0;
		z-index: 2000;
		display: flex;
		align-items: center;
		justify-content: center;
		pointer-events: none;
		opacity: 0;
		transition: opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.contact-modal.active {
		pointer-events: auto;
		opacity: 1;
	}

	.contact-modal-backdrop {
		position: absolute;
		inset: 0;
		background: rgb(30 30 40 / 35%);
		z-index: 1;
		opacity: 0;
		transition: opacity 0.3s ease-out;

		&::before {
			content: '';
			position: absolute;
			inset: 0;
			backdrop-filter: blur(0);
			opacity: 0;
			transition: opacity 0.3s ease-out;
		}
	}

	.contact-modal.active .contact-modal-backdrop {
		opacity: 1;

		&::before {
			backdrop-filter: blur(6px);
			opacity: 1;
		}
	}

	.contact-modal-sheet {
		position: relative;
		width: calc(100vw - 12px);
		max-width: 450px;
		margin: 0 auto;
		margin-left: 6px;
		margin-right: 6px;
		background: rgb(255 255 255 / 65%);
		border-radius: 12px;
		box-shadow: 0 -8px 32px rgb(0 0 0 / 12%);
		padding: 24px;
		z-index: 2;
		transform: scale(0.3) translateY(-20px);
		opacity: 0;
		transition:
			transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275),
			opacity 0.3s ease-out;
		border: 1px solid rgb(200 200 220 / 10%);
		display: flex;
		flex-direction: column;
		align-items: center;
		min-height: 220px;
		color: #ddd;
		transform-origin: center center;

		&::before {
			content: '';
			position: absolute;
			inset: 0;
			backdrop-filter: blur(2px) saturate(1.2);
			opacity: 0;
			transition: opacity 0.3s ease-out;
			border-radius: inherit;
			z-index: -1;
		}
	}

	.contact-modal.active .contact-modal-sheet {
		transform: scale(1) translateY(0);
		opacity: 1;

		&::before {
			backdrop-filter: blur(20px) saturate(1.5);
			opacity: 1;
		}
	}

	.contact-modal-title {
		font-size: 15px;
		font-weight: 400;
		margin-bottom: 18px;
		color: #666;
		letter-spacing: 0.01em;
		text-align: center;
		opacity: 0;
		transform: translateY(10px);
		transition:
			opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.1s,
			transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.1s;
	}

	.contact-modal.active .contact-modal-title {
		opacity: 1;
		transform: translateY(0);
	}

	.contact-modal-options {
		width: 100%;
		display: flex;
		flex-direction: row;
		gap: 12px;
		max-height: 150px;
		justify-content: center;
		opacity: 0;
		transform: translateY(15px);
		transition:
			opacity 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.2s,
			transform 0.4s cubic-bezier(0.4, 0, 0.2, 1) 0.2s;
	}

	.contact-modal.active .contact-modal-options {
		opacity: 1;
		transform: translateY(0);
	}

	.contact-modal-options {

		button,
		a {
			height: auto;
			width: auto;
			min-width: 80px;
			display: flex;
			flex-direction: column;
			align-items: center;
			justify-content: center;
			padding: 16px 12px 12px;
			font-size: 12px;
			border-radius: 8px;
			background-color: rgb(255 255 255 / 36%);
			color: #9291a1;
			border: none;
			box-shadow: 0 1px 3px rgb(0 0 0 / 8%);
			text-decoration: none;
			transition: background-color 0.2s ease, box-shadow 0.2s ease;
			flex: 1;
			max-width: 120px;

			&:hover {
				background-color: rgb(255 255 255 / 100%);
				box-shadow: 0 2px 6px rgb(0 0 0 / 12%);

				.contact-icon {
					transform: translateY(-2px);
				}
			}

			.contact-icon {
				width: 64px;
				height: 64px;
				margin-bottom: 8px;
				border-radius: 4px;
				object-fit: contain;
				transition: transform 0.2s ease;
			}

			.contact-label {
				font-weight: 500;
				text-align: center;
				line-height: 1.2;
			}
		}
	}

	@media (prefers-color-scheme: dark) {
		.contact-modal-sheet {
			background-color: hsl(28deg 8% 15% / 9%);
		}

		.contact-modal-title {
			color: #e5e5e5;
		}

		.contact-modal-options button,
		.contact-modal-options a {
			background-color: rgb(0 0 0 / 36%);
			color: #8f8f8f;
			box-shadow: 0 1px 3px rgb(255 255 255 / 10%);

			&:hover {
				background-color: rgb(255 255 255 / 20%);
				box-shadow: 0 2px 6px rgb(255 255 255 / 15%);
			}

			.contact-label {
				color: #c8c7d6;
			}
		}
	}
}

// Hide modal on tablet and desktop
@media screen and (width >=768px) {
	.contact-modal {
		display: none !important;
	}
}

// Ensure dynamically loaded content is scrollable
.content-inner-wrapper {
	height: 100%;
	overflow: hidden scroll;
}

// Tablet fix: ensure inner wrapper is scrollable on tablet
@media screen and (width >=601px) and (width <=1024px) {
	.device-tablet .blog-content>.content-inner-wrapper {
		height: 100%;
		overflow: hidden auto;
	}
}

/* Layout Toggle Switch - Search Input Style */
.layout-toggle {
	display: none;

	/* Hidden by default, shown on desktop/tablet */
	flex-direction: row;
	align-items: center;
	gap: 0.75rem;
	margin-bottom: 1rem;
	margin-top: 15px;
	user-select: none;

	/* Show on desktop and tablet only */
	@media screen and (min-width: variables.$mobile-breakpoint) {
		display: flex;
	}

	/* Tablet specific styles */
	@media screen and (max-width: variables.$desktop-breakpoint) {
		margin-top: 0;
	}

	&__switch {
		position: relative;
		width: 46px;
		height: 28px;

		/* Match search input height */
		padding: 9px;

		/* Match search input padding */
		border: 1px solid rgb(255 255 255 / 10%);
		border-radius: 6px;

		/* Match search input border radius */
		background: linear-gradient(to bottom,
				color.adjust(variables.$card-bg, $lightness: 2%),
				variables.$card-bg);
		transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
		box-shadow:
			0 1px 3px rgb(0 0 0 / 10%),
			0 1px 2px rgb(0 0 0 / 6%);
		cursor: pointer;
		overflow: hidden;
		box-sizing: border-box;

		/* Inner track */
		&::before {
			content: '';
			position: absolute;
			inset: 2px;
			background: rgb(0 0 0 / 12%);
			border-radius: 6px;
			box-shadow: inset 0 1px 2px rgb(0 0 0 / 10%);
		}

		/* Toggle handle */
		&::after {
			content: '';
			position: absolute;
			top: 4px;
			left: 6px;
			width: 15px;
			height: 15px;
			background: linear-gradient(to bottom,
					color.adjust(variables.$white, $lightness: -1%),
					variables.$white);
			border-radius: 3px;
			border: 1px solid rgb(0 0 0 / 10%);
			box-shadow:
				0 1px 2px rgb(0 0 0 / 10%),
				0 1px 1px rgb(0 0 0 / 6%);
			transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
			transform: translateX(0);
		}

		/* Hover state */
		&:hover {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg, $lightness: 3%),
					color.adjust(variables.$card-bg, $lightness: 1%));
			box-shadow:
				0 2px 4px rgb(0 0 0 / 5%);

			&::after {
				box-shadow:
					0 2px 3px rgb(0 0 0 / 12%),
					0 1px 2px rgb(0 0 0 / 8%);
			}
		}

		/* Active/pressed state */
		&:active {
			&::after {
				box-shadow:
					0 1px 2px rgb(0 0 0 / 8%);
			}
		}
	}

	/* Grid mode - handle moves to right */
	&[data-layout="grid"] {
		.layout-toggle__switch {

			/* Keep the same neutral background - no color change for either/or toggle */
			&::after {
				transform: translateX(15px);

				/* Move to right side */
			}
		}
	}
}

/* Dark mode styles for layout toggle */
@media (prefers-color-scheme: dark) {
	.layout-toggle {
		&__switch {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg-dark, $lightness: 2%),
					variables.$card-bg-dark);
			border-color: variables.$border-color-dark;
			box-shadow:
				0 1px 2px rgb(0 0 0 / 20%),
				0 -1px 0 rgb(255 255 255 / 5%) inset,
				0 1px 0 rgb(0 0 0 / 10%) inset;

			&::before {
				background: rgb(0 0 0 / 20%);
				box-shadow: inset 0 1px 2px rgb(0 0 0 / 30%);
			}

			&::after {
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 15%),
						color.adjust(variables.$card-bg-dark, $lightness: 10%));
				border-color: rgb(255 255 255 / 10%);
				box-shadow:
					0 1px 2px rgb(0 0 0 / 30%),
					0 1px 1px rgb(0 0 0 / 20%),
					0 -1px 0 rgb(255 255 255 / 5%) inset;
			}

			&:hover {
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 4%),
						color.adjust(variables.$card-bg-dark, $lightness: 2%));
				box-shadow:
					0 2px 4px rgb(0 0 0 / 20%),
					0 -1px 0 rgb(255 255 255 / 5%) inset,
					0 1px 0 rgb(0 0 0 / 10%) inset;

				&::after {
					box-shadow:
						0 2px 3px rgb(0 0 0 / 40%),
						0 1px 2px rgb(0 0 0 / 30%),
						0 -1px 0 rgb(255 255 255 / 8%) inset;
				}
			}

			&:active {
				&::after {
					box-shadow:
						0 1px 2px rgb(0 0 0 / 20%),
						0 -1px 0 rgb(255 255 255 / 3%) inset;
				}
			}
		}

		/* Grid mode in dark mode */
		&[data-layout="grid"] {
			.layout-toggle__switch {

				/* Keep the same neutral background in dark mode - no color change needed for either/or toggle */
				&::after {
					transform: translateX(15px);
				}
			}
		}
	}
}

/* Dark mode styles for location pill */
@media (prefers-color-scheme: dark) {
	.profile-header {
		.profile-info {
			.location-pill {
				background: rgba(variables.$white, 0.1);
				color: variables.$text-color-secondary-dark;

				&:hover {
					background: rgba(variables.$white, 0.15);
					color: variables.$text-color-dark;
				}

				.location-icon {
					color: variables.$text-color-secondary-dark;
				}
			}
		}
	}
}

.blog #projectsContent.portfolio-list {
	.company-group {
		.company-projects {
			.portfolio-item[data-cover-image=true] {
				.portfolio-content {
					.title-row {
						display: flex;
						flex-direction: row;
						margin-bottom: 0;

						.content-text {
							flex-grow: 1;

							h4 {
								display: flex;
								padding: 3px 6px;
								background: rgb(0 0 0 / 15%);
								border-radius: 6px;
								color: white;
								font-size: 14px;
								font-weight: 600;
								margin: 0;
								text-shadow: 0 1px 3px rgb(0 0 0 / 50%);
							}

							p {
								display: none;
							}
						}
					}
				}
			}
		}
	}
}

/* Project Stats
   ========================================================================== */

// CSS custom property for animated border
@property --angle {
	syntax: '<angle>';
	initial-value: 0deg;
	inherits: false;
}

// Keyframes for border rotation
@keyframes rotate {
	0% {
		--angle: 0deg;
	}
	100% {
		--angle: 360deg;
	}
}

.project-impact-stats {
	/* Changed from project-stats to avoid JS conflicts */
	display: flex;
	justify-content: flex-start;
	gap: clamp(0.75rem, 2vw, 1.5rem);
	margin: 0;
	padding: 0;
	background: none;
	border-radius: 0;
	box-shadow: none;
	opacity: 1;
	flex-wrap: wrap;

	.stat-item-wrapper {
		position: relative;
		flex-shrink: 0;
		
		// Default solid gradient border
		&::before {
			content: '';
			position: absolute;
			inset: -1px;
			background: linear-gradient(135deg, 
				rgba(156, 163, 175, 0.3) 0%, 
				rgba(156, 163, 175, 0.1) 50%, 
				rgba(156, 163, 175, 0.3) 100%
			);
			border-radius: 12px;
			z-index: -1;
			opacity: 1;
			transition: all 0.4s ease;
			animation: none;
		}
		
		// Animated border effect on hover
		&::after {
			content: '';
			position: absolute;
			inset: -1px;
			background: conic-gradient(
				from var(--angle),
				transparent 70%,
				rgba(156, 163, 175, 0.6) 80%,
				rgba(156, 163, 175, 0.8) 90%,
				rgba(156, 163, 175, 0.6) 100%
			);
			border-radius: 12px;
			z-index: -1;
			opacity: 0;
			transition: opacity 0.4s ease;
			animation: none;
		}
		
		&:hover::after {
			opacity: 1;
			animation: rotate 12s linear infinite;
		}
	}

	.stat-item {
		position: relative;
		flex: none;
		text-align: center;
		padding: clamp(0.75rem, 1.5dvh, 1.25rem) clamp(1rem, 2dvh, 1.5rem);
		background: rgba(255, 255, 255, 0.08);
		backdrop-filter: blur(30px);
		-webkit-backdrop-filter: blur(30px);
		border: 1px solid rgba(255, 255, 255, 0.15);
		border-radius: 11px;
		overflow: hidden;
		opacity: 1;
		transform: translateY(0);
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		min-width: 120px;
		
		// Enhanced glassmorphism shadow - using hover as default
		box-shadow: 
			0 8px 30px rgba(0, 0, 0, 0.2),
			inset 0 1px 1px rgba(255, 255, 255, 0.15);

		&:hover {
			transform: translateY(-5px);
			background: rgba(255, 255, 255, 0.05);
			border-color: rgba(255, 255, 255, 0.2);
			box-shadow: 
				0 12px 40px rgba(0, 0, 0, 0.25),
				inset 0 1px 1px rgba(255, 255, 255, 0.2);
		}

		.stat-value {
			font-size: clamp(1.75rem, 3dvh, 2.25rem);
			font-weight: 700;
			line-height: 1.1;
			color: #fff;
			margin-bottom: clamp(0.25rem, 0.5dvh, 0.5rem);
			font-feature-settings: "tnum";
			font-variant-numeric: tabular-nums;
			opacity: 1;
			text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
		}

		.stat-label {
			font-size: clamp(0.75rem, 1.2dvh, 0.875rem);
			color: rgba(255, 255, 255, 0.8);
			font-weight: 500;
			opacity: 1;
			text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
			text-transform: uppercase;
			letter-spacing: 0.05em;
		}
	}

	@media (max-width: variables.$tablet-breakpoint) {
		gap: clamp(0.5rem, 1.5vw, 1rem);

		.stat-item {
			min-width: 100px;
			padding: clamp(0.5rem, 1dvh, 0.75rem) clamp(0.75rem, 1.5dvh, 1rem);

			.stat-value {
				font-size: clamp(1.5rem, 2.5dvh, 2rem);
			}

			.stat-label {
				font-size: clamp(0.625rem, 1dvh, 0.75rem);
			}
		}
	}

	@media (prefers-color-scheme: dark) {
		.stat-item-wrapper {
			// Default solid gradient border for dark mode
			&::before {
				background: linear-gradient(135deg, 
					rgba(229, 231, 235, 0.3) 0%, 
					rgba(229, 231, 235, 0.1) 50%, 
					rgba(229, 231, 235, 0.3) 100%
				);
			}
			
			// Animated border effect for dark mode
			&::after {
				background: conic-gradient(
					from var(--angle),
					transparent 70%,
					rgba(229, 231, 235, 0.6) 80%,
					rgba(229, 231, 235, 0.8) 90%,
					rgba(229, 231, 235, 0.6) 100%
				);
			}
		}
		
		.stat-item {
			background: rgba(20, 20, 20, 0.9);
			border-color: rgba(255, 255, 255, 0.15);

			&:hover {
				background: rgba(30, 30, 30, 0.9);
				border-color: rgba(255, 255, 255, 0.2);
			}
		}
	}
}

// Impact Modal Styles
.impact-modal {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 9999;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 20px;

	.impact-modal-backdrop {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.8);
		backdrop-filter: blur(8px);
		-webkit-backdrop-filter: blur(8px);
		cursor: pointer;
	}

	.impact-modal-sheet {
		position: relative;
		background: hsl(0, 0.5%, 9.95%);
		border-radius: 16px;
		max-width: 800px;
		width: 100%;
		max-height: 90vh;
		overflow-y: auto;
		box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.8), 
		            0 10px 10px -5px rgba(0, 0, 0, 0.4);
		animation: slideUpModal 0.3s ease-out;

		@media (max-width: variables.$mobile-breakpoint) {
			max-height: 95vh;
			margin: 0;
		}
	}

	.impact-modal-close {
		position: absolute;
		top: 16px;
		right: 16px;
		width: 32px;
		height: 32px;
		border: none;
		background: rgba(variables.$black, 0.05);
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		cursor: pointer;
		transition: all 0.2s ease;
		color: variables.$text-color;
		z-index: 10;

		&:hover {
			background: rgba(variables.$black, 0.1);
			transform: scale(1.05);
		}

		svg {
			width: 16px;
			height: 16px;
		}
	}

	.impact-modal-title {
		font-size: 15px;
		font-weight: 500;
		margin: 0;
		padding: 0;
		text-align: center;
		color: white;
	}

	.impact-modal-content {
		padding: 0 40px 40px;

		@media (max-width: variables.$mobile-breakpoint) {
			padding: 0 24px 32px;
		}
	}

	.impact-section {
		margin-bottom: 0;

		&:first-child {
			margin-top: 24px;
		}

		h3 {
			font-size: 20px;
			font-weight: 600;
			margin-bottom: 20px;
			color: variables.$text-color;
		}
	}

	.impact-stats-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 20px;
		margin-bottom: 32px;
	}

	.impact-stat-card {
		background: rgba(variables.$black, 0.03);
		padding: 24px;
		border-radius: 12px;
		text-align: center;
		transition: all 0.2s ease;

		&:hover {
			background: rgba(variables.$black, 0.05);
			transform: translateY(-2px);
		}

		.impact-number {
			display: block;
			font-size: 36px;
			font-weight: 700;
			color: variables.$link-color;
			margin-bottom: 8px;
		}

		.impact-label {
			display: block;
			font-size: 14px;
			font-weight: 600;
			margin-bottom: 8px;
			color: variables.$text-color;
		}

		.impact-description {
			font-size: 12px;
			color: variables.$text-color-secondary;
			margin: 0;
		}
	}

	.impact-achievements {
		list-style: none;
		padding: 0;
		margin: 0;

		li {
			position: relative;
			padding-left: 24px;
			margin-bottom: 12px;
			font-size: 14px;
			line-height: 1.6;
			color: variables.$text-color;

			&:before {
				content: "â€¢";
				position: absolute;
				left: 8px;
				color: variables.$link-color;
				font-weight: bold;
			}
		}
	}

	.impact-industries {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
		gap: 16px;
	}

	.industry-card {
		background: rgba(variables.$black, 0.03);
		padding: 20px;
		border-radius: 8px;
		transition: all 0.2s ease;

		&:hover {
			background: rgba(variables.$black, 0.05);
		}

		h4 {
			font-size: 16px;
			font-weight: 600;
			margin: 0 0 8px 0;
			color: variables.$text-color;
		}

		p {
			font-size: 12px;
			color: variables.$text-color-secondary;
			margin: 0;
		}
	}

	.impact-philosophy {
		font-size: 16px;
		line-height: 1.8;
		color: variables.$text-color;
		font-style: italic;
		background: rgba(variables.$black, 0.02);
		padding: 24px;
		border-radius: 8px;
		margin: 0;
	}
}

@keyframes slideUpModal {
	from {
		opacity: 0;
		transform: translateY(20px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

// Dark mode for impact modal
@media (prefers-color-scheme: dark) {
	.impact-modal {
		.impact-modal-sheet {
			background: hsl(0, 0.5%, 9.95%);
		}

		.impact-modal-close {
			background: rgba(variables.$white, 0.1);
			color: variables.$text-color-dark;

			&:hover {
				background: rgba(variables.$white, 0.15);
			}
		}

		.impact-modal-title {
			color: variables.$text-color-dark;
		}

		.impact-section h3 {
			color: variables.$text-color-dark;
		}

		.impact-stat-card {
			background: rgba(variables.$white, 0.05);

			&:hover {
				background: rgba(variables.$white, 0.08);
			}

			.impact-number {
				color: variables.$link-color-dark;
			}

			.impact-label {
				color: variables.$text-color-dark;
			}

			.impact-description {
				color: variables.$text-color-secondary-dark;
			}
		}

		.impact-achievements li {
			color: variables.$text-color-dark;

			&:before {
				color: variables.$link-color-dark;
			}
		}

		.industry-card {
			background: rgba(variables.$white, 0.05);

			&:hover {
				background: rgba(variables.$white, 0.08);
			}

			h4 {
				color: variables.$text-color-dark;
			}

			p {
				color: variables.$text-color-secondary-dark;
			}
		}

		.impact-philosophy {
			background: rgba(variables.$white, 0.03);
			color: variables.$text-color-dark;
		}
	}
}