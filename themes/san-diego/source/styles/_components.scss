@use 'variables';

@mixin button-styles {
	padding: 0.5rem 1rem;
	border: 1px solid currentColor;
	border-radius: 6px;
	background: transparent;
	font-family: inherit;
	font-size: 0.9rem;
	text-decoration: none;
	cursor: pointer;
	display: inline-block;
	transition: all 150ms ease;

	&:hover {
		background: currentColor;
		color: variables.$white;
	}

	&.active {
		background: variables.$link-color;
		color: variables.$white;
	}
}

.button,
button {
	@include button-styles;
}

.card-grid {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	max-width: 1000px;
	margin: auto;
	padding: 0 16px;

	@media screen and (max-width: 1000px) {
		max-width: 800px;
	}

	@media screen and (max-width: variables.$mobile-breakpoint) {
		grid-template-columns: repeat(2, 1fr);
	}

	@media screen and (max-width: 600px) {
		display: block;
	}
}

.card {
	overflow: hidden;
	border-radius: 16px;
	background-color: variables.$card-bg;
	margin-bottom: 21px;
	transition: all 200ms ease;
}

.post-video {
	width: 100%;
	max-width: 100%;
	height: auto;
	border-radius: 8px;
	margin: 24px 0;
}

.segmented-button {
	display: flex;
	gap: 0.5rem;
	padding: 0.25rem;
	border-radius: 8px;
	background: variables.$white-1;
	border: 1px solid variables.$border-color;

	@media screen and (max-width: variables.$mobile-breakpoint) {
		display: none;
	}

	button {
		flex: 1;
		border: none;
		background: none;
		padding: 0.5rem 1rem;
		border-radius: 6px;
		cursor: pointer;
		transition: all 0.2s ease;

		&.active {
			background: variables.$white;
			box-shadow: variables.$shadow-soft;
		}
	}
}

.archive-toggle {
	display: flex;
	gap: 0.5rem;
	margin-bottom: 20px;

	button {
		&.active {
			background: variables.$link-color;
			color: variables.$white;
		}
	}
}

blockquote {
	margin: 24px 0;
	padding: 16px 24px;
	border-left: 4px solid variables.$link-color;
	background: variables.$card-bg;
	border-radius: 4px;

	p {
		margin: 0;
		color: variables.$text-color;
		font-style: italic;

		&:not(:last-child) {
			margin-bottom: 16px;
		}
	}

	cite {
		display: block;
		margin-top: 8px;
		font-size: 0.9em;
		color: variables.$text-color-secondary;
		font-style: normal;

		&:before {
			content: "â€”";
			margin-right: 8px;
		}
	}
}

.alert {
	display: flex;
	align-items: flex-start;
	padding: 1rem 1.25rem;
	margin: 1.5rem 0;
	border-radius: 12px;
	font-size: 0.95rem;
	line-height: 1.5;
	background-color: variables.$white-1;
	border: 1px solid variables.$border-color;
	color: variables.$text-color;

	&--warning {
		background-color: #fff9eb;
		border-color: #ffd77a;
	}

	&--error {
		background-color: #fef1f1;
		border-color: #facfcf;
	}

	&--success {
		background-color: #f1f9f1;
		border-color: #cfeacf;
	}

	&-icon {
		flex-shrink: 0;
		margin-right: 0.75rem;
		margin-top: 0.125rem;

		svg {
			width: 20px;
			height: 20px;
		}
	}

	&-content {
		flex: 1;

		h3 {
			margin: 0 0 6px;
			font-size: 15px !important;
			color: variables.$text-color;
		}

		p {
			margin: 0;
			font-size: 12px;

			&:not(:last-child) {
				margin-bottom: 0.5rem;
			}
		}

		a {
			color: variables.$link-color;
			text-decoration: none;

			&:hover {
				text-decoration: underline;
			}
		}
	}
}

.scroll-to-top {
	position: fixed;
	padding: 12px;
	bottom: 1rem;
	right: 1rem;
	width: 40px;
	height: 40px;
	z-index: 1000;
	display: flex;
	align-items: center;
	justify-content: center;
	background: variables.$link-color;
	color: variables.$white;
	border: none;
	border-radius: 6px;
	cursor: pointer;
	opacity: 0;
	visibility: hidden;
	transition: all 0.3s ease;

	&.visible {
		opacity: 1;
		visibility: visible;
	}

	&:hover {
		background: variables.$link-color-dark;
		transform: translateY(-3px);
		box-shadow: 0 3px 12px rgba(0, 0, 0, 0.1);
	}
}

@media (prefers-color-scheme: dark) {

	.button,
	button {
		color: variables.$link-color-dark;

		&.active {
			background: variables.$link-color-dark;
		}
	}

	.segmented-button {
		background: variables.$card-bg-dark;
	}

	.alert {
		background-color: variables.$card-bg-dark;
		border-color: variables.$border-color-dark;
		color: variables.$text-color-dark;

		&--warning {
			background-color: rgba(255, 215, 122, 0.1);
			border-color: rgba(255, 215, 122, 0.3);
		}

		&--error {
			background-color: rgba(250, 207, 207, 0.1);
			border-color: rgba(250, 207, 207, 0.3);
		}

		&--success {
			background-color: rgba(207, 234, 207, 0.1);
			border-color: rgba(207, 234, 207, 0.3);
		}

		a {
			color: variables.$link-color-dark;
		}

		h3 {
			color: variables.$text-color-dark;
		}
	}

	.scroll-to-top {
		background: variables.$primary-color-dark;
		border-color: variables.$border-color-dark;
	}
}

button {
	display: flex;
	gap: 4px;
	border: 1px solid rgba(255, 255, 255, 0.1);
	box-shadow:
		0 1px 3px rgba(0, 0, 0, 0.1),
		0 1px 2px rgba(0, 0, 0, 0.06),
		inset 0 2px 4px rgba(0, 0, 0, 0.1),
		inset 0 -1px 2px rgba(255, 255, 255, 0.1);
	cursor: pointer;
	transition: all 0.3s ease;

	@media (prefers-color-scheme: dark) {
		box-shadow:
			0 1px 3px rgba(0, 0, 0, 0.2),
			0 1px 2px rgba(0, 0, 0, 0.12),
			inset 0 2px 4px rgba(0, 0, 0, 0.2),
			inset 0 -1px 2px rgba(255, 255, 255, 0.05);
	}
}

.mobile-tabs {
	display: none;
	margin-bottom: 2rem !important;

	@media screen and (max-width: variables.$mobile-breakpoint) {
		display: flex;
		width: 100%;
		margin: 0 auto 1rem;
		background: variables.$card-bg;
		border-radius: 8px;
		padding: 4px;
		gap: 4px;
		position: relative;
		box-shadow:
			0 1px 3px rgba(0, 0, 0, 0.1),
			0 1px 2px rgba(0, 0, 0, 0.06),
			inset 0 2px 4px rgba(0, 0, 0, 0.1),
			inset 0 -1px 2px rgba(255, 255, 255, 0.1);
		border: 1px solid rgba(255, 255, 255, 0.1);

		// Add CSS custom property for slider position
		--slider-x: 0px;

		&::after {
			content: '';
			position: absolute;
			left: 4px;
			top: 4px;
			width: calc((100% - 12px) / 2);
			height: calc(100% - 8px);
			background: variables.$link-color;
			border-radius: 6px;
			z-index: 1;
			box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
			transform: translateX(var(--slider-x));
			transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
			will-change: transform;

			.is-dragging & {
				transition: none;
			}
		}

		&[data-active-tab="portfolio"]:not(.is-dragging)::after {
			--slider-x: calc(100% + 4px);
		}

		.tab-button {
			flex: 1;
			padding: 8px 16px;
			border: none;
			background: transparent;
			border-radius: 6px;
			font-size: 14px;
			font-weight: 500;
			color: variables.$text-color-secondary;
			cursor: pointer;
			transition: color 0.2s ease;
			position: relative;
			z-index: 2;
			text-align: center;
			box-shadow: none;
			justify-content: center;

			&.active {
				color: variables.$white;
			}

			&:not(.active):hover {
				color: variables.$text-color;
			}
		}
	}

	@media (prefers-color-scheme: dark) {
		background: rgba(255, 255, 255, 0.1);

		&::after {
			background: variables.$link-color-dark;
			box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
		}

		.tab-button {
			color: variables.$text-color-secondary-dark;

			&:not(.active):hover {
				color: variables.$text-color-dark;
			}
		}
	}
}

.profile-header {
	position: relative;

	.contact-wrapper {
		position: absolute;
		top: -3px;
		right: -18px;
		z-index: 10;
		perspective: 1000px;

		.contact-button {
			padding: 8px 16px;
			background: variables.$card-bg;
			border: 1px solid variables.$border-color;
			border-radius: 6px;
			font-size: 12px;
			color: variables.$text-color;
			text-decoration: none;
			cursor: pointer;
			position: relative;
			transform-style: preserve-3d;
			transition: transform 0.3s ease;
			transform-origin: 50% 100%;

			&:hover {
				background: variables.$link-color;
				color: variables.$white;
			}

			&.active {
				transform: rotateX(-90deg);
			}
		}

		.contact-options {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			display: flex;
			flex-direction: column;
			transform-style: preserve-3d;
			transform-origin: 50% 0;
			transform: rotateX(-90deg);
			opacity: 0;
			transition: transform 0.3s ease, opacity 0.1s;

			.contact-option {
				padding: 8px 16px;
				font-size: 12px;
				color: variables.$text-color;
				text-decoration: none;
				text-align: center;
				background: variables.$card-bg;
				border: 1px solid variables.$border-color;
				transition: transform 0.2s ease;

				&:first-child {
					border-top-left-radius: 6px;
					border-top-right-radius: 6px;
				}

				&:last-child {
					border-bottom-left-radius: 6px;
					border-bottom-right-radius: 6px;
				}

				&:hover {
					background: variables.$link-color;
					color: variables.$white;
					transform: scale(1.05);
				}
			}
		}

		.contact-button.active+.contact-options {
			transform: rotateX(0deg);
			opacity: 1;
			transition: transform 0.3s ease 0.1s, opacity 0.1s 0.1s;
		}

		@media (prefers-color-scheme: dark) {
			.contact-button {
				background: variables.$card-bg-dark;
				border-color: variables.$border-color-dark;
				color: variables.$text-color-dark;

				&:hover {
					background: variables.$link-color-dark;
				}
			}

			.contact-options {
				.contact-option {
					background: variables.$card-bg-dark;
					border-color: variables.$border-color-dark;
					color: variables.$text-color-dark;

					&:hover {
						background: variables.$link-color-dark;
					}
				}
			}
		}
	}
}

.tldr-modal {
	position: fixed;
	left: 0;
	bottom: 0;
	right: 0;
	width: 100%;
	margin: 0 auto;
	width: 90vw;
	max-width: 600px;
	max-height: 90vh;
	background: rgba(0, 0, 0, 0.5);
	backdrop-filter: blur(4px);
	border-radius: 6px 6px 0 0;
	border-top: 1px solid variables.$border-color;
	border-left: 1px solid variables.$border-color;
	border-right: 1px solid variables.$border-color;
	display: flex;
	flex-direction: column;
	opacity: 0;
	visibility: hidden;
	transition: opacity 0.3s ease, visibility 0.3s ease;
	z-index: 1000;

	&.active {
		opacity: 1;
		visibility: visible;

		.modal-content {
			transform: translateY(0);
			opacity: 1;
		}
	}

	.modal-header {
		background: var(--propel-bg);
		padding: 6px;
		border: none;
		border-radius: 6px 6px 0 0;
		display: flex;
		align-items: center;
		justify-content: space-between;
		position: relative;
		margin: 0;
		width: 100%;

		h2 {
			margin: 0;
			font-size: 15px;
			color: var(--propel-text);
			text-transform: none;
		}

		.close-button {
			background: none;
			border: none;
			padding: 0;
			margin: 0;
			cursor: pointer;
			color: var(--propel-text-secondary);
			transition: color 0.2s ease;
			width: 24px;
			height: 24px;
			display: flex;
			align-items: center;
			justify-content: center;

			&:hover {
				color: var(--propel-text);
			}

			svg {
				width: 16px;
				height: 16px;
			}
		}
	}

	.modal-content {
		background: var(--propel-bg);
		width: 100%;
		overflow-y: auto;
		margin: 0;
		padding: 2rem;
		position: relative;
		box-shadow: 0 -8px 32px rgba(0, 0, 0, 0.1);
		border-top: 1px solid var(--propel-border);
		border-radius: 0;
		opacity: 0;
		transform: translateY(100%);
		transition:
			transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
			opacity 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);

		.tldr-summary {
			font-size: 15px;
			color: var(--propel-text-secondary);
			margin-top: 0;
		}

		.key-points {
			display: grid;
			gap: 1.5rem;
			margin: 2rem 0;

			.point {
				background: variables.$grey;
				border-radius: 12px;
				padding: variables.$space-sm;

				h3 {
					font-size: 0.9rem;
					margin: 0;
					color: var(--propel-text);
				}

				p {
					margin: 0;
					font-size: 12px;
					color: var(--propel-text-secondary);
					line-height: 1.5;
				}

				svg {
					width: 24px;
					height: 24px;
					color: var(--propel-green);
				}
			}
		}
	}
}

@media (prefers-color-scheme: dark) {
	.tldr-modal {
		.modal-content {
			background: var(--propel-bg);

			.modal-header {
				background: var(--propel-bg);
				border-color: var(--propel-border);

				h2 {
					color: var(--propel-text);
				}

				.close-button {
					color: var(--propel-text-secondary);

					&:hover {
						color: var(--propel-text);
					}
				}
			}

			.key-points .point {
				h3 {
					color: var(--propel-text);
				}

				p {
					color: var(--propel-text-secondary);
				}
			}

			.live-preview {
				background: var(--propel-bg-alt);

				h3 {
					color: var(--propel-text);
				}

				.preview-content {
					svg {
						color: var(--propel-green);
					}

					p {
						color: var(--propel-text-secondary);

						a {
							color: var(--propel-green);
						}
					}
				}
			}
		}
	}
}

body.modal-open {
	overflow: hidden;
}

/* Fade in/out for alert on index page */
#comingSoonAlert {
	opacity: 0;
	animation: fadeIn 0.8s forwards;
	transition: opacity 0.8s ease;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

/* Text Carousel Styles */
.text-carousel {
	margin: variables.$spacing-section 0;
	padding: 0;
	width: 100%;
	position: relative;
	overflow: hidden;

	.text-carousel-track {
		display: flex;
		overflow: hidden;
		width: 100%;
		transition: transform 0.3s ease;
	}

	.text-carousel-slide {
		flex: 0 0 100%;
		padding: variables.$space-md;
		box-sizing: border-box;
		min-height: 150px;
		background-color: variables.$card-bg;
		border: 1px solid variables.$border-color;
		border-radius: 4px;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
		margin-bottom: variables.$space-sm;

		h2 {
			margin-bottom: variables.$space-xs;
		}

		p {
			margin: 0;
		}
	}

	.text-carousel-button {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		z-index: 2;
	}

	.text-carousel-button.prev {
		left: 10px;
	}

	.text-carousel-button.next {
		right: 10px;
	}

	.text-carousel-indicators {
		margin-top: variables.$space-sm;
		display: flex;
		gap: variables.$space-xs;

		.indicator {
			width: 10px;
			height: 10px;
			border-radius: 50%;
			background: transparent;
			border: 1px solid currentColor;
			cursor: pointer;

			&.active {
				background: currentColor;
			}
		}
	}
}

/* Meta Cards Styles */
.meta-cards {
	display: flex;
	flex-direction: column;
	gap: variables.$space-sm;
	margin: 0 auto;
	max-width: 1000px;
	padding: 0 variables.$space-sm;
}

.meta-card {
	width: 100%;
	padding: variables.$space-sm;
	border-radius: 4px;
	color: variables.$text-color;
	margin: 24px 0;

	h2 {
		margin-bottom: variables.$space-xs;
		margin-top: 0;
		font-size: 1.2rem;
	}

	p {
		margin: 0;
		padding-top: 6px;
	}
}

@media (prefers-color-scheme: dark) {
	.meta-card {
		color: variables.$text-color-dark;
	}
}