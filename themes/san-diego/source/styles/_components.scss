@use 'variables';
@use "sass:color";

@mixin button-styles {
	padding: 0.5rem 1rem;
	border: 1px solid currentColor;
	border-radius: 6px;
	background: transparent;
	font-family: inherit;
	font-size: 14px;
	text-decoration: none;
	cursor: pointer;
	display: inline-block;
	transition: all 150ms ease;

	&:hover {
		background: currentColor;
		color: variables.$white;
	}

	&.active {
		background: variables.$link-color;
		color: variables.$white;
	}
}

.button,
button {
	@include button-styles;
}

.card-grid {
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	max-width: 1000px;
	margin: auto;
	padding: 0 16px;

	@media screen and (max-width: 1000px) {
		max-width: 800px;
	}

	@media screen and (max-width: variables.$mobile-breakpoint) {
		grid-template-columns: repeat(2, 1fr);
	}

	@media screen and (max-width: 600px) {
		display: block;
	}
}

.card {
	overflow: hidden;
	border-radius: 16px;
	background-color: variables.$card-bg;
	margin-bottom: 21px;
	transition: all 200ms ease;
}

.post-video {
	width: 100%;
	max-width: 100%;
	height: auto;
	border-radius: 8px;
	margin: 24px 0;
}

.segmented-button {
	display: flex;
	gap: 0.5rem;
	padding: 0.25rem;
	border-radius: 8px;
	background: variables.$white-1;
	border: 1px solid variables.$border-color;

	@media screen and (max-width: variables.$mobile-breakpoint) {
		display: none;
	}

	button {
		flex: 1;
		border: none;
		background: none;
		padding: 0.5rem 1rem;
		border-radius: 6px;
		cursor: pointer;
		transition: all 0.2s ease;

		&.active {
			background: variables.$white;
			box-shadow: variables.$shadow-soft;
		}
	}
}

.external-icon {
	align-self: center;
	flex-shrink: 0;
	width: 24px;
	height: 24px;
	border-radius: 12px;
	background: variables.$white-1;
	border: 1px solid variables.$border-color;
	display: flex;
	align-items: center;
	justify-content: center;
	opacity: 0.8;
	transform: translateX(0);
	transition: all 0.2s ease-in-out;
	margin-top: 0;
	color: variables.$text-color;
	font-size: 12px;

	&:hover {
		background: variables.$link-color;
		border-color: variables.$link-color;
		color: variables.$white;
	}
}

.archive-toggle {
	display: flex;
	gap: 0.5rem;
	margin-bottom: 20px;

	button {
		&.active {
			background: variables.$link-color;
			color: variables.$white;
		}
	}
}

blockquote {
	margin: 24px 0;
	padding: 16px 24px;
	border-left: 4px solid variables.$link-color;
	background: variables.$card-bg;
	border-radius: 4px;

	p {
		margin: 0;
		color: variables.$text-color;
		font-style: italic;

		&:not(:last-child) {
			margin-bottom: 16px;
		}
	}

	cite {
		display: block;
		margin-top: 8px;
		font-size: 0.9em;
		color: variables.$text-color-secondary;
		font-style: normal;

		&:before {
			content: "â€”";
			margin-right: 8px;
		}
	}
}

.alert {
	display: flex;
	align-items: flex-start;
	padding: 1rem 1.25rem;
	margin: 1.5rem 0;
	border-radius: 12px;
	font-size: 15px;
	line-height: 1.5;
	background-color: variables.$white-1;
	border: 1px solid variables.$border-color;
	color: variables.$text-color;

	&--warning {
		background-color: #fff9eb;
		border-color: #ffd77a;
	}

	&--error {
		background-color: #fef1f1;
		border-color: #facfcf;
	}

	&--success {
		background-color: #f1f9f1;
		border-color: #cfeacf;
	}

	&-icon {
		flex-shrink: 0;
		margin-right: 0.75rem;
		margin-top: 0.125rem;

		svg {
			width: 20px;
			height: 20px;
		}
	}

	&-content {
		flex: 1;

		h3 {
			margin: 0 0 6px;
			font-size: 15px !important;
			color: variables.$text-color;
		}

		p {
			margin: 0;
			font-size: 12px;

			&:not(:last-child) {
				margin-bottom: 0.5rem;
			}
		}

		a {
			color: variables.$link-color;
			text-decoration: none;

			&:hover {
				text-decoration: underline;
			}
		}
	}
}

// Tag styling component
.post-tags {
	display: flex;
	flex-wrap: wrap;
	gap: 0.5rem;
	margin-bottom: variables.$space-md;
}

.tag {
	display: inline-block;
	padding: 0.25rem 0.5rem;
	background-color: variables.$accent-gold-light;
	border: 1px solid variables.$accent-gold;
	border-radius: 4px;
	font-size: 9px;
	font-weight: 500;
	line-height: 1;
	color: variables.$accent-gold-dark;
	box-shadow: variables.$shadow-soft;

	&--new {
		background-color: variables.$link-color;
		border-color: variables.$link-color;
		color: variables.$white;
	}
}

@media (prefers-color-scheme: dark) {

	.button,
	button {
		color: variables.$link-color-dark;

		&.active {
			background: variables.$link-color-dark;
		}
	}

	.segmented-button {
		background: variables.$card-bg-dark;
	}

	.tag {
		background-color: rgba(255, 255, 255, 0.1);
		border-color: rgba(255, 255, 255, 0.2);
		color: hsl(0, 0%, 90%);
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.3);

		&--new {
			background-color: #422006;
			border-color: #92400e;
			color: #fdba74;
		}
	}

	.alert {
		background-color: variables.$card-bg-dark;
		border-color: variables.$border-color-dark;
		color: variables.$text-color-dark;

		&--warning {
			background-color: rgba(255, 215, 122, 0.1);
			border-color: rgba(255, 215, 122, 0.3);
		}

		&--error {
			background-color: rgba(250, 207, 207, 0.1);
			border-color: rgba(250, 207, 207, 0.3);
		}

		&--success {
			background-color: rgba(207, 234, 207, 0.1);
			border-color: rgba(207, 234, 207, 0.3);
		}

		a {
			color: variables.$link-color-dark;
		}

		h3 {
			color: variables.$text-color-dark;
		}
	}
}

button {
	display: flex;
	gap: 4px;
	border: 1px solid rgba(255, 255, 255, 0.1);
	box-shadow:
		0 1px 3px rgba(0, 0, 0, 0.1),
		0 1px 2px rgba(0, 0, 0, 0.06),
		inset 0 2px 4px rgba(0, 0, 0, 0.1),
		inset 0 -1px 2px rgba(255, 255, 255, 0.1);
	cursor: pointer;
	transition: all 0.3s ease;

	@media (prefers-color-scheme: dark) {
		box-shadow:
			0 1px 3px rgba(0, 0, 0, 0.2),
			0 1px 2px rgba(0, 0, 0, 0.12),
			inset 0 2px 4px rgba(0, 0, 0, 0.2),
			inset 0 -1px 2px rgba(255, 255, 255, 0.05);
	}
}

.mobile-tabs {
	display: flex;
	width: 100%;
	max-width: 600px;
	margin: 0 auto;
	background: variables.$card-bg;
	border-radius: 8px;
	padding: 4px;
	gap: 4px;
	position: relative;
	box-shadow:
		0 1px 3px rgba(0, 0, 0, 0.1),
		0 1px 2px rgba(0, 0, 0, 0.06),
		inset 0 2px 4px rgba(0, 0, 0, 0.1),
		inset 0 -1px 2px rgba(255, 255, 255, 0.1);
	border: 1px solid rgba(255, 255, 255, 0.1);
	box-sizing: border-box;

	// Add CSS custom properties for slider position and width
	--slider-x: 4px; // Initial position matching container padding
	--button-width: calc(50% - 6px); // Initial width approximation (half container minus half gap)

	// The slider element (added by JavaScript)
	.mobile-tabs-slider {
		position: absolute;
		left: 0;
		top: 4px;
		/* Default, will be overridden by JS */
		height: calc(100% - 8px);
		/* Default, will be overridden by JS */
		background: variables.$link-color;
		border-radius: 6px;
		z-index: 1;
		box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
		transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), width 0.3s ease, top 0.3s ease, height 0.3s ease;
		will-change: transform, width, top, height;

		@media (prefers-color-scheme: dark) {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}
	}

	// Hide the pseudo-element when the JavaScript slider is active
	&.has-slider-element::after {
		display: none;
	}

	&::after {
		content: '';
		position: absolute;
		left: 0;
		top: 4px;
		width: var(--button-width);
		height: calc(100% - 8px);
		background: variables.$link-color;
		border-radius: 6px;
		z-index: 1;
		box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
		transform: translateX(var(--slider-x));
		transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), width 0.3s ease;
		will-change: transform, width;

		.is-dragging & {
			transition: none;
		}
	}

	.tab-button {
		flex: 1;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 8px 16px;
		border: none;
		background: transparent !important;
		border-radius: 6px;
		font-size: 14px;
		font-weight: 500;
		color: variables.$text-color-secondary;
		cursor: pointer;
		transition: color 0.3s ease;
		position: relative;
		z-index: 2;
		text-align: center;
		box-shadow: none;
		outline: none;
		box-sizing: border-box;
		height: 100%;
		margin: 0;

		&.active {
			color: variables.$white !important;
		}

		&:not(.active) {
			color: variables.$text-color-secondary !important;

			&:hover {
				color: variables.$text-color !important;
			}
		}
	}

	@media screen and (max-width: variables.$mobile-breakpoint) {
		.tab-button {
			padding: 8px 12px;
		}
	}

	/* Dark mode styles for mobile tabs */
	@media (prefers-color-scheme: dark) {
		background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
		border-color: variables.$border-color-dark;
		box-shadow:
			0 1px 2px rgba(0, 0, 0, 0.3),
			0 -1px 0 rgba(255, 255, 255, 0.1) inset,
			0 2px 0 rgba(0, 0, 0, 0.2) inset;

		&::after {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.tab-button {
			&.active {
				color: variables.$black !important;
				text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
			}

			&:not(.active) {
				color: variables.$text-color-secondary-dark !important;
				text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);

				&:hover {
					color: variables.$text-color-dark !important;
				}
			}
		}
	}
}

/* Additional dark mode styles for mobile-tabs with higher specificity */
@media (prefers-color-scheme: dark) {

	/* Mobile view */
	.device-mobile .blog .blog-content .mobile-tabs {
		background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
		border-color: variables.$border-color-dark;
		border-bottom: 1px solid variables.$border-color-dark;
		box-shadow:
			0 1px 2px rgba(0, 0, 0, 0.3),
			0 -1px 0 rgba(255, 255, 255, 0.1) inset,
			0 2px 0 rgba(0, 0, 0, 0.2) inset;

		&::after {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.mobile-tabs-slider {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.tab-button {
			&.active {
				color: variables.$black !important;
				text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
			}

			&:not(.active) {
				color: variables.$text-color-secondary-dark !important;
				text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);

				&:hover {
					color: variables.$text-color-dark !important;
				}
			}
		}
	}

	/* Tablet view */
	.device-tablet .blog .blog-content .mobile-tabs {
		background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
		border-color: variables.$border-color-dark;
		border-bottom: 1px solid variables.$border-color-dark;
		box-shadow:
			0 1px 2px rgba(0, 0, 0, 0.3),
			0 -1px 0 rgba(255, 255, 255, 0.1) inset,
			0 2px 0 rgba(0, 0, 0, 0.2) inset;

		&::after {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.mobile-tabs-slider {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.tab-button {
			&.active {
				color: variables.$black !important;
				text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
			}

			&:not(.active) {
				color: variables.$text-color-secondary-dark !important;
				text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);

				&:hover {
					color: variables.$text-color-dark !important;
				}
			}
		}
	}

	/* Desktop view */
	.device-desktop .blog .blog-content .mobile-tabs {
		background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
		border-color: variables.$border-color-dark;
		border-bottom: 1px solid variables.$border-color-dark;
		box-shadow:
			0 1px 2px rgba(0, 0, 0, 0.3),
			0 -1px 0 rgba(255, 255, 255, 0.1) inset,
			0 2px 0 rgba(0, 0, 0, 0.2) inset;

		&::after {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.mobile-tabs-slider {
			background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.4),
				0 1px 0 rgba(255, 255, 255, 0.3) inset,
				0 -1px 0 rgba(0, 0, 0, 0.2) inset;
			border: 1px solid color.adjust(variables.$link-color-dark, $lightness: -15%);
		}

		.tab-button {
			&.active {
				color: variables.$black !important;
				text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
			}

			&:not(.active) {
				color: variables.$text-color-secondary-dark !important;
				text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);

				&:hover {
					color: variables.$text-color-dark !important;
				}
			}
		}
	}
}

.profile-header {
	position: relative;
	display: flex;
	align-items: center;
	gap: 0;
	padding: 18px 24px 18px 48px;
	margin: 0 auto 32px;
	max-width: 600px;
	z-index: 1;
	box-sizing: border-box;
	width: 100%;

	.profile-photo {
		width: 120px;
		height: 120px;
		border-radius: 50%;
		object-fit: cover;
		flex-shrink: 0;
		position: relative;
		box-shadow:
			0 0 0 1px rgba(variables.$white, 0.7),
			0 0 0 2px rgba(variables.$black, 0.1),
			inset 0 2px 8px rgba(variables.$black, 0.4),
			inset 0 -4px 8px rgba(variables.$white, 0.3);
		padding: 4px;
		background: linear-gradient(145deg,
				rgba(variables.$white, 0.1),
				rgba(variables.$black, 0.1));
	}

	.profile-info {
		.profile-name {
			font-size: 24px;
			font-weight: 600;
			margin: 0;
			text-shadow:
				0 1px 1px rgba(255, 255, 255, 0.9),
				0 -1px 1px rgba(0, 0, 0, 0.2);
			letter-spacing: 0.02em;
		}

		.profile-bio {
			color: variables.$text-color-secondary;
			margin-top: 3px;
			margin-bottom: 16px;
			font-size: 12px;
			line-height: 1.4;
			max-width: 450px;
		}

		.profile-stats {
			display: flex;
			gap: variables.$spacing-inline-lg;

			.stat {
				display: flex;
				flex-direction: column;
				align-items: flex-start;

				.number {
					display: block;
					font-weight: 600;
					font-size: 18px;
				}

				.label {
					font-size: 9px;
					color: variables.$text-color-secondary;
					text-transform: uppercase;
					letter-spacing: 0.05em;
				}
			}
		}
	}
}

/* Contact wrapper - with skeuomorphic styling */
.contact-wrapper {
	z-index: 10;

	/* Mobile styles */
	@media screen and (max-width: variables.$mobile-breakpoint) {
		position: absolute;
		top: 10px;
		right: 10px;

		.contact-button {
			display: block;
			padding: 8px 16px;
			background: rgba(variables.$card-bg, 0.8);
			border: 1px solid rgba(variables.$border-color, 0.6);
			border-radius: 6px;
			font-size: 12px;
			font-weight: 600;
			color: variables.$text-color;
			text-decoration: none;
			cursor: pointer;
			transition: all 0.2s ease;
			z-index: 101;
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.05),
				0 -1px 0 rgba(255, 255, 255, 0.3) inset;
			backdrop-filter: blur(4px);

			&:hover {
				background: rgba(variables.$card-bg, 0.9);
				box-shadow:
					0 1px 3px rgba(0, 0, 0, 0.1),
					0 -1px 0 rgba(255, 255, 255, 0.4) inset;
			}

			&.active {
				background: rgba(variables.$link-color, 0.8);
				color: variables.$white;
				box-shadow:
					0 1px 2px rgba(0, 0, 0, 0.1),
					0 1px 0 rgba(255, 255, 255, 0.1) inset;
				border-color: rgba(variables.$link-color, 0.6);
			}
		}

		.contact-options {
			position: absolute;
			top: 100%;
			right: 0;
			margin-top: 5px;
			display: none;
			flex-direction: column;
			background: rgba(variables.$card-bg, 0.8);
			border: 1px solid rgba(variables.$border-color, 0.6);
			border-radius: 6px;
			box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
			overflow: hidden;
			z-index: 100;
			min-width: 120px;
			backdrop-filter: blur(4px);

			.contact-option {
				display: block;
				padding: 8px 16px;
				font-size: 12px;
				font-weight: 500;
				color: variables.$text-color;
				text-decoration: none;
				text-align: center;
				transition: all 0.2s ease;
				white-space: nowrap;
				background: transparent;

				&:hover {
					background: rgba(variables.$link-color, 0.1);
					color: variables.$link-color;
				}

				&:active {
					background: rgba(variables.$link-color, 0.2);
				}

				&:not(:last-child) {
					border-bottom: 1px solid rgba(variables.$border-color, 0.4);
				}
			}
		}

		&.active .contact-options {
			display: flex;
		}
	}

	/* Desktop and tablet styles */
	@media screen and (min-width: variables.$mobile-breakpoint) {
		width: 100%;
		display: flex;
		justify-content: center;
		margin-top: 20px;

		.contact-button {
			display: none;
		}

		.contact-options {
			display: flex;
			flex-direction: row;
			border: 1px solid rgba(variables.$border-color, 0.6);
			border-radius: 6px;
			overflow: hidden;
			box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
			background: rgba(variables.$card-bg, 0.6);
			backdrop-filter: blur(4px);

			.contact-option {
				padding: 8px 16px;
				font-size: 12px;
				font-weight: 500;
				color: variables.$text-color;
				text-decoration: none;
				text-align: center;
				background: transparent;
				transition: all 0.2s ease;

				&:hover {
					background: rgba(variables.$link-color, 0.1);
					color: variables.$link-color;
				}

				&:active {
					background: rgba(variables.$link-color, 0.2);
				}

				&:not(:last-child) {
					border-right: 1px solid rgba(variables.$border-color, 0.4);

					&:after {
						content: '';
						position: absolute;
						right: 0;
						top: 0;
						height: 100%;
						width: 1px;
						background: rgba(255, 255, 255, 0.7);
					}
				}
			}
		}
	}
}

/* Dark mode styles for contact wrapper */
@media (prefers-color-scheme: dark) {
	.contact-wrapper {
		.contact-button {
			background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
			border-color: variables.$border-color-dark;
			color: variables.$text-color-dark;
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.3),
				0 -1px 0 rgba(255, 255, 255, 0.1) inset,
				0 2px 0 rgba(0, 0, 0, 0.2) inset;
			text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);

			&:hover {
				background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 12%), color.adjust(variables.$card-bg-dark, $lightness: 5%));
				box-shadow:
					0 1px 3px rgba(0, 0, 0, 0.4),
					0 -1px 0 rgba(255, 255, 255, 0.1) inset,
					0 2px 0 rgba(0, 0, 0, 0.2) inset;
			}

			&.active {
				background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
				color: variables.$black;
				box-shadow:
					0 1px 2px rgba(0, 0, 0, 0.4),
					0 1px 0 rgba(255, 255, 255, 0.3) inset,
					0 -1px 0 rgba(0, 0, 0, 0.2) inset;
				text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
				border-color: color.adjust(variables.$link-color-dark, $lightness: -15%);
			}
		}

		.contact-options {
			background: variables.$card-bg-dark;
			border-color: variables.$border-color-dark;
			box-shadow:
				0 4px 8px rgba(0, 0, 0, 0.3),
				0 0 0 1px rgba(255, 255, 255, 0.05) inset;

			.contact-option {
				color: variables.$text-color-dark;
				background: linear-gradient(to bottom, color.adjust(variables.$card-bg-dark, $lightness: 8%), variables.$card-bg-dark);
				border-color: variables.$border-color-dark;
				text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5);
				box-shadow: 0 1px 0 rgba(255, 255, 255, 0.05) inset;

				&:hover {
					background: linear-gradient(to bottom, variables.$link-color-dark, color.adjust(variables.$link-color-dark, $lightness: -10%));
					color: variables.$black;
					text-shadow: 0 1px 0 rgba(255, 255, 255, 0.3);
					box-shadow: 0 1px 0 rgba(255, 255, 255, 0.2) inset;
				}

				&:active {
					background: linear-gradient(to bottom, color.adjust(variables.$link-color-dark, $lightness: -10%), variables.$link-color-dark);
					box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3) inset;
				}

				&:not(:last-child) {
					&:after {
						background: rgba(255, 255, 255, 0.1);
					}
				}
			}
		}
	}
}

/* Dark mode styles for profile photo moved to _theme-modes.scss */

.tldr-modal {
	position: fixed;
	left: 0;
	bottom: 0;
	right: 0;
	width: 100%;
	margin: 0 auto;
	width: 90vw;
	max-width: 600px;
	max-height: 90vh;
	background: rgba(0, 0, 0, 0.5);
	backdrop-filter: blur(4px);
	border-radius: 6px 6px 0 0;
	border-top: 1px solid variables.$border-color;
	border-left: 1px solid variables.$border-color;
	border-right: 1px solid variables.$border-color;
	display: flex;
	flex-direction: column;
	opacity: 0;
	visibility: hidden;
	transition: opacity 0.3s ease, visibility 0.3s ease;
	z-index: 1000;

	&.active {
		opacity: 1;
		visibility: visible;

		.modal-content {
			transform: translateY(0);
			opacity: 1;
		}
	}

	.modal-header {
		background: var(--propel-bg);
		padding: 6px;
		border: none;
		border-radius: 6px 6px 0 0;
		display: flex;
		align-items: center;
		justify-content: space-between;
		position: relative;
		margin: 0;
		width: 100%;

		h2 {
			margin: 0;
			font-size: 15px;
			color: var(--propel-text);
			text-transform: none;
		}

		.close-button {
			background: none;
			border: none;
			padding: 0;
			margin: 0;
			cursor: pointer;
			color: var(--propel-text-secondary);
			transition: color 0.2s ease;
			width: 24px;
			height: 24px;
			display: flex;
			align-items: center;
			justify-content: center;

			&:hover {
				color: var(--propel-text);
			}

			svg {
				width: 16px;
				height: 16px;
			}
		}
	}

	.modal-content {
		background: var(--propel-bg);
		width: 100%;
		overflow-y: auto;
		margin: 0;
		padding: 2rem;
		position: relative;
		box-shadow: 0 -8px 32px rgba(0, 0, 0, 0.1);
		border-top: 1px solid var(--propel-border);
		border-radius: 0;
		opacity: 0;
		transform: translateY(100%);
		transition:
			transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1),
			opacity 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);

		.tldr-summary {
			font-size: 15px;
			color: var(--propel-text-secondary);
			margin-top: 0;
		}

		.key-points {
			display: grid;
			gap: 1.5rem;
			margin: 2rem 0;

			.point {
				background: variables.$grey;
				border-radius: 12px;
				padding: variables.$space-sm;

				h3 {
					font-size: 14px;
					margin: 0;
					color: var(--propel-text);
				}

				p {
					margin: 0;
					font-size: 12px;
					color: var(--propel-text-secondary);
					line-height: 1.5;
				}

				svg {
					width: 24px;
					height: 24px;
					color: var(--propel-green);
				}
			}
		}
	}
}

@media (prefers-color-scheme: dark) {
	.tldr-modal {
		.modal-content {
			background: var(--propel-bg);

			.modal-header {
				background: var(--propel-bg);
				border-color: var(--propel-border);

				h2 {
					color: var(--propel-text);
				}

				.close-button {
					color: var(--propel-text-secondary);

					&:hover {
						color: var(--propel-text);
					}
				}
			}

			.key-points .point {
				h3 {
					color: var(--propel-text);
				}

				p {
					color: var(--propel-text-secondary);
				}
			}

			.live-preview {
				background: var(--propel-bg-alt);

				h3 {
					color: var(--propel-text);
				}

				.preview-content {
					svg {
						color: var(--propel-green);
					}

					p {
						color: var(--propel-text-secondary);

						a {
							color: var(--propel-green);
						}
					}
				}
			}
		}
	}
}

body.modal-open {
	overflow: hidden;
}

/* Fade in/out for alert on index page */
#comingSoonAlert {
	opacity: 0;
	animation: fadeIn 0.8s forwards;
	transition: opacity 0.8s ease;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

/* Text Carousel Styles */
.text-carousel {
	margin: variables.$spacing-section 0;
	padding: 0;
	width: 100%;
	position: relative;
	overflow: hidden;

	.text-carousel-track {
		display: flex;
		overflow: hidden;
		width: 100%;
		transition: transform 0.3s ease;
	}

	.text-carousel-slide {
		flex: 0 0 100%;
		padding: variables.$space-md;
		box-sizing: border-box;
		min-height: 150px;
		background-color: variables.$card-bg;
		border: 1px solid variables.$border-color;
		border-radius: 4px;
		box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
		margin-bottom: variables.$space-sm;

		h2 {
			margin-bottom: variables.$space-xs;
		}

		p {
			margin: 0;
		}
	}

	.text-carousel-button {
		position: absolute;
		top: 50%;
		transform: translateY(-50%);
		z-index: 2;
	}

	.text-carousel-button.prev {
		left: 10px;
	}

	.text-carousel-button.next {
		right: 10px;
	}

	.text-carousel-indicators {
		margin-top: variables.$space-sm;
		display: flex;
		gap: variables.$space-xs;

		.indicator {
			width: 10px;
			height: 10px;
			border-radius: 50%;
			background: transparent;
			border: 1px solid currentColor;
			cursor: pointer;

			&.active {
				background: currentColor;
			}
		}
	}
}

/* Meta Cards Styles */
.meta-cards {
	display: flex;
	flex-direction: column;
	gap: variables.$space-sm;
	margin: 0 auto;
	max-width: 1000px;
	padding: 0 variables.$space-sm;
}

.meta-card {
	width: 100%;
	padding: variables.$space-sm;
	border-radius: 4px;
	color: variables.$text-color;
	margin: 24px 0;

	h2 {
		margin-bottom: variables.$space-xs;
		margin-top: 0;
		font-size: 1.2rem;
	}

	p {
		margin: 0;
		padding-top: 6px;
	}
}

@media (prefers-color-scheme: dark) {
	.meta-card {
		color: variables.$text-color-dark;
	}
}

// Author mini-bio name margin override
.author-mini-bio-content .author-mini-bio-name {
	margin-bottom: 3px;
}

// Tables - Claude.ai inspired
table {
	width: 100%;
	margin: variables.$space-lg 0;
	border-collapse: collapse;
	font-size: 12px;
	line-height: 1.4;
	border: 1px solid rgba(variables.$border-color, 0.3);
	border-radius: 6px;
	overflow: hidden;
	box-shadow:
		0 1px 2px rgba(0, 0, 0, 0.05),
		0 1px 1px rgba(0, 0, 0, 0.03);
	background-color: rgba(variables.$card-bg, 0.8);

	tr {
		display: flex;
		width: 100%;
		align-items: stretch;
		border-bottom: 1px solid rgba(variables.$border-color, 0.2);

		&:last-child {
			border-bottom: none;
		}

		&:nth-child(even) {
			background-color: rgba(variables.$white, 0.4);
		}

		&:nth-child(odd):not(:first-child) {
			background-color: rgba(variables.$white, 0.8);
		}
	}

	th {
		text-align: left;
		padding: 0.75em 1em;
		background-color: rgba(variables.$card-bg, 0.95);
		font-weight: 500;
		vertical-align: top;
		display: flex;
		flex-direction: column;
		width: 100%;
		box-sizing: border-box;
		align-self: stretch;
		border-right: 1px solid rgba(variables.$border-color, 0.2);
		border-bottom: 1px solid rgba(variables.$border-color, 0.3);

		&:last-child {
			border-right: none;
		}
	}

	td {
		padding: 0.75em 1em;
		vertical-align: top;
		width: 100%;
		align-self: stretch;
		border-right: 1px solid rgba(variables.$border-color, 0.2);

		&:last-child {
			border-right: none;
		}
	}

	// Style for the "Updated" and "New" badges
	th span {
		font-size: 9px;
		background-color: #f0f0f0;
		padding: 2px 4px;
		border-radius: 3px;
		width: fit-content;
		margin-bottom: 0.5em;
		display: inline-block;

		&[style*="background-color: #e6f7ff"] {
			background-color: #e6f7ff;
		}
	}
}

// Dark mode styles for tables
@media (prefers-color-scheme: dark) {
	table {
		border-color: rgba(variables.$border-color-dark, 0.5);
		background-color: rgba(variables.$card-bg-dark, 0.8);
		box-shadow:
			0 1px 2px rgba(0, 0, 0, 0.15),
			0 1px 1px rgba(0, 0, 0, 0.1);

		tr {
			border-bottom-color: rgba(variables.$border-color-dark, 0.4);

			&:nth-child(even) {
				background-color: rgba(variables.$card-bg-dark, 0.6);
			}

			&:nth-child(odd):not(:first-child) {
				background-color: rgba(variables.$card-bg-dark, 0.3);
			}
		}

		th {
			background-color: rgba(variables.$card-bg-dark, 0.95);
			border-right-color: rgba(variables.$border-color-dark, 0.4);
			border-bottom-color: rgba(variables.$border-color-dark, 0.5);
			color: variables.$text-color-dark;
			position: relative;

			&:after {
				content: '';
				position: absolute;
				right: -1px;
				top: 0;
				height: 100%;
				width: 1px;
				background: linear-gradient(to bottom,
						rgba(variables.$border-color-dark, 0.2),
						rgba(variables.$border-color-dark, 0.4),
						rgba(variables.$border-color-dark, 0.2));
			}

			&:last-child:after {
				display: none;
			}
		}

		td {
			border-right-color: rgba(variables.$border-color-dark, 0.4);
			color: variables.$text-color-secondary-dark;
			position: relative;

			&:after {
				content: '';
				position: absolute;
				right: -1px;
				top: 0;
				height: 100%;
				width: 1px;
				background: linear-gradient(to bottom,
						rgba(variables.$border-color-dark, 0.2),
						rgba(variables.$border-color-dark, 0.4),
						rgba(variables.$border-color-dark, 0.2));
			}

			&:last-child:after {
				display: none;
			}
		}

		// Dark mode badge styles
		th span {
			background-color: rgba(255, 255, 255, 0.1);
			color: variables.$text-color-dark;

			&[style*="background-color: #e6f7ff"] {
				background-color: rgba(variables.$link-color-dark, 0.2);
				color: variables.$link-color-dark;
			}
		}
	}
}

/* Search bar component */
.search-container {
	margin-bottom: 2rem;
	position: relative;
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
	padding: 0;
	width: 100%;
	box-sizing: border-box;

	.search-icon {
		position: absolute;
		left: 12px;
		top: 50%;
		transform: translateY(-50%);
		width: 16px;
		height: 16px;
		z-index: 2;
		opacity: 0.6;
		transition: opacity 0.2s ease;

		svg {
			width: 100%;
			height: 100%;
			stroke: variables.$text-color-secondary;
		}
	}

	.search-input {
		width: 100%;
		padding: 9px 9px 9px 30px;
		font-size: 14px;
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 8px;
		background: linear-gradient(to bottom,
				color.adjust(variables.$card-bg, $lightness: 2%),
				variables.$card-bg);
		transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
		box-shadow:
			0 1px 3px rgba(0, 0, 0, 0.1),
			0 1px 2px rgba(0, 0, 0, 0.06);
		color: variables.$text-color;
		position: relative;
		z-index: 1;

		&:hover {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg, $lightness: 3%),
					color.adjust(variables.$card-bg, $lightness: 1%));
			box-shadow:
				0 2px 4px rgba(0, 0, 0, 0.05);
		}

		&:focus {
			outline: none;
			border-color: variables.$link-color;
			background: linear-gradient(to bottom,
					color.adjust(variables.$white, $lightness: -1%),
					variables.$white);
			box-shadow:
				0 0 0 2px rgba(variables.$link-color, 0.1),
				0 2px 4px rgba(0, 0, 0, 0.05);

			&+.search-icon {
				opacity: 0.8;
			}
		}

		&:active {
			border-color: variables.$link-color;
		}

		&::placeholder {
			color: variables.$text-color-secondary;
			transition: color 0.2s ease;
		}

		/* Clear button styling */
		&::-webkit-search-cancel-button {
			-webkit-appearance: none;
			height: 14px;
			width: 14px;
			background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
			background-repeat: no-repeat;
			background-position: center;
			cursor: pointer;
			opacity: 0.6;
			transition: opacity 0.2s ease;

			&:hover {
				opacity: 0.8;
			}
		}
	}
}

@media (prefers-color-scheme: dark) {
	.search-container {
		.search-icon {
			svg {
				stroke: variables.$text-color-secondary-dark;
			}
		}

		.search-input {
			background: linear-gradient(to bottom,
					color.adjust(variables.$card-bg-dark, $lightness: 2%),
					variables.$card-bg-dark);
			border-color: variables.$border-color-dark;
			color: variables.$text-color-dark;
			box-shadow:
				0 1px 2px rgba(0, 0, 0, 0.2),
				0 -1px 0 rgba(255, 255, 255, 0.05) inset,
				0 1px 0 rgba(0, 0, 0, 0.1) inset;

			&:focus {
				border-color: hsl(40, 90%, 45%);
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 5%),
						color.adjust(variables.$card-bg-dark, $lightness: 3%));
				box-shadow:
					0 0 0 2px rgba(hsl(40, 90%, 45%), 0.2),
					0 2px 4px rgba(0, 0, 0, 0.2),
					0 -1px 0 rgba(255, 255, 255, 0.05) inset,
					0 1px 0 rgba(0, 0, 0, 0.1) inset;
			}

			&:active {
				border-color: hsl(40, 90%, 45%);
			}

			&:hover {
				background: linear-gradient(to bottom,
						color.adjust(variables.$card-bg-dark, $lightness: 4%),
						color.adjust(variables.$card-bg-dark, $lightness: 2%));
				box-shadow:
					0 2px 4px rgba(0, 0, 0, 0.2),
					0 -1px 0 rgba(255, 255, 255, 0.05) inset,
					0 1px 0 rgba(0, 0, 0, 0.1) inset;
			}

			&::placeholder {
				color: variables.$text-color-secondary-dark;
			}

			&::-webkit-search-cancel-button {
				background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23a1a1aa' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
			}
		}
	}
}

.no-results-message {
	text-align: center;
	padding: 2rem;
	color: variables.$text-color-secondary;
	font-style: italic;
}

@media (prefers-color-scheme: dark) {
	.no-results-message {
		color: variables.$text-color-secondary-dark;
	}
}

// Utility class for mobile-only display
.mobile-only {
	display: none;
}

@media screen and (max-width: variables.$mobile-breakpoint) {
	.mobile-only {
		display: block !important;
	}

	.mobile-hide {
		display: none !important;
	}

	.profile-header .contact-wrapper.mobile-only {
		position: absolute;
		top: 100px;
		right: -65px;
		margin-top: 0;
		width: auto;
		display: flex;
		justify-content: center;
	}

	.contact-wrapper.mobile-only .contact-button {
		height: 24px;
		width: 24px;
		padding: initial;
		display: flex;
		align-items: center;
		justify-content: center;
	}
}

// --- Mobile Contact Modal Styles ---
@media screen and (max-width: variables.$mobile-breakpoint) {
	.contact-modal {
		position: fixed;
		left: 0;
		right: 0;
		bottom: 0;
		top: 0;
		z-index: 2000;
		display: flex;
		align-items: flex-end;
		justify-content: center;
		pointer-events: none;
		opacity: 0;
		transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.contact-modal.active {
		pointer-events: auto;
		opacity: 1;
	}

	.contact-modal-backdrop {
		position: absolute;
		inset: 0;
		background: rgba(30, 30, 40, 0.35);
		backdrop-filter: blur(6px);
		z-index: 1;
		opacity: 0;
		transition: opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	}

	.contact-modal.active .contact-modal-backdrop {
		opacity: 1;
	}

	.contact-modal-sheet {
		position: relative;
		width: calc(100vw - 12px);
		max-width: calc(480px - 12px);
		margin: 0 auto;
		margin-left: 6px;
		margin-right: 6px;
		background: rgba(255, 255, 255, 0.65);
		border-radius: 18px 18px 0 0;
		box-shadow: 0 -8px 32px rgba(0, 0, 0, 0.12);
		padding: 32px 24px 24px 24px;
		z-index: 2;
		transform: translateY(100%);
		transition: transform 0.35s cubic-bezier(0.4, 0, 0.2, 1), background-color 0.3s ease, border-color 0.3s ease;
		backdrop-filter: blur(20px) saturate(1.5);
		-webkit-backdrop-filter: blur(20px) saturate(1.5);
		border: 1px solid rgba(200, 200, 220, 0.3);
		display: flex;
		flex-direction: column;
		align-items: center;
		min-height: 220px;
		color: #ddd;
	}

	@media (prefers-color-scheme: dark) {
		.contact-modal-sheet {
			background-color: hsla(28, 8%, 15%, 0.09);
		}

		.contact-modal-close {
			color: #bbb;
			background: rgba(255, 255, 255, 0.1);
			box-shadow: none !important;
		}

		.contact-modal-title {
			color: #eee;
		}

		.contact-modal-options button,
		.contact-modal-options a {
			background-color: rgba(255, 255, 255, 0.1);
			color: #eee;
			border-color: rgba(255, 255, 255, 0.2);

			&:hover {
				background-color: rgba(255, 255, 255, 0.2);
				border-color: rgba(255, 255, 255, 0.3);
			}
		}
	}

	.contact-modal.active .contact-modal-sheet {
		transform: translateY(0);
	}

	.contact-modal-close {
		position: absolute;
		top: 12px;
		right: 12px;
		background: rgba(0, 0, 0, 0.08);
		border: none;
		box-shadow: none !important;
		color: #555;
		opacity: 0.9;
		cursor: pointer;
		z-index: 3;
		transition: opacity 0.2s, background-color 0.2s;
		width: 28px;
		height: 28px;
		border-radius: 50%;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 0;

		svg,
		i {
			width: 16px;
			height: 16px;
			display: block;
		}
	}

	.contact-modal-close:hover {
		opacity: 1;
		background: rgba(0, 0, 0, 0.12);
	}

	.contact-modal-title {
		font-size: 1.2rem;
		font-weight: 600;
		margin-bottom: 18px;
		color: #222;
		letter-spacing: 0.01em;
		text-align: center;
	}

	@media (prefers-color-scheme: dark) {
		.contact-modal-title {
			color: #eee;
		}
	}

	.contact-modal-options {
		width: 100%;
		display: flex;
		flex-direction: column;
		gap: 9px;

		button,
		a {
			height: 36px;
			width: 100%;
			display: flex;
			align-items: center;
			justify-content: center;
			padding: 0 12px;
			font-size: 15px;
			border-radius: 8px;
			background-color: rgba(0, 0, 0, 0.05);
			color: #333;
			border: 1px solid rgba(0, 0, 0, 0.08);
			text-decoration: none;
			transition: background-color 0.2s ease, border-color 0.2s ease;

			&:hover {
				background-color: rgba(0, 0, 0, 0.08);
				border-color: rgba(0, 0, 0, 0.12);
			}
		}
	}
}

// Hide modal on desktop
@media screen and (min-width: 601px) {
	.contact-modal {
		display: none !important;
	}
}

// Ensure dynamically loaded content is scrollable
.content-inner-wrapper {
	overflow-y: scroll;
	overflow-x: hidden;
}

// Tablet fix: ensure inner wrapper is scrollable on tablet
@media screen and (min-width: 601px) and (max-width: 1024px) {
	.device-tablet .blog-content>.content-inner-wrapper {
		height: 100%;
		overflow-y: auto;
		overflow-x: hidden;
	}
}

@media (prefers-color-scheme: dark) {

	.contact-modal-options button,
	.contact-modal-options a {
		background-color: rgba(255, 255, 255, 0.1);
		color: #eee;
		border-color: rgba(255, 255, 255, 0.2);

		&:hover {
			background-color: rgba(255, 255, 255, 0.2);
			border-color: rgba(255, 255, 255, 0.3);
		}
	}
}