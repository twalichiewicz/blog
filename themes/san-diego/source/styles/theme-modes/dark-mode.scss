@use '../variables';
@use "sass:color";

/* ==========================================================================
   Dark Mode Specific Styles
   ========================================================================== */

@media (prefers-color-scheme: dark) {
	.blog {
		/* Set CSS variable for dark mode */
		--bg-color: rgb(20 20 20 / 70%);

		/* Dark mode for blog header */
		&.blog .profile-header {
			.profile-info {
				.profile-name {
					text-shadow:
						0 1px 1px rgb(255 255 255 / 20%),
						0 -1px 1px rgba(variables.$black, 0.4);
					color: variables.$white !important;
				}

				.profile-bio {
					color: variables.$grey-dark !important;
				}

				.profile-stats .stat {
					.number {
						color: variables.$white !important;
					}

					.label {
						color: variables.$grey-dark !important;
					}
				}
			}

			.profile-photo {
				box-shadow:
					0 0 0 1px rgba(variables.$white, 0.2),
					0 0 0 2px rgba(variables.$black, 0.3),
					inset 0 2px 8px rgba(variables.$black, 0.6),
					inset 0 -4px 8px rgba(variables.$white, 0.1);
				background: linear-gradient(145deg,
						rgba(variables.$white, 0.05),
						rgba(variables.$black, 0.2));
			}

			.contact-wrapper {
				/* Mobile styles - active by default in dark mode */
				@media screen and (max-width: variables.$mobile-breakpoint) {
					.contact-button {
						/* Use active styling as default on mobile in dark mode */
						background: rgba(variables.$link-color-dark, 0.8);
						border-color: rgba(variables.$link-color-dark, 0.6);
						color: variables.$black;
						box-shadow: 0 1px 2px rgb(0 0 0 / 10%);

						/* New hover state for active-by-default button in dark mode */
						&:hover {
							background: rgba(variables.$link-color-dark, 0.9);
							border-color: rgba(variables.$link-color-dark, 0.8);
							box-shadow: 0 2px 4px rgb(0 0 0 / 20%);
						}

						/* New active/pressed state for touch/mouse down in dark mode */
						&:active {
							background: rgba(variables.$link-color-dark, 0.7);
							border-color: rgba(variables.$link-color-dark, 0.5);
							box-shadow: 0 1px 1px rgb(0 0 0 / 10%);
							transform: translateY(0);
						}

						/* Keep the .active class for when dropdown is open in dark mode */
						&.active {
							background: rgba(variables.$link-color-dark, 0.85);
							border-color: rgba(variables.$link-color-dark, 0.7);
							box-shadow: 0 1px 2px rgb(0 0 0 / 10%);
						}
					}
				}

				/* Desktop/tablet styles remain unchanged for dark mode */
				@media screen and (min-width: variables.$mobile-breakpoint) {
					.contact-button {
						background: rgba(variables.$card-bg-dark, 0.7);
						border-color: rgba(variables.$border-color-dark, 0.5);
						color: variables.$text-color-dark;
						box-shadow: 0 1px 2px rgb(0 0 0 / 10%);

						&:hover {
							background: rgba(variables.$link-color-dark, 0.2);
							color: variables.$link-color-dark;
						}

						&.active {
							background: rgba(variables.$link-color-dark, 0.8);
							color: variables.$black;
							border-color: rgba(variables.$link-color-dark, 0.6);
						}
					}
				}

				.contact-options {
					background: rgba(variables.$card-bg-dark, 0.7);
					border-color: rgba(variables.$border-color-dark, 0.5);
					box-shadow: 0 4px 8px rgb(0 0 0 / 20%);
					backdrop-filter: blur(4px);
					backdrop-filter: blur(4px);

					.contact-option {
						background: transparent;
						border-color: rgba(variables.$border-color-dark, 0.4);
						color: variables.$text-color-dark;

						&:hover {
							background: rgba(variables.$link-color-dark, 0.2);
							color: variables.$link-color-dark;
						}

						&:active {
							background: rgba(variables.$link-color-dark, 0.3);
						}
					}
				}
			}
		}

		/* Desktop contact options in dark mode */
		@media screen and (min-width: variables.$mobile-breakpoint) {
			.contact-wrapper {
				.contact-options {
					background: rgba(variables.$card-bg-dark, 0.6);
					border-color: rgba(variables.$border-color-dark, 0.4);
					box-shadow: 0 2px 4px rgb(0 0 0 / 15%);
					backdrop-filter: blur(4px);
					backdrop-filter: blur(4px);

					.contact-option {
						background: transparent;
						color: variables.$text-color-dark;

						&:hover {
							background: rgba(variables.$link-color-dark, 0.2);
							color: variables.$link-color-dark;
						}

						&:active {
							background: rgba(variables.$link-color-dark, 0.3);
						}

						&:not(:last-child) {
							border-right-color: rgba(variables.$border-color-dark, 0.4);
						}
					}
				}
			}
		}

		/* Global dark mode style for external-icon */
		.external-icon {
			background: rgb(255 255 255 / 10%);
			border-color: rgb(255 255 255 / 5%);
			color: variables.$white;

			&:hover {
				background: variables.$link-color-dark;
				color: variables.$white;
			}
		}

		/* Dark mode for blog content - non-mobile only */
		@media (min-width: calc(variables.$mobile-breakpoint + 1px)) {
			.blog-content {
				background-color: variables.$grey-dark;
				box-shadow: 0 2px 15px rgb(0 0 0 / 15%);
				/* Top and left border only */
				border-top: 1px solid rgb(255 255 255 / 10%);
				border-left: 1px solid rgb(255 255 255 / 10%);
				border-right: none;
				border-bottom: none;
			}
		}
		
		/* Dark mode for separators */
		.post-separator {
			background: #4a4a4a;
			box-shadow: 0 0 1px rgba(variables.$border-color-dark, 0.05);
		}
		
	}
	
	/* Desktop contact buttons dark mode */
	.blog .blog-header .desktop-contact-buttons {
		.contact-circle-btn {
			.contact-icon {
				background-color: rgba(255, 255, 255, 0.15);
				
				svg {
					color: rgba(207, 207, 207, 0.9);
				}
			}
			
			.contact-label {
				color: rgba(255, 255, 255, 0.8);
			}
			
			&:hover {
				.contact-icon {
					background-color: rgba(variables.$link-color-dark, 0.25);
					box-shadow: 0 0 12px rgba(variables.$link-color-dark, 0.3);
					
					svg {
						color: variables.$link-color-dark;
					}
				}
				
				.contact-label {
					color: variables.$link-color-dark;
				}
			}
		}
	}
}