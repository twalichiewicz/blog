@use '../variables';
@use "sass:color";

/* ==========================================================================
   Light Mode Specific Styles
   ========================================================================== */

/* Light mode (default) styles */
.blog {
	/* Set CSS variable for light mode */
	--bg-color: rgb(250 250 250 / 70%);

	/* Light mode for blog header */
	&.blog .profile-header {
		.profile-info {
			.profile-name {
				text-shadow:
					0 1px 1px rgb(255 255 255 / 80%),
					0 -1px 1px rgba(variables.$black, 0.2);
				color: variables.$black !important;
			}

			.profile-bio {
				color: variables.$text-color-secondary !important;
			}

			.profile-stats .stat {
				.number {
					color: variables.$black !important;
				}

				.label {
					color: variables.$text-color-secondary !important;
				}
			}
		}

		.profile-photo {
			box-shadow:
				0 0 0 1px rgba(variables.$black, 0.05),
				0 0 0 2px rgba(variables.$white, 0.5),
				inset 0 2px 8px rgba(variables.$black, 0.1),
				inset 0 -4px 8px rgba(variables.$white, 0.3);
			background: linear-gradient(145deg,
					rgba(variables.$white, 0.8),
					rgba(variables.$black, 0.1));
		}

		.contact-wrapper {

			/* Mobile styles - active by default in light mode */
			@media screen and (max-width: variables.$mobile-breakpoint) {
				.contact-button {
					/* Use active styling as default on mobile in light mode */
					background: variables.$link-color;
					border-color: variables.$link-color;
					color: variables.$white;
					box-shadow: 0 1px 2px rgb(0 0 0 / 10%);

					/* New hover state for active-by-default button in light mode */
					&:hover {
						background: color.adjust(variables.$link-color, $lightness: 5%);
						border-color: color.adjust(variables.$link-color, $lightness: 5%);
						box-shadow: 0 2px 4px rgb(0 0 0 / 15%);
					}

					/* New active/pressed state for touch/mouse down in light mode */
					&:active {
						background: color.adjust(variables.$link-color, $lightness: -5%);
						border-color: color.adjust(variables.$link-color, $lightness: -5%);
						box-shadow: 0 1px 1px rgb(0 0 0 / 10%);
						transform: translateY(0);
					}

					/* Keep the .active class for when dropdown is open in light mode */
					&.active {
						background: color.adjust(variables.$link-color, $lightness: 2%);
						border-color: color.adjust(variables.$link-color, $lightness: 2%);
						box-shadow: 0 1px 2px rgb(0 0 0 / 10%);
					}
				}
			}

			/* Desktop/tablet styles remain unchanged for light mode */
			@media screen and (min-width: variables.$mobile-breakpoint) {
				.contact-button {
					background: rgba(variables.$card-bg, 0.7);
					border-color: rgba(variables.$border-color, 0.5);
					color: variables.$text-color;
					box-shadow: 0 1px 2px rgb(0 0 0 / 5%);

					&:hover {
						background: rgba(variables.$link-color, 0.1);
						color: variables.$link-color;
					}

					&.active {
						background: rgba(variables.$link-color, 0.8);
						color: variables.$white;
						border-color: rgba(variables.$link-color, 0.6);
					}
				}
			}

			.contact-options {
				background: rgba(variables.$card-bg, 0.7);
				border-color: rgba(variables.$border-color, 0.5);
				box-shadow: 0 4px 8px rgb(0 0 0 / 10%);
				backdrop-filter: blur(4px);

				.contact-option {
					background: transparent;
					border-color: rgba(variables.$border-color, 0.2);
					color: variables.$text-color;

					&:hover {
						background: rgba(variables.$link-color, 0.1);
						color: variables.$link-color;
					}

					&:active {
						background: rgba(variables.$link-color, 0.2);
					}
				}
			}
		}
	}

	/* Desktop contact options in light mode */
	@media screen and (min-width: variables.$mobile-breakpoint) {
		.contact-wrapper {
			.contact-options {
				background: rgba(variables.$card-bg, 0.9);
				border-color: rgba(variables.$border-color, 0.3);
				box-shadow: 0 2px 4px rgb(0 0 0 / 5%);
				backdrop-filter: blur(4px);

				.contact-option {
					background: transparent;
					color: variables.$text-color;

					&:hover {
						background: rgba(variables.$link-color, 0.1);
						color: variables.$link-color;
					}

					&:active {
						background: rgba(variables.$link-color, 0.2);
					}

					&:not(:last-child) {
						border-right-color: rgba(variables.$border-color, 0.2);
					}
				}
			}
		}
	}

	/* Light mode for basic blog content - only on mobile */
	@media (max-width: variables.$mobile-breakpoint) {
		.blog-content {
			background-color: variables.$white;
			box-shadow: 0 4px 10px rgb(0 0 0 / 10%);
			border: 1px solid rgb(0 0 0 / 5%);
		}
	}
}

/* Light mode styles */
@media (prefers-color-scheme: light) {
	.blog {

		/* Contact wrapper styles */
		.contact-wrapper {
			.contact-button {
				background: rgba(variables.$card-bg, 0.7);
				border-color: rgba(variables.$border-color, 0.5);
				color: variables.$text-color;
				box-shadow: 0 1px 2px rgb(0 0 0 / 5%);

				&:hover {
					background: rgba(variables.$link-color, 0.1);
					color: variables.$link-color;
				}

				&.active {
					background: rgba(variables.$link-color, 0.8);
					color: variables.$white;
					border-color: rgba(variables.$link-color, 0.6);
				}
			}

			.contact-options {
				background: rgba(variables.$card-bg, 0.7);
				border-color: rgba(variables.$border-color, 0.5);
				box-shadow: 0 4px 8px rgb(0 0 0 / 10%);
				backdrop-filter: blur(4px);

				.contact-option {
					background: transparent;
					border-color: rgba(variables.$border-color, 0.2);
					color: variables.$text-color;

					&:hover {
						background: rgba(variables.$link-color, 0.1);
						color: variables.$link-color;
					}

					&:active {
						background: rgba(variables.$link-color, 0.2);
					}
				}
			}
		}

		/* Desktop contact options */
		@media screen and (min-width: variables.$mobile-breakpoint) {
			.contact-wrapper {
				.contact-options {
					background: rgba(variables.$card-bg, 0.9);
					border-color: rgba(variables.$border-color, 0.3);
					box-shadow: 0 2px 4px rgb(0 0 0 / 5%);
					backdrop-filter: blur(4px);

					.contact-option {
						background: transparent;
						color: variables.$text-color;

						&:hover {
							background: rgba(variables.$link-color, 0.1);
							color: variables.$link-color;
						}

						&:active {
							background: rgba(variables.$link-color, 0.2);
						}

						&:not(:last-child) {
							border-right-color: rgba(variables.$border-color, 0.2);
						}
					}
				}
			}
		}

		/* Light mode for basic blog content */
		.blog-content {
			background-color: variables.$white;
			box-shadow: 0 4px 10px rgb(0 0 0 / 10%);
			border: 1px solid rgb(0 0 0 / 5%);
		}
	}
}