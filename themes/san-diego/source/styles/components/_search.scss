@use '../variables';
@use "sass:color";
@use 'button' as button;

/* Search bar component */
.search-container {
	margin-bottom: 2rem;
	position: relative;
	max-width: 600px;
	margin-left: auto;
	margin-right: auto;
	padding: 0 15px;
	width: 100%;
	box-sizing: border-box;
	display: flex;
	gap: 8px;
	align-items: center;
	
	.search-input-wrapper {
		flex: 1;
		position: relative;
		display: flex;
		align-items: center;
	}

	.search-clear {
		position: absolute;
		right: 8px;
		top: 50%;
		transform: translateY(-50%);
		background: none;
		border: none;
		padding: 4px;
		cursor: pointer;
		opacity: 0.6;
		transition: opacity 0.2s ease;
		display: none;
		z-index: 2;
		box-shadow: none;

		svg {
			width: 14px;
			height: 14px;
			stroke: variables.$text-color-secondary;
		}

		&:hover {
			opacity: 0.8;
			box-shadow: none;
		}

		&:active {
			opacity: 1;
			box-shadow: none;
		}

		&:focus {
			outline: none;
			box-shadow: none;
		}
	}

	.search-icon {
		position: absolute;
		left: 9px;
		top: 50%;
		transform: translateY(-50%);
		width: 16px;
		height: 16px;
		z-index: 2;
		opacity: 0.6;
		transition: opacity 0.2s ease;
		pointer-events: none;

		svg {
			width: 100%;
			height: 100%;
			stroke: variables.$text-color-secondary;
		}
	}

	.search-input {
		flex: 1;
		padding: 8px 36px 8px 32px; // Adjusted left padding for new icon position
		font-size: var(--font-size-sm);
		font-weight: var(--font-weight-medium);
		border: 1px solid variables.$border-color;
		border-radius: 30px;
		background: transparent;
		transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
		box-shadow: none;
		color: variables.$text-color;
		position: relative;
		z-index: 1;

		&:hover {
			border-color: rgba(variables.$black, 0.3);
			background: rgba(variables.$black, 0.05);
			box-shadow: none;
		}

		&:focus {
			outline: none;
			border-color: variables.$link-color;
			background: variables.$white;
			box-shadow:
				0 0 0 2px rgba(variables.$link-color, 0.2),
				0 2px 4px rgba(variables.$link-color, 0.1);

			&+.search-icon {
				opacity: 0.8;
			}
		}

		&:active {
			border-color: variables.$link-color;
		}

		&::placeholder {
			color: variables.$text-color-secondary;
			opacity: 0.6;
			transition: color 0.2s ease;
		}

		/* Clear button styling */
		&::-webkit-search-cancel-button {
			appearance: none;
			height: 14px;
			width: 14px;
			background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
			background-repeat: no-repeat;
			background-position: center;
			cursor: pointer;
			opacity: 0.6;
			transition: opacity 0.2s ease;

			&:hover {
				opacity: 0.8;
			}
		}
	}
	
	.posts-only-button {
		@include button.reusable-button-bordered;
		
		& {
			font-size: var(--font-size-sm);
			white-space: nowrap;
			flex-shrink: 0;
			min-width: fit-content;
		}
		
		&:hover {
			transform: none; // Override any inherited transform
		}
	}
	
	// Reusable bordered button class
	.button-bordered {
		@include button.reusable-button-bordered;
	}
	
	// Mobile responsive styles
	@media (max-width: variables.$mobile-breakpoint) {
		position: fixed;
		left: 50%;
		transform: translateX(-50%);
		bottom: calc(16px + env(safe-area-inset-bottom, 0px));
		width: calc(100% - 24px);
		max-width: 600px;
		padding: 6px;
		margin: 0;
		margin-bottom: 0;
		gap: 6px;
		background: variables.$card-bg;
		border-radius: 32px;
		border: 1px solid rgb(255 255 255 / 10%);
		box-shadow:
			0 1px 3px rgb(0 0 0 / 15%),
			0 20px 30px rgb(0 0 0 / 25%),
			inset 0 1px 3px rgb(255 255 255 / 20%);
		z-index: 1100;
		
		.search-input-wrapper {
			flex: 1 1 auto;
			background: rgba(variables.$white, 0.9);
			border-radius: 22px;
			padding: 0 10px;
			height: 36px;
			box-sizing: border-box;
			box-shadow: inset 0 1px 1px rgb(0 0 0 / 12%);
		}
		
		.search-icon {
			left: 16px;
		}

		.search-input {
			border: none;
			background: transparent;
			padding: 0 28px 0 28px;
			height: 100%;
			line-height: 36px;
			font-size: var(--font-size-xs);
		}
		
		.posts-only-button {
			height: 36px;
			padding: 0 16px;
			border-radius: 20px;
			border: none;
			display: flex;
			align-items: center;
			justify-content: center;
			background: transparent;
			box-shadow: none;
			font-size: var(--font-size-xs);
			font-weight: var(--font-weight-medium);
			color: variables.$text-color-secondary;
			transition: background 0.2s ease, color 0.2s ease;

			&.active {
				background: variables.$link-color;
				color: variables.$white;
				box-shadow: 0 1px 2px rgb(0 0 0 / 20%);
			}
		}
		
		.search-clear {
			right: 18px;
		}
	}
}

@media (max-width: variables.$mobile-breakpoint) {
	.blog {
		padding-bottom: calc(160px + env(safe-area-inset-bottom, 0px));
	}
}

@media (prefers-color-scheme: dark) {
	.search-container {
		.search-icon {
			svg {
				stroke: variables.$text-color-secondary-dark;
			}
		}

		.search-clear {
			box-shadow: none;
			
			svg {
				stroke: variables.$text-color-secondary-dark;
			}
			
			&:hover,
			&:active,
			&:focus {
				box-shadow: none;
			}
		}

		.posts-only-button {
			color: hsl(0, 0%, 75%);
		}

		@media (max-width: variables.$mobile-breakpoint) {
			background: rgba(variables.$card-bg-dark, 0.95);
			border-color: rgba(variables.$border-color-dark, 0.5);

			.search-input-wrapper {
				background: rgba(variables.$black, 0.55);
				box-shadow: inset 0 1px 3px rgb(0 0 0 / 50%);
			}

			.posts-only-button {
				color: variables.$text-color-dark;

				&.active {
					background: variables.$link-color-dark;
				}
			}
		}

		.search-input {
			background: transparent;
			border-color: rgba(variables.$border-color-dark, 0.5);
			color: variables.$text-color-dark;
			box-shadow: none;

			&:focus {
				border-color: variables.$link-color-dark;
				background: rgba(variables.$black, 0.5);
				box-shadow:
					0 0 0 2px rgba(variables.$link-color-dark, 0.2),
					0 2px 4px rgba(variables.$link-color-dark, 0.15);
			}

			&:active {
				border-color: variables.$link-color-dark;
			}

			&:hover {
				border-color: rgba(variables.$white, 0.3);
				background: rgba(variables.$white, 0.05);
				box-shadow: none;
			}

			&::placeholder {
				color: variables.$text-color-secondary-dark;
				opacity: 0.6;
			}

			&::-webkit-search-cancel-button {
				background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23a1a1aa' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cline x1='18' y1='6' x2='6' y2='18'/%3E%3Cline x1='6' y1='6' x2='18' y2='18'/%3E%3C/svg%3E");
			}
		}
	}
}

// No results message
.no-results-message {
	text-align: center;
	padding: 2rem;
	color: variables.$text-color-secondary;
	font-style: italic;
}

@media (prefers-color-scheme: dark) {
	.no-results-message {
		color: variables.$text-color-secondary-dark;
	}
}

// Search highlight styles
.search-highlight,
mark.search-highlight {
	background-color: rgba(variables.$link-color, 0.3);
	color: inherit;
	padding: 0 2px;
	border-radius: 2px;
	font-weight: var(--font-weight-medium);
	display: inline; // Ensure it doesn't break layout
	line-height: inherit; // Preserve line height
	pointer-events: none !important; // Don't interfere with anchor link clicks
	
	@media (prefers-color-scheme: dark) {
		background-color: rgba(variables.$link-color-dark, 0.4);
	}
}

// Ensure search highlights inside links don't interfere with clicks
a .search-highlight,
.post-link-wrapper .search-highlight {
	pointer-events: none !important;
	cursor: pointer !important; // Show link cursor
}

// Ensure search highlights don't break post title layouts
.post-list-item {
	h3 .search-highlight,
	.post-title .search-highlight {
		display: inline; // Keep inline in titles
		vertical-align: baseline; // Align properly
	}
	
	// Fix for post-link-wrapper layout issues
	.post-link-wrapper {
		.search-highlight {
			display: inline;
		}
	}
}
