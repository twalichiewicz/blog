@use 'variables';
@use 'shared-components';

// Core blog layout styles
.blog {
	width: 100%;
	box-sizing: border-box;
	height: auto;
	overflow-x: hidden;
	position: relative;

	.blog-header {
		height: 100vh;
		position: relative;
		display: flex;
		flex-direction: column;
		justify-content: start;
		align-items: center;

		@media (max-width: variables.$mobile-breakpoint) {
			height: 100%;
		}
	}

	.blog-content {
		border-radius: 15px 0 0 0;
		background-color: variables.$white;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
		border: 1px solid rgba(0, 0, 0, 0.03);
		position: relative;
		transition: opacity 0.3s ease-in-out;

		// Dark mode styles moved to _theme-modes.scss
	}

	// Base styles for blog posts
	.blog-posts {
		margin-bottom: 2rem;
	}

	.post-list-item {
		margin: 4.5rem 0;
		padding: 0 1rem;
		max-width: 720px;
		margin-left: auto;
		margin-right: auto;
		transition: variables.$transition-standard;

		.post-byline {
			@extend .byline-base;
		}

		h3 {
			margin: 1.3rem 0 0.8rem;
			line-height: 1.4;

			a {
				color: variables.$text-color;
				text-decoration: none;

				&:hover {
					color: variables.$primary-color;
				}
			}
		}

		p,
		ul,
		ol {
			font-size: 14px;
			line-height: 1.4;
			margin: variables.$spacing-stack 0;
		}

		ul,
		ol {
			padding-left: 1.5rem;

			li {
				margin-bottom: 0.5rem;
				color: variables.$grey-dark;
				font-size: 14px;
				line-height: 1.4;

				&:last-child {
					margin-bottom: 0;
				}
			}
		}

		// Specific list styles
		ul {
			list-style-type: disc;
		}

		ol {
			list-style-type: decimal;
		}

		// Nested lists
		ul ul,
		ol ol,
		ul ol,
		ol ul {
			margin: 0.5rem 0;
		}

		img {
			max-width: 100%;
			height: auto;
			border-radius: 12px;
			margin: 1.5rem auto;
			transition: transform 0.3s ease;

			// Remove margin if image is inside a figure
			figure & {
				margin: 0.5rem auto;
			}

			// Remove margin if image is inside a list item
			li & {
				margin: 0.5rem 0;
			}
		}

		.img-grid {
			display: grid;
			grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
			gap: 1rem;
			margin: 1.5rem 0;

			img {
				margin: 0;
				width: 100%;
				height: 100%;
				object-fit: cover;
				border-radius: 0;
			}
		}

		figure {
			margin: 1.5rem 0;

			img {
				margin: 0 0 0.5rem 0;
			}

			figcaption {
				text-align: center;
				color: variables.$text-color-secondary;
				font-size: 14px;
			}
		}

		blockquote {
			margin: 1.5rem 0;
			padding: 1rem 1.5rem;
			border-left: 2px solid variables.$border-color;
			background: var(--bg-color, rgba(variables.$card-bg, 0.6));
			border-radius: 4px;

			p {
				margin: 0;
				font-size: 14px;
				line-height: 1.5;
				font-style: italic;
				color: variables.$text-color-secondary;
			}
		}

		ol,
		ul {
			margin: 1.4em 0;
			padding-left: 1.5rem;

			li {
				font-size: 14px;
				line-height: 1.5;
				color: variables.$text-color-secondary;
				margin-bottom: 0.5em;

				&:last-child {
					margin-bottom: 0;
				}

				img {
					margin: 0;
					display: inline-block;
					vertical-align: middle;
				}
			}
		}

		.carousel {
			position: relative;
			width: 100%;
			height: auto;
			overflow: hidden;
			background-color: hsl(24, 20%, 85%);
			margin-bottom: 9px;

			&-track {
				position: relative;
				width: 100%;
				height: 400px; // Fixed height for the carousel
				min-height: 300px;
				max-height: 300px;
			}

			&-slide {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				opacity: 0;
				transition: opacity 0.3s ease;
				display: flex;
				align-items: center;
				justify-content: center;

				&.active {
					opacity: 1;
					z-index: 1;
				}

				img {
					max-width: 100%;
					max-height: 100%;
					width: auto;
					height: auto;
					object-fit: contain;
					margin: auto;
				}
			}

			// Remove margins for images in carousels
			img {
				margin: 0;
			}

			// Also handle images wrapped in paragraphs inside carousels
			p {
				&:has(> img:only-child) {
					margin: 0;
					padding: 0;
				}

				>img {
					margin: 0;
				}
			}

			// Remove standalone carousel button styles since they're now inside indicators

			// Add indicator styles for blog carousels - higher specificity to override main carousel styles
			&.carousel .carousel-indicators {
				position: absolute;
				bottom: 16px;
				left: 50%;
				transform: translateX(-50%);
				display: flex;
				align-items: center;
				gap: 8px;
				z-index: 3;
				background-color: rgba(0, 0, 0, 0.6);
				padding: 6px;
				border-radius: 12px;
				margin-bottom: 60px;

				.indicator {
					width: 8px;
					height: 8px;
					border-radius: 50%;
					background: rgba(255, 255, 255, 0.5);
					border: none;
					padding: 0;
					cursor: pointer;

					&.active {
						background: variables.$white;
					}
				}

				// Styles for carousel buttons when inside indicators - higher specificity
				.carousel-button {
					position: static !important;
					transform: none !important;
					width: 16px !important;
					height: 16px !important;
					background: rgba(255, 255, 255, 0.5) !important;
					border-radius: 50% !important;
					padding: 0 !important;
					margin: 0 !important;
					top: auto !important;
					left: auto !important;
					right: auto !important;

					&:hover {
						background: rgba(255, 255, 255, 0.8) !important;
						transform: scale(1.1) !important;
					}

					&.prev::before,
					&.next::before {
						content: '';
						width: 4px !important;
						height: 4px !important;
						border: 1px solid variables.$white !important;
						border-left: 0 !important;
						border-bottom: 0 !important;
						position: absolute;
					}

					&.prev::before {
						transform: rotate(-135deg) !important;
						right: 5px !important;
					}

					&.next::before {
						transform: rotate(45deg) !important;
						left: 5px !important;
					}
				}
			}
		}
	}

	.post-separator {
		border: none;
		height: 1px;
		background: linear-gradient(to right,
				transparent,
				rgba(variables.$border-color, 0.3),
				transparent);
		margin: 1.5rem auto;
		width: 90%;
		box-shadow: 0 0 1px rgba(variables.$border-color, 0.05);
	}

	.project-separator {
		border: none;
		height: 1px;
		background: linear-gradient(to right,
				transparent,
				rgba(variables.$border-color, 0.2),
				transparent);
		margin: 1.5rem auto;
		width: 80%;
		box-shadow: 0 0 1px rgba(variables.$border-color, 0.05);
	}

	.archive-link {
		text-align: center;

		a {
			display: inline-block;
			padding: 1rem 2.5rem;
			text-decoration: none;
			color: variables.$link-color-dark;
			border: 1px solid currentColor;
			text-transform: uppercase;
			letter-spacing: 0.2em;
			font-size: 0.8rem;
			transition: all 0.3s ease;
			background-color: transparent;

			&:hover {
				background-color: currentColor;
				color: var(--bg-color, variables.$white);
			}
		}
	}

	.page-navigation {
		display: flex;
		justify-content: space-between;
		margin-top: 2rem;
		padding: 0 2rem;

		button {
			padding: 0.5rem 1rem;
			border: 1px solid currentColor;
			background: transparent;
			cursor: pointer;
			font-family: inherit;
			transition: all 0.3s ease;
			color: variables.$link-color-dark;

			&:hover {
				background: currentColor;
				color: var(--bg-color, variables.$white);
			}
		}
	}

	.view-toggle {
		display: none !important;

		&.list-view {
			display: none !important;
		}

		.list-view {
			display: none !important;
		}
	}

	.blog-list {
		margin: 0 auto;
		max-width: 600px;
		width: 100%;
		padding: 0 2rem;
		box-sizing: border-box;

		.post-list-item {
			max-width: 75ch;
			margin: 0 auto;
			padding: 0 12px;
			position: relative;

			&:last-child {
				margin-bottom: 0;
			}

			.post-byline {
				@extend .byline-base;
			}

			h3 {
				font-size: 1rem;
				margin: 0 0 0.4rem;
				line-height: 1.4;

				a {
					color: inherit;
					text-decoration: none;

					&:hover {
						text-decoration: underline;
					}
				}
			}

			p {
				margin: 0 0 1.4em 0;
				line-height: 1.5;
				font-size: 14px;
				color: variables.$text-color;

				blockquote {
					color: variables.$text-color-secondary;
				}
			}

			p:last-of-type {
				margin-bottom: 0;
			}

			// Update list styles to handle images properly
			ol,
			ul {
				li {
					img {
						margin: 0; // Remove margin from images in lists
						display: inline-block; // Allow images to flow with text
						vertical-align: middle; // Align with text
					}
				}
			}

			// Keep existing image styles for non-list contexts
			>img {
				max-width: 100%;
				height: auto;
				border-radius: 12px;
				margin: 1.5rem 0;
				transition: transform 0.3s ease;
			}

			// Make the selector more specific to override existing styles
			p>img:first-child:last-child,
			p>img:only-child {
				margin: 0 !important;
			}
		}

		.post-link-wrapper {
			text-decoration: none;
			color: inherit;
			display: block;

			&:hover {
				.post-list-item.post-link {
					transform: translateY(-2px);
				}
			}
		}

		.post-list-item.post-link {
			@extend .card-base;
			margin-bottom: 1rem;

			h3 {
				font-size: 1rem;
				margin: 0.25rem 0;
			}

			.post-byline {
				@extend .byline-base;
			}

			p {
				font-size: 14px;
				margin: 0.25rem 0;
				line-height: 1.3;
			}

			.link-source {
				font-size: 0.75rem;
				margin-top: 0;
				margin-bottom: 0;

				.link-url {
					font-size: 10px;
					color: variables.$text-color-secondary;
					opacity: 0.8;
					text-decoration: none;
				}
			}

			.link-share {
				h3 {
					margin: 0.25rem 0;
					font-size: 1rem;
					line-height: 1.3;
					color: variables.$text-color;
					display: flex;
					flex-direction: row;
					align-items: flex-start;
					justify-content: space-between;
					gap: 0.5rem;

					&:hover {
						color: variables.$link-color;
					}

					.link-text-group {
						@extend .link-text;
					}
				}

				.content-accordion {
					@extend .content-accordion;
				}
			}
		}
	}

	#bookNavigation {
		display: none;
	}

	#bookView:not([style*="display: none"])~#bookNavigation {
		display: flex;
	}

	.blog-header-wave {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 300px;
		z-index: 0;
		opacity: 0.3;
		pointer-events: none;
		overflow: hidden;

		canvas {
			width: 100%;
			height: 100%;
			max-width: 100vw;
		}
	}
}

// General image styles
img {
	max-width: 100%;
	height: auto;
	border-radius: 12px;
	transition: transform 0.3s ease;
}

// Handle paragraphs containing only images
p {
	&:has(> img:only-child) {
		margin: 0;
		padding: 0;

		img {
			margin: 1.5rem auto; // Keep consistent spacing from image styles
		}
	}

	// For browsers that don't support :has
	img:first-child:last-child {
		margin: 1.5rem auto;

		+* {
			margin-top: 0;
		}
	}
}

// Ensure proper spacing when images are mixed with text
p {
	img:not(:only-child) {
		margin: 1rem 0;
	}
}

// Blog post specific styling
.post-list-item.blog {

	// Reset base paragraph margins
	>p {
		margin: 1rem 0; // Default paragraph spacing

		// Remove spacing when paragraph only contains an image
		&:has(> img:only-child) {
			margin: 0;
			padding: 0;
		}

		// Handle the image itself
		>img {
			margin: 1.5rem 0;
			max-width: 100%;
			height: auto;
			border-radius: 12px;
			transition: transform 0.3s ease;
		}

		// If it's the first paragraph and contains only an image
		&:first-child:has(> img:only-child) {
			margin-top: 0;

			>img {
				margin-top: 0;
			}
		}

		// If it's the last paragraph and contains only an image
		&:last-child:has(> img:only-child) {
			margin-bottom: 0;

			>img {
				margin-bottom: 0;
			}
		}
	}
}

// Remove top and bottom margins for articles in #postsContent
#postsContent .post-list-item {
	margin-top: 0;
	margin-bottom: 0;
}

// Styles for dynamic content loading
.blog-content {
	position: relative; // Ensures back button positioning context
	transition: opacity 0.3s ease-in-out;
}

.dynamic-back-button {
	// Positioning and specific radius from previous state
	position: absolute;
	top: 0px;
	left: 0px;
	border-bottom-right-radius: 12px; // Keep this specific radius
	z-index: 1000;

	// Styles from .project-collapse-button
	display: flex;
	align-items: center;
	gap: 0;
	padding: 4px 10px;
	// border-radius: 6px; // Overridden by border-bottom-right-radius and general reset below
	color: rgba(0, 0, 0, 0.7);
	font-size: 12px;
	font-weight: 500;
	background: rgba(255, 255, 255, 0.8);
	border: 1px solid rgba(0, 0, 0, 0.1); // General border
	box-shadow:
		0 1px 2px rgba(0, 0, 0, 0.05),
		0 1px 1px rgba(0, 0, 0, 0.03),
		inset 0 1px 0 rgba(255, 255, 255, 0.8);
	transition: all 0.2s ease;
	cursor: pointer;
	flex-shrink: 0;
	width: auto;
	text-decoration: none; // Ensure no text decoration from browser defaults

	// Reset other border-radius corners to ensure only bottom-right is active
	border-top-left-radius: 0;
	border-top-right-radius: 0;
	border-bottom-left-radius: 0;

	svg {
		width: 16px;
		height: 16px;
		margin-right: 6px;
		transition: transform 0.3s ease;
		flex-shrink: 0;
	}

	span {
		line-height: 16px;
	}

	&:hover {
		background: rgba(255, 255, 255, 0.95);
		color: rgba(0, 0, 0, 0.7); // Ensure text color remains on hover
		box-shadow:
			0 2px 4px rgba(0, 0, 0, 0.08),
			0 1px 2px rgba(0, 0, 0, 0.05),
			inset 0 1px 0 rgba(255, 255, 255, 1);
	}

	&:active {
		background: rgba(240, 240, 240, 0.9);
		box-shadow:
			0 1px 1px rgba(0, 0, 0, 0.05),
			inset 0 1px 3px rgba(0, 0, 0, 0.1);
	}

	&:focus {
		// Keep existing focus style for accessibility
		outline: 2px solid var(--focus-ring-color, Highlight);
		outline-offset: 2px;
	}
}