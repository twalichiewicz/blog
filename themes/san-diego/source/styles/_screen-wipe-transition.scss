@use 'variables';
@use 'sass:color';

// Screen wipe transition for dynamic content loading
.screen-wipe-transition {
	position: fixed;
	top: var(--blog-top, 0);
	left: var(--blog-left, 0);
	width: var(--blog-width, 100%);
	height: var(--blog-height, 100%);
	z-index: 9999;
	pointer-events: none;
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 0; // No border radius needed
	overflow: hidden;
	
	// Wipe panels (left and right)
	&::before,
	&::after {
		content: '';
		position: absolute;
		top: 0;
		width: 50%;
		height: 100%;
		background: variables.$body-bg;
		transform-origin: center;
		transition: transform 0.6s cubic-bezier(0.65, 0, 0.35, 1);
		
		@media (prefers-color-scheme: dark) {
			background: variables.$body-bg-dark;
		}
	}
	
	// Left panel
	&::before {
		left: 0;
		transform: translateX(-100%);
		border-radius: 12px 0 0 0; // Match container top-left radius
	}
	
	// Right panel
	&::after {
		right: 0;
		transform: translateX(100%);
	}
	
	// Active state - panels slide in
	&.active {
		pointer-events: all;
		
		&::before {
			transform: translateX(0);
		}
		
		&::after {
			transform: translateX(0);
		}
		
		.loading-symbol {
			opacity: 1;
			transform: scale(1);
			transition-delay: 0.3s;
		}
	}
	
	// Reverse state - panels slide out revealing content
	&.reverse {
		pointer-events: all;
		
		&::before {
			transform: translateX(-100%);
			transition-delay: 0.1s;
		}
		
		&::after {
			transform: translateX(100%);
			transition-delay: 0.1s;
		}
		
		.loading-symbol {
			opacity: 0;
			transform: scale(0.8);
			transition: all 0.2s ease-out;
		}
	}
	
	// Loading symbol
	.loading-symbol {
		position: relative;
		z-index: 10000;
		opacity: 0;
		transform: scale(0.8);
		transition: all 0.3s ease-out;
		
		// Spinner
		.spinner {
			width: 40px;
			height: 40px;
			border: 2px solid rgba(variables.$text-color-secondary, 0.2);
			border-top-color: variables.$text-color-secondary;
			border-radius: 50%;
			animation: spin 0.8s linear infinite;
			
			@media (prefers-color-scheme: dark) {
				border-color: rgba(variables.$text-color-secondary-dark, 0.2);
				border-top-color: variables.$text-color-secondary-dark;
			}
		}
		
		// Optional loading text
		.loading-text {
			position: absolute;
			top: 100%;
			left: 50%;
			transform: translateX(-50%);
			margin-top: 12px;
			font-size: var(--font-size-xs);
			font-weight: var(--font-weight-medium);
			letter-spacing: 0.05em;
			text-transform: uppercase;
			color: variables.$text-color-secondary;
			white-space: nowrap;
			
			@media (prefers-color-scheme: dark) {
				color: variables.$text-color-secondary-dark;
			}
		}
	}
}

// Spinner animation
@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

// Content fade adjustment during transition
.blog-content.transitioning {
	overflow: hidden;
	
	> * {
		opacity: 0;
		transition: opacity 0.3s ease-out;
	}
	
	&.content-ready > * {
		opacity: 1;
		transition-delay: 0.4s;
	}
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
	.screen-wipe-transition {
		&::before,
		&::after {
			transition: transform 0.3s ease;
		}
		
		.loading-symbol .spinner {
			animation: none;
			border-color: variables.$text-color-secondary;
			
			@media (prefers-color-scheme: dark) {
				border-color: variables.$text-color-secondary-dark;
			}
		}
	}
}